var renderer = null;
var scene = null;
var camera = null;

function AddTriangle (scene, material, z)
{
    var geometry = new THREE.Geometry ();
    
    geometry.vertices.push (new THREE.Vector3 (0.0, 0.0, z));
    geometry.vertices.push (new THREE.Vector3 (1.0, 0.0, z));
    geometry.vertices.push (new THREE.Vector3 (1.0, 1.0, z));
    
    var face = new THREE.Face3 (0, 1, 2);
    geometry.faces.push (face);
    
    geometry.computeFaceNormals ();
    
    var mesh = new THREE.Mesh (geometry, material);
    scene.add (mesh);	
}

renderer = new THREE.WebGLRenderer ();
renderer.setSize (400, 400);

document.body.appendChild (renderer.domElement);

scene = new THREE.Scene ();
camera = new THREE.PerspectiveCamera (45, 800 / 600, 0.1, 10000);
camera.position.set (3, 1, 2);
camera.up.set (0, 0, 1);
camera.lookAt (new THREE.Vector3 (0, 0, 0));
scene.add (camera);

var material = new THREE.MeshLambertMaterial ({
    color: 0x00cc00,
    opacity : 0.8,
    transparent : true,
    side : THREE.DoubleSide
});

AddTriangle (scene, material, 0.0);
AddTriangle (scene, material, 0.3);

var directionalLight = new THREE.DirectionalLight (0xffffff);
directionalLight.position.set (3, 1, 2).normalize ();
scene.add (directionalLight);

renderer.setClearColor (0xffffff);
renderer.render (scene, camera);
