/**
 * skylark-jsmodeler - A version of jsmodeler that ported to running on skylarkjs
 * @author Hudaokeji, Inc.
 * @version v0.9.0
 * @link https://github.com/skylark-integration/skylark-jsmodeler/
 * @license MIT
 */
define(["../core/jsm"],function(e){return e.ReadBinaryStlFile=function(n,r){function t(e,n,t,a){void 0!==r.onFace&&null!==r.onFace&&r.onFace(e,n,t,a)}function a(e){var n,r=[];for(n=0;n<3;n++)r[n]=e.ReadFloat32();return r}void 0!==r&&null!==r||(r={});var i=new e.BinaryReader(n,!0);i.Skip(80);var l,o,d,u,f,c=i.ReadUnsignedInteger32();for(l=0;l<c;l++)f=a(i),o=a(i),d=a(i),u=a(i),i.Skip(2),t(o,d,u,f)},e.ReadAsciiStlFile=function(e,n){function r(e,r){function t(e,n){return e[n].trim()}var a=t(e,r);if(0===a.length)return r+1;var i=a.split(/\s+/);if(0===i.length)return r+1;if("solid"==i[0])return r+1;if("facet"==i[0]&&"normal"==i[1]){if(i.length<5)return-1;var l=[parseFloat(i[2]),parseFloat(i[3]),parseFloat(i[4])],o=[],d=function(e,n,r){var a,i,l,o;for(a=n;a<e.length&&r.length<3;a++)if(0!==(i=t(e,a)).length&&0!==(l=i.split(/\s+/)).length&&"vertex"==l[0]){if(l.length<4)break;o=[parseFloat(l[1]),parseFloat(l[2]),parseFloat(l[3])],r.push(o)}return a+1}(e,r+1,o);return 3!=o.length?-1:(function(e,r,t,a){void 0!==n.onFace&&null!==n.onFace&&n.onFace(e,r,t,a)}(o[0],o[1],o[2],l),d)}return r+1}void 0!==n&&null!==n||(n={});for(var t=0,a=e.split("\n");t<a.length&&-1!=t;)t=r(a,t)},e.IsBinaryStlFile=function(n){var r=n.byteLength;if(r<84)return!1;var t=new e.BinaryReader(n,!0);return t.Skip(80),r==50*t.ReadUnsignedInteger32()+84},e.ConvertStlToJsonData=function(n,r){var t=new e.TriangleModel,a=t.AddBody(new e.TriangleBody("Default")),i=t.GetBody(a);return null!==n?e.ReadBinaryStlFile(n,{onFace:function(n,r,t,a){var l=i.AddVertex(n[0],n[1],n[2]),o=i.AddVertex(r[0],r[1],r[2]),d=i.AddVertex(t[0],t[1],t[2]),u=new e.Vector(a[0],a[1],a[2]).Normalize(),f=i.AddNormal(u.x,u.y,u.z);i.AddTriangle(l,o,d,f,f,f)}}):null!==r&&e.ReadAsciiStlFile(r,{onFace:function(n,r,t,a){var l=i.AddVertex(n[0],n[1],n[2]),o=i.AddVertex(r[0],r[1],r[2]),d=i.AddVertex(t[0],t[1],t[2]),u=new e.Vector(a[0],a[1],a[2]).Normalize(),f=i.AddNormal(u.x,u.y,u.z);i.AddTriangle(l,o,d,f,f,f)}}),t.Finalize(),e.ConvertTriangleModelToJsonData(t)},e});
//# sourceMappingURL=../sourcemaps/import/importerstl.js.map
