/**
 * skylark-jsmodeler - A version of jsmodeler that ported to running on skylarkjs
 * @author Hudaokeji, Inc.
 * @version v0.9.0
 * @link https://github.com/skylark-integration/skylark-jsmodeler/
 * @license MIT
 */
define(["../core/jsm"],function(n){return n.ConvertContourPolygonToPolygon2D=function(e,o){function t(n,e,o,t,r){n.AddVertexCoord(e),void 0!==o&&null!==o&&o.push([t,r])}function r(e,o,r,u,l){var i=function(e,o,t,r){function u(e,o,t,r,u){function l(e,o,t){var r=new n.Sector2D(o,t),u=e.SectorPosition(r,-1,-1);return u==n.SectorPolygonPosition2D.IntersectionOnePoint||u==n.SectorPolygonPosition2D.IntersectionCoincident}if(l(o,t,r))return!1;var i;for(i=1;i<e.ContourCount();i++)if(void 0===u.addedHoles[i]&&l(e.GetContour(i),t,r))return!1;return!0}function l(n,e){var o;for(o=0;o<e.entryPositions.length;o++)if(n.IsEqual(e.entryPositions[o]))return!0;return!1}var i,a,f,s,g=e.GetContour(t);for(i=0;i<o.VertexCount();i++)for(a=0;a<g.VertexCount();a++)if(u(e,o,f=o.GetVertex(i),s=g.GetVertex(a),r)){if(l(f,r)||l(s,r))continue;return r.entryPositions.push(f.Clone()),r.entryPositions.push(s.Clone()),{beg:i,end:a}}return null}(e,o,r,l);return null!==i&&(function(e,o,r,u,l){var i=o.GetContour(r),a=u.beg,f=e.GetVertex(a).Clone();e.ShiftVertices(a+1);var s=0,g=0;void 0!==l&&null!==l&&(s=l[a][0],g=l[a][1],n.ShiftArray(l,a+1));var y=u.end,c=i.GetPrevVertex(y);i.EnumerateVertices(y,c,function(n){t(e,i.GetVertex(n).Clone(),l,r,n)}),t(e,i.GetVertex(y).Clone(),l,r,y),t(e,f,l,s,g)}(o,e,r,i,u),!0)}var u,l=e.ContourCount(),i=e.GetContour(0),a=new n.Polygon2D;for(u=0;u<i.VertexCount();u++)t(a,i.GetVertex(u).Clone(),o,0,u);if(1==l)return a;var f,s=[];for(f=1;f<l;f++)s.push(f);for(var g={addedHoles:{},holeTryouts:{},entryPositions:[]};s.length>0;)if(r(e,a,f=s.shift(),o,g))g.addedHoles[f]=!0;else{if(void 0===g.holeTryouts[f]&&(g.holeTryouts[f]=0),g.holeTryouts[f]+=1,g.holeTryouts[f]>10)return null;s.push(f)}return a},n.TriangulateConvexPolygon=function(n){var e,o=[];for(e=1;e<n.VertexCount()-1;e++)o.push([0,e,e+1]);return o},n.TriangulateConcavePolygon2D=function(e){function o(n){var e,o,t=n.VertexCount();for(e=0;e<t;e++)for(o=0;o<t;o++)if(e!=o&&n.IsDiagonal(e,o))return{beg:e,end:o};return null}function t(e,o){function t(n,e,o){e.polygon.AddVertexCoord(n.polygon.GetVertex(o)),e.map.push(n.map[o])}var r,u,l={polygon:new n.Polygon2D,map:[]},i={polygon:new n.Polygon2D,map:[]};return r=o.beg,u=e.polygon.GetPrevVertex(o.end),t(e,l,o.end),e.polygon.EnumerateVertices(r,u,function(n){t(e,l,n)}),r=o.end,u=e.polygon.GetPrevVertex(o.beg),t(e,i,o.beg),e.polygon.EnumerateVertices(r,u,function(n){t(e,i,n)}),{resultData1:l,resultData2:i}}var r=[],u=function(n){var e,o=[];for(e=0;e<n;e++)o[e]=e;return o}(e.VertexCount());r.push({polygon:e,map:u});for(var l,i,a,f,s=[];r.length>0;)if(!((i=(l=r.pop()).polygon.VertexCount())<3))if(3!=i){if(null===(a=o(l.polygon)))return null;f=t(l,a),r.push(f.resultData1),r.push(f.resultData2)}else s.push(l.map);return s},n.TriangulatePolygon2D=function(e){if(null===e)return null;var o=e.VertexCount();if(o<3)return null;if(3==o)return[[0,1,2]];var t=e.GetComplexity();return t===n.Complexity.Invalid?null:t==n.Complexity.Convex?n.TriangulateConvexPolygon(e):n.TriangulateConcavePolygon2D(e)},n.TriangulatePolygon=function(e){var o=e.ToPolygon2D();return n.TriangulatePolygon2D(o)},n});
//# sourceMappingURL=../sourcemaps/geometry/triangulation.js.map
