/**
 * skylark-jsmodeler - A version of jsmodeler that ported to running on skylarkjs
 * @author Hudaokeji, Inc.
 * @version v0.9.0
 * @link https://github.com/skylark-integration/skylark-jsmodeler/
 * @license MIT
 */
define(["../core/jsm"],function(e){return e.ConvexHull2D=function(t){function r(t,r){var i,n=t.length,s=0;for(i=1;i<n;i++)r==s?s=i:e.CoordOrientation2D(t[r],t[s],t[i])==e.Orientation.Clockwise&&(s=i);return s}var i=[];if(t.length<3)return i;var n,s=function(t){var r,i,n=t.length,s=e.Inf,o=-1;for(r=0;r<n;r++)i=t[r].x,e.IsLower(i,s)&&(s=i,o=r);return o}(t),o=s;do{i.push(o),o=n=r(t,o)}while(n!=s);return i},e.ConvexHull3D=function(t){function r(e,t){var r=new function(){this.position=null};return r.position=t,e.vertices.push(r),e.vertices.length-1}function i(e,t,r,i){var n,s,o=-1;for(n=0;n<e.edges.length;n++)if((s=e.edges[n]).vert1==r&&s.vert2==i||s.vert1==i&&s.vert2==r){o=n;break}if(-1==o){var v=new function(){this.vert1=null,this.vert2=null,this.tri1=null,this.tri2=null};v.vert1=r,v.vert2=i,v.tri1=-1,v.tri2=-1,e.edges.push(v),o=e.edges.length-1}var l=e.edges[o];return l.tri1!=t&&l.tri2!=t&&(-1==l.tri1?l.tri1=t:-1==l.tri2&&(l.tri2=t)),o}function n(e,t,r,n){var s=e.triangles.length,o=i(e,s,t,r),v=i(e,s,r,n),l=i(e,s,n,t),u=new function(){this.vertices=null,this.edges=null,this.valid=null};return u.vertices=[t,r,n],u.edges=[o,v,l],u.valid=!0,e.triangles.push(u),e.triangles.length-1}function s(e,t,r){var i=e.edges[r];i.tri1==t?i.tri1=-1:i.tri2==t&&(i.tri2=-1)}function o(e,t){var r=e.triangles[t];r.valid&&(s(e,t,r.edges[0]),s(e,t,r.edges[1]),s(e,t,r.edges[2]),r.valid=!1)}function v(t,r,i,n,s){return!e.IsLower(function(t,r,i,n,s){var o=t.vertices[r].position,v=t.vertices[i].position,l=t.vertices[n].position,u=t.vertices[s].position,c=e.CoordSub(o,u),g=e.CoordSub(v,u),a=e.CoordSub(l,u);return e.VectorDot(c,e.VectorCross(g,a))/6}(t,r,i,n,s),0)}function l(e,t){var r,i,s,l,u,c,g,a,h=[];for(r=0;r<e.triangles.length;r++)(i=e.triangles[r]).valid&&v(e,i.vertices[0],i.vertices[2],i.vertices[1],t)?h.push(!0):h.push(!1);var f,d=[];for(r=0;r<h.length;r++)h[r]&&(i=e.triangles[r]).valid&&(s=e.edges[i.edges[0]],l=e.edges[i.edges[1]],u=e.edges[i.edges[2]],c=-1==s.tri1||-1==s.tri2||h[s.tri1]!=h[s.tri2],g=-1==l.tri1||-1==l.tri2||h[l.tri1]!=h[l.tri2],a=-1==u.tri1||-1==u.tri2||h[u.tri1]!=h[u.tri2],c&&d.push([i.vertices[0],i.vertices[1],t]),g&&d.push([i.vertices[1],i.vertices[2],t]),a&&d.push([i.vertices[2],i.vertices[0],t]));for(r=0;r<h.length;r++)h[r]&&(i=e.triangles[r]).valid&&o(e,r);for(r=0;r<d.length;r++)n(e,(f=d[r])[0],f[1],f[2])}var u=[],c=t.length;if(c<4)return u;var g,a,h=new function(){this.vertices=[],this.edges=[],this.triangles=[]};for(g=0;g<c;g++)r(h,t[g]);for(function(e){var t=-1;t=v(e,0,1,2,3)?n(e,0,1,2):n(e,0,2,1);var r=e.triangles[t];n(e,r.vertices[0],r.vertices[2],3),n(e,r.vertices[2],r.vertices[1],3),n(e,r.vertices[1],r.vertices[0],3)}(h),g=4;g<c;g++)l(h,g);for(g=0;g<h.triangles.length;g++)(a=h.triangles[g]).valid&&u.push(a.vertices);return u},e});
//# sourceMappingURL=../sourcemaps/geometry/convexhull.js.map
