/**
 * skylark-jsmodeler - A version of jsmodeler that ported to running on skylarkjs
 * @author Hudaokeji, Inc.
 * @version v0.9.0
 * @link https://github.com/skylark-integration/skylark-jsmodeler/
 * @license MIT
 */
define(["../core/jsm"],function(n){return n.Orientation={Invalid:0,CounterClockwise:1,Clockwise:2},n.MidCoord2D=function(o,r){return new n.Coord2D((o.x+r.x)/2,(o.y+r.y)/2)},n.CoordOrientation2D=function(o,r,t){var e=o.x,i=o.y,a=r.x,c=r.y,l=t.x,u=t.y,C=e*c+i*l+a*u-c*l-i*a-e*u;return n.IsPositive(C)?n.Orientation.CounterClockwise:n.IsNegative(C)?n.Orientation.Clockwise:n.Orientation.Invalid},n.CoordSignedDistance2D=function(o,r,t){var e=n.CoordSub2D(r,o),i=o.DistanceTo(r),a=e.AngleTo(t);return n.IsPositive(a)&&(i=-i),i},n.PolarToCartesian=function(o,r){var t=new n.Coord2D(0,0);return t.x=o*Math.cos(r),t.y=o*Math.sin(r),t},n.GetArcLengthFromAngle=function(n,o){return o*n},n.GetAngleFromArcLength=function(o,r){return n.IsEqual(o,0)?0:r/o},n.MidCoord=function(o,r){return new n.Coord((o.x+r.x)/2,(o.y+r.y)/2,(o.z+r.z)/2)},n.CoordSignedDistance=function(o,r,t){var e=n.CoordSub(r,o),i=o.DistanceTo(r),a=e.AngleTo(t);return n.IsPositive(a)&&(i=-i),i},n.GetVectorsFullAngle=function(o,r,t){var e=o.AngleTo(r),i=new n.Coord(0,0,0);return n.CoordOrientation(o,i,r,t)==n.Orientation.Clockwise&&(e=2*Math.PI-e),e},n.CoordOrientation=function(o,r,t,e){var i=o.ToCoord2D(e),a=r.ToCoord2D(e),c=t.ToCoord2D(e),l=n.CoordOrientation2D(i,a,c),u=new n.Vector(0,0,1),C=e.AngleTo(u);return n.IsEqual(C,Math.PI)&&(l==n.Orientation.CounterClockwise?l=n.Orientation.Clockwise:l==n.Orientation.Clockwise&&(l=n.Orientation.CounterClockwise)),l},n.SphericalToCartesian=function(o,r,t){var e=new n.Coord(0,0,0);return e.x=o*Math.sin(r)*Math.cos(t),e.y=o*Math.sin(r)*Math.sin(t),e.z=o*Math.cos(r),e},n.CylindricalToCartesian=function(o,r,t){var e=new n.Coord(0,0,0);return e.x=o*Math.cos(t),e.y=o*Math.sin(t),e.z=r,e},n.GetArcLength=function(n,o,r){return n.AngleTo(o)*r},n.GetFullArcLength=function(o,r,t,e){return n.GetVectorsFullAngle(o,r,e)*t},n.CalculateCentroid=function(o){var r=o.length,t=new n.Coord(0,0,0);if(r>=1){var e;for(e=0;e<r;e++)t=n.CoordAdd(t,o[e]);t.MultiplyScalar(1/r)}return t},n.CalculateTriangleNormal=function(o,r,t){var e=n.CoordSub(r,o),i=n.CoordSub(t,o),a=new n.Vector(0,0,0);return a.x=e.y*i.z-e.z*i.y,a.y=e.z*i.x-e.x*i.z,a.z=e.x*i.y-e.y*i.x,a.Normalize(),a},n.CalculateNormal=function(o){var r,t,e,i,a=o.length,c=new n.Vector(0,0,0);if(a>=3)for(r=0;r<a;r++)t=(r+1)%a,e=o[r%a],i=o[t],c.x+=(e.y-i.y)*(e.z+i.z),c.y+=(e.z-i.z)*(e.x+i.x),c.z+=(e.x-i.x)*(e.y+i.y);return c.Normalize(),c},n.BarycentricInterpolation=function(o,r,t,e,i,a,c){function l(n,o,r){var t=(n+o+r)/2,e=t*(t-n)*(t-o)*(t-r);return e<0?0:Math.sqrt(e)}var u=o.DistanceTo(r),C=r.DistanceTo(t),s=t.DistanceTo(o),d=o.DistanceTo(c),y=r.DistanceTo(c),f=t.DistanceTo(c),v=l(u,C,s);if(n.IsZero(v))return e;var x=l(u,d,y),D=l(C,y,f),T=l(s,d,f),g=e.Clone().MultiplyScalar(D),h=i.Clone().MultiplyScalar(T),w=a.Clone().MultiplyScalar(x),M=n.CoordAdd(n.CoordAdd(g,h),w);return M.MultiplyScalar(1/v),M},n});
//# sourceMappingURL=../sourcemaps/geometry/coordutils.js.map
