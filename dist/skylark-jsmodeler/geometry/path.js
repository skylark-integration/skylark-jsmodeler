/**
 * skylark-jsmodeler - A version of jsmodeler that ported to running on skylarkjs
 * @author Hudaokeji, Inc.
 * @version v0.9.0
 * @link https://github.com/skylark-integration/skylark-jsmodeler/
 * @license MIT
 */
define(["../core/jsm"],function(t){return t.Path2D=function(o){this.settings={segmentation:10,offset:new t.Vector2D(0,0),scale:new t.Coord2D(1,1)},t.CopyObjectProperties(o,this.settings,!0),this.position=new t.Coord2D(0,0),this.positionAdded=!1,this.polygons=[],this.currentPolygon=null},t.Path2D.prototype.MoveTo=function(t,o){this.Close(),this.position.Set(t,o),this.positionAdded=!1},t.Path2D.prototype.LineTo=function(t,o){this.positionAdded||this.AddPolygonPoint(this.position.x,this.position.y),this.AddPolygonPoint(t,o)},t.Path2D.prototype.CubicBezierTo=function(o,n,e,i,r,s){var u,h=t.GenerateCubicBezierCurve(new t.Coord2D(this.position.x,this.position.y),new t.Coord2D(e,i),new t.Coord2D(r,s),new t.Coord2D(o,n),this.settings.segmentation);for(u=1;u<h.length;u++)this.LineTo(h[u].x,h[u].y)},t.Path2D.prototype.Close=function(){if(null!==this.currentPolygon){if(0!==(e=this.currentPolygon).VertexCount()&&(e.GetVertex(0).IsEqual(e.GetVertex(e.VertexCount()-1))&&e.RemoveVertex(e.VertexCount()-1),!(e.VertexCount()<3))){var o=function(o,n){function e(o,n){if(s=r.GetOrientation(),u=n.GetOrientation(),s!==u){var e=n.GetVertex(0);if(r.CoordPosition(e)==t.CoordPolygonPosition2D.Inside)return!0}return!1}var i,r,s,u;for(i=o.length-1;i>=0;i--)if(r=o[i].GetContour(0),e(0,n))return o[i];return null}(this.polygons,this.currentPolygon);if(null===o){var n=new t.ContourPolygon2D;n.AddContour(this.currentPolygon),this.polygons.push(n)}else o.AddContour(this.currentPolygon)}this.currentPolygon=null}var e},t.Path2D.prototype.PolygonCount=function(){return this.polygons.length},t.Path2D.prototype.GetPolygon=function(t){return this.polygons[t]},t.Path2D.prototype.GetPolygons=function(){return this.polygons},t.Path2D.prototype.GetCurrentPolygon=function(){return null===this.currentPolygon&&(this.currentPolygon=new t.Polygon2D),this.currentPolygon},t.Path2D.prototype.AddPolygonPoint=function(t,o){var n=this.GetCurrentPolygon(),e=this.settings.offset.x+t*this.settings.scale.x,i=this.settings.offset.y+o*this.settings.scale.y;n.AddVertex(e,i),this.position.Set(t,o),this.positionAdded=!0},t});
//# sourceMappingURL=../sourcemaps/geometry/path.js.map
