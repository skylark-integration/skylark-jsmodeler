/**
 * skylark-jsmodeler - A version of jsmodeler that ported to running on skylarkjs
 * @author Hudaokeji, Inc.
 * @version v0.9.0
 * @link https://github.com/skylark-integration/skylark-jsmodeler/
 * @license MIT
 */
define(["../core/jsm"],function(o){return o.Polygon=function(){this.vertices=null,this.cache=null,this.Clear()},o.Polygon.prototype.AddVertex=function(t,r,e){this.AddVertexCoord(new o.Coord(t,r,e))},o.Polygon.prototype.AddVertexCoord=function(o){this.vertices.push(o),this.ClearCache()},o.Polygon.prototype.GetVertex=function(o){return this.vertices[o]},o.Polygon.prototype.VertexCount=function(){return this.vertices.length},o.Polygon.prototype.GetNextVertex=function(t){return o.NextIndex(t,this.vertices.length)},o.Polygon.prototype.ReverseVertices=function(){this.vertices.reverse(),this.ClearCache()},o.Polygon.prototype.GetPrevVertex=function(t){return o.PrevIndex(t,this.vertices.length)},o.Polygon.prototype.GetVertexAngle=function(t){var r=this.vertices[this.GetPrevVertex(t)],e=this.vertices[t],n=this.vertices[this.GetNextVertex(t)],u=o.CoordSub(r,e),i=o.CoordSub(n,e);return u.AngleTo(i)},o.Polygon.prototype.GetNormal=function(){if(null!==this.cache.normal)return this.cache.normal;var t=o.CalculateNormal(this.vertices);return this.cache.normal=t,t},o.Polygon.prototype.ToPolygon2D=function(){var t,r,e=this.GetNormal(),n=new o.Polygon2D;for(t=0;t<this.vertices.length;t++)r=this.vertices[t].ToCoord2D(e),n.AddVertex(r.x,r.y);return n},o.Polygon.prototype.ToArray=function(){var o,t,r=[];for(o=0;o<this.vertices.length;o++)t=this.vertices[o],r.push(t.Clone());return r},o.Polygon.prototype.FromArray=function(o){var t,r;for(this.Clear(),t=0;t<o.length;t++)r=o[t],this.AddVertex(r.x,r.y,r.z)},o.Polygon.prototype.Clear=function(){this.vertices=[],this.ClearCache()},o.Polygon.prototype.ClearCache=function(){this.cache={normal:null}},o.Polygon.prototype.Clone=function(){var t,r,e=new o.Polygon;for(t=0;t<this.vertices.length;t++)r=this.vertices[t],e.AddVertexCoord(r.Clone());return e},o.ContourPolygon=function(){this.contours=null,this.Clear()},o.ContourPolygon.prototype.AddVertex=function(o,t,r){this.lastContour.AddVertex(o,t,r)},o.ContourPolygon.prototype.AddVertexCoord=function(o){this.lastContour.AddVertexCoord(o)},o.ContourPolygon.prototype.AddContourVertex=function(o,t,r,e){return this.contours[o].AddVertex(t,r,e)},o.ContourPolygon.prototype.AddContourVertexCoord=function(o,t){return this.contours[o].AddVertexCoord(t)},o.ContourPolygon.prototype.VertexCount=function(){var o,t=0;for(o=0;o<this.contours.length;o++)t+=this.contours[o].VertexCount();return t},o.ContourPolygon.prototype.ContourVertexCount=function(o){return this.contours[o].VertexCount()},o.ContourPolygon.prototype.AddContour=function(t){this.lastContour=void 0===t||null===t?new o.Polygon:t,this.contours.push(this.lastContour)},o.ContourPolygon.prototype.GetLastContour=function(){return this.lastContour},o.ContourPolygon.prototype.GetContourVertex=function(o,t){return this.contours[o].GetVertex(t)},o.ContourPolygon.prototype.GetContour=function(o){return this.contours[o]},o.ContourPolygon.prototype.ContourCount=function(){return this.contours.length},o.ContourPolygon.prototype.ToContourPolygon2D=function(){var t,r,e,n,u=this.contours[0].GetNormal(),i=new o.ContourPolygon2D;for(t=0;t<this.contours.length;t++)for(i.AddContour(),e=this.contours[t],r=0;r<e.VertexCount();r++)n=e.GetVertex(r),i.AddVertexCoord(n.ToCoord2D(u));return i},o.ContourPolygon.prototype.ToArray=function(){var o,t,r,e,n=[];for(o=0;o<this.contours.length;o++){for(r=this.contours[o],t=0;t<r.VertexCount();t++)e=r.GetVertex(t),n.push(e.Clone());o<this.contours.length-1&&n.push(null)}return n},o.ContourPolygon.prototype.FromArray=function(o){var t,r;for(this.Clear(),this.AddContour(),t=0;t<o.length;t++)null===(r=o[t])?this.AddContour():this.AddVertex(r.x,r.y,r.z)},o.ContourPolygon.prototype.Clear=function(){this.contours=[],this.lastContour=null},o.ContourPolygon.prototype.Clone=function(){var t,r,e=new o.ContourPolygon;for(t=0;t<this.contours.length;t++)r=this.contours[t],e.AddContour(r.Clone());return e},o.OffsetPolygonContour=function(t,r){var e,n,u,i,s,l,h,c,C,y,p,d,g=t.VertexCount(),a=t.GetNormal(),f=new o.Polygon;for(p=0;p<g;p++)e=t.GetPrevVertex(p),n=p,u=t.GetNextVertex(p),i=t.GetVertex(e),s=t.GetVertex(n),l=t.GetVertex(u),h=o.CoordSub(i,s),c=o.CoordSub(l,s),d=h.AngleTo(c)/2,o.CoordOrientation(i,s,l,a)==o.Orientation.Clockwise&&(d=Math.PI-d),C=r/Math.sin(d),(y=s.Clone()).Offset(c,C),y.Rotate(a,d,s),f.AddVertex(y.x,y.y,y.z);return f},o});
//# sourceMappingURL=../sourcemaps/geometry/polygon.js.map
