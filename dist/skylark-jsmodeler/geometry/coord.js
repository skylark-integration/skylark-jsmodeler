/**
 * skylark-jsmodeler - A version of jsmodeler that ported to running on skylarkjs
 * @author Hudaokeji, Inc.
 * @version v0.9.0
 * @link https://github.com/skylark-integration/skylark-jsmodeler/
 * @license MIT
 */
define(["../core/jsm"],function(t){return t.Coord=function(t,o,r){this.x=t,this.y=o,this.z=r},t.Coord.prototype.Set=function(t,o,r){this.x=t,this.y=o,this.z=r},t.Coord.prototype.IsEqual=function(o){return t.IsEqual(this.x,o.x)&&t.IsEqual(this.y,o.y)&&t.IsEqual(this.z,o.z)},t.Coord.prototype.IsEqualWithEps=function(o,r){return t.IsEqualWithEps(this.x,o.x,r)&&t.IsEqualWithEps(this.y,o.y,r)&&t.IsEqualWithEps(this.z,o.z,r)},t.Coord.prototype.DistanceTo=function(t){return Math.sqrt((t.x-this.x)*(t.x-this.x)+(t.y-this.y)*(t.y-this.y)+(t.z-this.z)*(t.z-this.z))},t.Coord.prototype.AngleTo=function(o){var r=this.Clone().Normalize(),i=o.Clone().Normalize();if(r.IsEqual(i))return 0;var n=t.VectorDot(r,i);return t.ArcCos(n)},t.Coord.prototype.IsCollinearWith=function(o){var r=this.AngleTo(o);return t.IsEqual(r,0)||t.IsEqual(r,Math.PI)},t.Coord.prototype.IsPerpendicularWith=function(o){var r=this.AngleTo(o);return t.IsEqual(r,Math.PI/2)},t.Coord.prototype.Length=function(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z)},t.Coord.prototype.Add=function(t){this.x+=t.x,this.y+=t.y,this.z+=t.z},t.Coord.prototype.Sub=function(t){this.x-=t.x,this.y-=t.y,this.z-=t.z},t.Coord.prototype.MultiplyScalar=function(t){return this.x*=t,this.y*=t,this.z*=t,this},t.Coord.prototype.Normalize=function(){var o=this.Length();return t.IsPositive(o)&&this.MultiplyScalar(1/o),this},t.Coord.prototype.SetLength=function(o){var r=this.Length();return t.IsPositive(r)&&this.MultiplyScalar(o/r),this},t.Coord.prototype.Offset=function(t,o){var r=t.Clone().Normalize();return this.x+=r.x*o,this.y+=r.y*o,this.z+=r.z*o,this},t.Coord.prototype.Rotate=function(t,o,r){var i=t.Clone().Normalize(),n=i.x,s=i.y,e=i.z,h=this.x-r.x,u=this.y-r.y,y=this.z-r.z,a=Math.sin(o),p=Math.cos(o);return this.x=-n*(-n*h-s*u-e*y)*(1-p)+h*p+(-e*u+s*y)*a,this.y=-s*(-n*h-s*u-e*y)*(1-p)+u*p+(e*h-n*y)*a,this.z=-e*(-n*h-s*u-e*y)*(1-p)+y*p+(-s*h+n*u)*a,this.x+=r.x,this.y+=r.y,this.z+=r.z,this},t.Coord.prototype.ToCoord2D=function(o){var r=new t.Coord(0,0,0),i=new t.Vector(0,0,1),n=t.VectorCross(o,i),s=o.AngleTo(i),e=this.Clone().Rotate(n,s,r);return new t.Coord2D(e.x,e.y)},t.Coord.prototype.ToString=function(){return"("+this.x+", "+this.y+", "+this.z+")"},t.Coord.prototype.Clone=function(){return new t.Coord(this.x,this.y,this.z)},t.Vector=t.Coord,t.CoordFromArray=function(o){return new t.Coord(o[0],o[1],o[2])},t.CoordToArray=function(t){return[t.x,t.y,t.z]},t.CoordAdd=function(o,r){return new t.Coord(o.x+r.x,o.y+r.y,o.z+r.z)},t.CoordSub=function(o,r){return new t.Coord(o.x-r.x,o.y-r.y,o.z-r.z)},t.VectorDot=function(t,o){return t.x*o.x+t.y*o.y+t.z*o.z},t.VectorCross=function(o,r){var i=new t.Vector(0,0,0);return i.x=o.y*r.z-o.z*r.y,i.y=o.z*r.x-o.x*r.z,i.z=o.x*r.y-o.y*r.x,i},t});
//# sourceMappingURL=../sourcemaps/geometry/coord.js.map
