/**
 * skylark-jsmodeler - A version of jsmodeler that ported to running on skylarkjs
 * @author Hudaokeji, Inc.
 * @version v0.9.0
 * @link https://github.com/skylark-integration/skylark-jsmodeler/
 * @license MIT
 */
define(["../core/jsm"],function(t){return t.CoordPlanePosition={CoordOnPlane:0,CoordInFrontOfPlane:1,CoordAtBackOfPlane:2},t.LinePlanePosition={LineParallelToPlane:0,LineIntersectsPlane:1},t.Plane=function(t,n,e,o){this.a=t,this.b=n,this.c=e,this.d=o},t.Plane.prototype.Set=function(t,n,e,o){this.a=t,this.b=n,this.c=e,this.d=o},t.Plane.prototype.GetNormal=function(){return new t.Vector(this.a,this.b,this.c)},t.Plane.prototype.CoordSignedDistance=function(t){var n=t.x,e=t.y,o=t.z,r=this.a,i=this.b,a=this.c;return(r*n+i*e+a*o+this.d)/Math.sqrt(r*r+i*i+a*a)},t.Plane.prototype.CoordDistance=function(t){var n=this.CoordSignedDistance(t);return Math.abs(n)},t.Plane.prototype.ProjectCoord=function(n){var e=n.x,o=n.y,r=n.z,i=this.a,a=this.b,s=this.c,l=this.d,c=this.CoordDistance(n),d=i*e+a*o+s*r+l;t.IsGreater(d,0)&&(c=-c);var P=this.GetNormal().Normalize();return n.Clone().Offset(P,c)},t.Plane.prototype.CoordPosition=function(n){var e=this.a,o=this.b,r=this.c,i=this.d,a=e*n.x+o*n.y+r*n.z+i;return t.IsPositive(a)?t.CoordPlanePosition.CoordInFrontOfPlane:t.IsNegative(a)?t.CoordPlanePosition.CoordAtBackOfPlane:t.CoordPlanePosition.CoordOnPlane},t.Plane.prototype.LinePosition=function(n,e){var o=n.direction.Clone().Normalize(),r=n.start.x,i=n.start.y,a=n.start.z,s=n.start.x+o.x,l=n.start.y+o.y,c=n.start.z+o.z,d=this.a,P=this.b,h=this.c,y=this.d,u=d*(r-s)+P*(i-l)+h*(a-c);if(t.IsZero(u))return t.LinePlanePosition.LineParallelToPlane;var C=(d*r+P*i+h*a+y)/u;if(void 0!==e){o.MultiplyScalar(C);var z=t.CoordAdd(n.start,o);e.Set(z.x,z.y,z.z)}return t.LinePlanePosition.LineIntersectsPlane},t.Plane.prototype.LineIntersection=function(n){var e=n.direction.Clone().Normalize(),o=n.start.x,r=n.start.y,i=n.start.z,a=n.start.x+e.x,s=n.start.y+e.y,l=n.start.z+e.z,c=this.a,d=this.b,P=this.c,h=this.d,y=c*(o-a)+d*(r-s)+P*(i-l);if(t.IsZero(y))return null;var u=(c*o+d*r+P*i+h)/y;return e.MultiplyScalar(u),t.CoordAdd(n.start,e)},t.Plane.prototype.Clone=function(){return new t.Plane(this.a,this.b,this.c,this.d)},t.GetPlaneFromCoordAndDirection=function(n,e){var o=new t.Plane,r=e.Clone().Normalize(),i=r.x,a=r.y,s=r.z,l=-(i*n.x+a*n.y+s*n.z);return o.Set(i,a,s,l),o},t.GetPlaneFromThreeCoords=function(n,e,o){var r=new t.Plane,i=(e.y-n.y)*(o.z-n.z)-(o.y-n.y)*(e.z-n.z),a=(e.z-n.z)*(o.x-n.x)-(o.z-n.z)*(e.x-n.x),s=(e.x-n.x)*(o.y-n.y)-(o.x-n.x)*(e.y-n.y),l=-(i*n.x+a*n.y+s*n.z);return r.Set(i,a,s,l),r},t.CoordPlaneSignedDirectionalDistance=function(n,e,o){var r=e.Clone().Normalize(),i=n.x,a=n.y,s=n.z,l=n.x+r.x,c=n.y+r.y,d=n.z+r.z,P=o.a,h=o.b,y=o.c,u=o.d,C=P*(i-l)+h*(a-c)+y*(s-d);if(t.IsZero(C))return 0;var z=(P*i+h*a+y*s+u)/C;r.MultiplyScalar(z);var f=t.CoordAdd(n,r),x=n.DistanceTo(f),p=P*i+h*a+y*s+u;return t.IsNegative(p)&&(x=-x),x},t.CoordPlaneDirectionalDistance=function(n,e,o){return Math.abs(t.CoordPlaneSignedDirectionalDistance(n,e,o))},t});
//# sourceMappingURL=../sourcemaps/geometry/plane.js.map
