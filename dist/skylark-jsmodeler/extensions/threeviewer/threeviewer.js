/**
 * skylark-jsmodeler - A version of jsmodeler that ported to running on skylarkjs
 * @author Hudaokeji, Inc.
 * @version v0.9.0
 * @link https://github.com/skylark-integration/skylark-jsmodeler/
 * @license MIT
 */
define(["../../core/jsm"],function(e){return e.ThreeViewer=function(){this.canvas=null,this.scene=null,this.camera=null,this.renderer=null,this.ambientLight=null,this.directionalLight=null,this.runBeforeRender=null,this.runAfterRender=null,this.cameraMove=null,this.navigation=null,this.settings=null,this.drawLoop=null,this.enableDraw=null},e.ThreeViewer.prototype.Start=function(t,i){return!!e.IsWebGLEnabled()&&(!!this.InitSettings(i)&&(!!this.InitThree(t)&&(!!this.InitCamera(i)&&(!!this.InitLights()&&(this.drawLoop=!1,this.enableDraw=!0,this.DrawIfNeeded(),!0)))))},e.ThreeViewer.prototype.InitSettings=function(t){return this.settings={cameraEyePosition:new e.Coord(1,1,1),cameraCenterPosition:new e.Coord(0,0,0),cameraUpVector:new e.Coord(0,0,1),lightAmbientColor:[.5,.5,.5],lightDiffuseColor:[.5,.5,.5]},void 0!==t&&(void 0!==t.cameraEyePosition&&(this.settings.cameraEyePosition=e.CoordFromArray(t.cameraEyePosition)),void 0!==t.cameraCenterPosition&&(this.settings.cameraCenterPosition=e.CoordFromArray(t.cameraCenterPosition)),void 0!==t.cameraUpVector&&(this.settings.cameraUpVector=e.CoordFromArray(t.cameraUpVector)),void 0!==t.lightAmbientColor&&(this.settings.lightAmbientColor=t.lightAmbientColor),void 0!==t.lightDiffuseColor&&(this.settings.lightDiffuseColor=t.lightDiffuseColor)),!0},e.ThreeViewer.prototype.InitThree=function(t){if(this.canvas=t,!this.canvas||!this.canvas.getContext)return!1;if(this.scene=new e.THREE.Scene,!this.scene)return!1;var i={canvas:this.canvas,antialias:!0};return this.renderer=new e.THREE.WebGLRenderer(i),!!this.renderer&&(this.renderer.setClearColor(new e.THREE.Color(16777215)),this.renderer.setSize(this.canvas.width,this.canvas.height),!0)},e.ThreeViewer.prototype.InitCamera=function(t){return this.cameraMove=new e.Camera(e.CoordFromArray(t.cameraEyePosition),e.CoordFromArray(t.cameraCenterPosition),e.CoordFromArray(t.cameraUpVector),t.fieldOfView,t.nearClippingPlane,t.farClippingPlane),!!this.cameraMove&&(this.navigation=new e.Navigation,!!this.navigation.Init(this.canvas,this.cameraMove,this.DrawIfNeeded.bind(this),this.Resize.bind(this))&&(this.camera=new e.THREE.PerspectiveCamera(this.cameraMove.fieldOfView,this.canvas.width/this.canvas.height,this.cameraMove.nearClippingPlane,this.cameraMove.farClippingPlane),!!this.camera&&(this.scene.add(this.camera),!0)))},e.ThreeViewer.prototype.InitLights=function(){var t=new e.THREE.Color,i=new e.THREE.Color;if(t.setRGB(this.settings.lightAmbientColor[0],this.settings.lightAmbientColor[1],this.settings.lightAmbientColor[2]),i.setRGB(this.settings.lightDiffuseColor[0],this.settings.lightDiffuseColor[1],this.settings.lightDiffuseColor[2]),this.ambientLight=new e.THREE.AmbientLight(t.getHex()),!this.ambientLight)return!1;if(this.scene.add(this.ambientLight),this.directionalLight=new e.THREE.DirectionalLight(i.getHex()),!this.directionalLight)return!1;var r=(new e.THREE.Vector3).subVectors(this.cameraMove.eye,this.cameraMove.center);return this.directionalLight.position.set(r.x,r.y,r.z),this.scene.add(this.directionalLight),!0},e.ThreeViewer.prototype.SetRunBeforeRender=function(e){this.runBeforeRender=e},e.ThreeViewer.prototype.SetRunAfterRender=function(e){this.runAfterRender=e},e.ThreeViewer.prototype.SetClearColor=function(t){this.renderer.setClearColor(new e.THREE.Color(t)),this.DrawIfNeeded()},e.ThreeViewer.prototype.AddMesh=function(e){this.scene.add(e),this.DrawIfNeeded()},e.ThreeViewer.prototype.AddMeshes=function(e){var t;for(t=0;t<e.length;t++)this.scene.add(e[t]);this.DrawIfNeeded()},e.ThreeViewer.prototype.MeshCount=function(){var e=0,t=this;return this.scene.traverse(function(i){t.IsRelevantObject(i)&&(e+=1)}),e},e.ThreeViewer.prototype.VisibleMeshCount=function(){var e=0,t=this;return this.scene.traverse(function(i){t.IsVisibleObject(i)&&(e+=1)}),e},e.ThreeViewer.prototype.VertexCount=function(){var e=0,t=this;return this.scene.traverse(function(i){t.IsRelevantObject(i)&&(e+=i.geometry.vertices.length)}),e},e.ThreeViewer.prototype.FaceCount=function(){var t=0;return this.scene.traverse(function(i){i instanceof e.THREE.Mesh&&(t+=i.geometry.faces.length)}),t},e.ThreeViewer.prototype.GetMesh=function(e){var t,i=null,r=0;for(t=0;t<this.scene.children.length;t++)if(i=this.scene.children[t],this.IsRelevantObject(i)){if(r==e)return i;r+=1}return null},e.ThreeViewer.prototype.ShowMesh=function(e){e.visible=!0,this.DrawIfNeeded()},e.ThreeViewer.prototype.HideMesh=function(e){e.visible=!1,this.DrawIfNeeded()},e.ThreeViewer.prototype.RemoveMesh=function(e){e.geometry.dispose(),this.scene.remove(e),this.DrawIfNeeded()},e.ThreeViewer.prototype.RemoveMeshes=function(){var e,t;for(t=0;t<this.scene.children.length;t++)e=this.scene.children[t],this.IsRelevantObject(e)&&(e.geometry.dispose(),this.scene.remove(e),t--);this.DrawIfNeeded()},e.ThreeViewer.prototype.RemoveLastMesh=function(){var e=null,t=this;this.scene.traverse(function(i){t.IsRelevantObject(i)&&(e=i)}),null!==e&&this.scene.remove(e),this.DrawIfNeeded()},e.ThreeViewer.prototype.SetCamera=function(e,t,i){this.navigation.SetCamera(e,t,i),this.navigation.SetOrbitCenter(t.Clone()),this.DrawIfNeeded()},e.ThreeViewer.prototype.Resize=function(){this.camera.aspect=this.canvas.width/this.canvas.height,this.camera.updateProjectionMatrix(),this.renderer.setSize(this.canvas.width,this.canvas.height),this.DrawIfNeeded()},e.ThreeViewer.prototype.FitInWindow=function(){if(0!==this.VisibleMeshCount()){var e=this.GetBoundingSphere();this.navigation.FitInWindow(e.GetCenter(),e.GetRadius()),this.DrawIfNeeded()}},e.ThreeViewer.prototype.FitMeshesInWindow=function(e){if(0!==e.length){var t=this.GetFilteredBoundingSphere(function(t){return-1!=e.indexOf(t)});this.navigation.FitInWindow(t.GetCenter(),t.GetRadius()),this.DrawIfNeeded()}},e.ThreeViewer.prototype.AdjustClippingPlanes=function(e){this.GetBoundingSphere().GetRadius()<e?(this.camera.near=.1,this.camera.far=1e3):(this.camera.near=10,this.camera.far=1e6),this.camera.updateProjectionMatrix(),this.Draw()},e.ThreeViewer.prototype.GetCenter=function(){var e=this;return this.GetFilteredCenter(function(t){return e.IsVisibleObject(t)})},e.ThreeViewer.prototype.GetBoundingBox=function(){var e=this;return this.GetFilteredBoundingBox(function(t){return e.IsVisibleObject(t)})},e.ThreeViewer.prototype.GetBoundingSphere=function(){var e=this;return this.GetFilteredBoundingSphere(function(t){return e.IsVisibleObject(t)})},e.ThreeViewer.prototype.GetFilteredCenter=function(e){return this.GetFilteredBoundingBox(e).GetCenter()},e.ThreeViewer.prototype.GetFilteredBoundingBox=function(t){var i,r,n=new e.Coord(e.Inf,e.Inf,e.Inf),o=new e.Coord(-e.Inf,-e.Inf,-e.Inf);return this.scene.traverse(function(s){var a;if(t(s))for(i=s.geometry,a=0;a<i.vertices.length;a++)(r=i.vertices[a].clone()).add(s.position),n.x=e.Minimum(n.x,r.x),n.y=e.Minimum(n.y,r.y),n.z=e.Minimum(n.z,r.z),o.x=e.Maximum(o.x,r.x),o.y=e.Maximum(o.y,r.y),o.z=e.Maximum(o.z,r.z)}),new e.Box(n,o)},e.ThreeViewer.prototype.GetFilteredBoundingSphere=function(t){var i,r,n,o=this.GetFilteredCenter(t),s=0;return this.scene.traverse(function(a){var h;if(t(a))for(i=a.geometry,h=0;h<i.vertices.length;h++)(r=i.vertices[h].clone()).add(a.position),n=o.DistanceTo(new e.Coord(r.x,r.y,r.z)),e.IsGreater(n,s)&&(s=n)}),new e.Sphere(o,s)},e.ThreeViewer.prototype.GetObjectsUnderPosition=function(t,i){var r=t/this.canvas.width*2-1,n=-i/this.canvas.height*2+1,o=this.camera.position,s=new e.THREE.Vector3(r,n,.5);return s.unproject(this.camera),s.sub(o),s.normalize(),new e.THREE.Raycaster(o,s).intersectObjects(this.scene.children)},e.ThreeViewer.prototype.GetObjectsUnderMouse=function(){return this.GetObjectsUnderPosition(this.navigation.mouse.curr.x,this.navigation.mouse.curr.y)},e.ThreeViewer.prototype.GetObjectsUnderTouch=function(){return this.GetObjectsUnderPosition(this.navigation.touch.curr.x,this.navigation.touch.curr.y)},e.ThreeViewer.prototype.ProjectVector=function(t,i,r){var n=this.canvas.width/2,o=this.canvas.height/2,s=new e.THREE.Vector3(t,i,r);return s.project(this.camera),s.x=s.x*n+n,s.y=-s.y*o+o,s},e.ThreeViewer.prototype.EnableDraw=function(e){this.enableDraw=e},e.ThreeViewer.prototype.Draw=function(){if(this.enableDraw){null!==this.runBeforeRender&&this.runBeforeRender(),this.camera.position.set(this.cameraMove.eye.x,this.cameraMove.eye.y,this.cameraMove.eye.z),this.camera.up.set(this.cameraMove.up.x,this.cameraMove.up.y,this.cameraMove.up.z),this.camera.lookAt(new e.THREE.Vector3(this.cameraMove.center.x,this.cameraMove.center.y,this.cameraMove.center.z));var t=(new e.THREE.Vector3).subVectors(this.cameraMove.eye,this.cameraMove.center);this.directionalLight.position.set(t.x,t.y,t.z),this.renderer.render(this.scene,this.camera),null!==this.runAfterRender&&this.runAfterRender(),this.drawLoop&&requestAnimationFrame(this.Draw.bind(this))}},e.ThreeViewer.prototype.DrawIfNeeded=function(){this.drawLoop||this.Draw()},e.ThreeViewer.prototype.StartDrawLoop=function(){this.drawLoop=!0,this.Draw()},e.ThreeViewer.prototype.IsRelevantObject=function(t){return t instanceof e.THREE.Mesh||t instanceof e.THREE.LineSegments||t instanceof e.THREE.Points},e.ThreeViewer.prototype.IsVisibleObject=function(e){return this.IsRelevantObject(e)&&e.visible},e});
//# sourceMappingURL=../../sourcemaps/extensions/threeviewer/threeviewer.js.map
