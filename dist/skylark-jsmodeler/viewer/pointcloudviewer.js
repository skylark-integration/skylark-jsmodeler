/**
 * skylark-jsmodeler - A version of jsmodeler that ported to running on skylarkjs
 * @author Hudaokeji, Inc.
 * @version v0.9.0
 * @link https://github.com/skylark-integration/skylark-jsmodeler/
 * @license MIT
 */
define(["../core/jsm"],function(e){return e.PointCloudViewer=function(){this.canvas=null,this.renderer=null,this.navigation=null},e.PointCloudViewer.prototype.Init=function(e,n){return!!this.InitRenderer(e,n)&&!!this.InitNavigation()},e.PointCloudViewer.prototype.InitRenderer=function(n,t){return this.renderer=new e.PointCloudRenderer,!!this.renderer.Init(n,t)},e.PointCloudViewer.prototype.InitNavigation=function(){return this.navigation=new e.Navigation,!!this.navigation.Init(this.renderer.canvas,this.renderer.camera,this.Draw.bind(this),this.Resize.bind(this))},e.PointCloudViewer.prototype.SetClearColor=function(e,n,t){this.renderer.SetClearColor(e,n,t)},e.PointCloudViewer.prototype.SetPointSize=function(e){this.renderer.SetPointSize(e)},e.PointCloudViewer.prototype.AddPoints=function(e,n){this.renderer.AddPoints(e,n)},e.PointCloudViewer.prototype.RemovePoints=function(){this.renderer.RemovePoints()},e.PointCloudViewer.prototype.FitInWindow=function(){var e=this.GetBoundingSphere();this.navigation.FitInWindow(e.GetCenter(),e.GetRadius()),this.Draw()},e.PointCloudViewer.prototype.GetCenter=function(){return this.GetBoundingBox().GetCenter()},e.PointCloudViewer.prototype.GetBoundingBox=function(){var n,t,i,r,o=new e.Coord(e.Inf,e.Inf,e.Inf),d=new e.Coord(-e.Inf,-e.Inf,-e.Inf);for(n=0;n<this.renderer.points.length;n++)for(i=this.renderer.points[n].pointArray,t=0;t<i.length;t+=3)r=new e.Coord(i[t],i[t+1],i[t+2]),o.x=e.Minimum(o.x,r.x),o.y=e.Minimum(o.y,r.y),o.z=e.Minimum(o.z,r.z),d.x=e.Maximum(d.x,r.x),d.y=e.Maximum(d.y,r.y),d.z=e.Maximum(d.z,r.z);return new e.Box(o,d)},e.PointCloudViewer.prototype.GetBoundingSphere=function(){var n,t,i,r,o,d=this.GetCenter(),u=0;for(n=0;n<this.renderer.points.length;n++)for(i=this.renderer.points[n].pointArray,t=0;t<i.length;t+=3)r=new e.Coord(i[t],i[t+1],i[t+2]),o=d.DistanceTo(r),e.IsGreater(o,u)&&(u=o);return new e.Sphere(d,u)},e.PointCloudViewer.prototype.Resize=function(){this.renderer.Resize(),this.Draw()},e.PointCloudViewer.prototype.Draw=function(){this.renderer.Render()},e});
//# sourceMappingURL=../sourcemaps/viewer/pointcloudviewer.js.map
