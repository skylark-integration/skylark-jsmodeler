/**
 * skylark-jsmodeler - A version of jsmodeler that ported to running on skylarkjs
 * @author Hudaokeji, Inc.
 * @version v0.9.0
 * @link https://github.com/skylark-integration/skylark-jsmodeler/
 * @license MIT
 */
define(["../core/jsm"],function(t){return t.CanvasDrawer=function(t){this.canvas=t,this.context=this.canvas.getContext("2d")},t.CanvasDrawer.prototype.GetWidth=function(){return this.canvas.width},t.CanvasDrawer.prototype.GetHeight=function(){return this.canvas.height},t.CanvasDrawer.prototype.Clear=function(){this.context.clearRect(0,0,this.canvas.width,this.canvas.height),this.context.fillStyle="#ffffff",this.context.fillRect(0,0,this.canvas.width,this.canvas.height)},t.CanvasDrawer.prototype.DrawLine=function(t,e){this.context.beginPath(),this.context.moveTo(t.x,this.canvas.height-t.y),this.context.lineTo(e.x,this.canvas.height-e.y),this.context.stroke()},t.CanvasDrawer.prototype.DrawPolygon=function(e,n,i){var r,o,a,l,s;for(this.context.fillStyle=(r=n,"rgb("+(o=t.HexColorToRGBComponents(r))[0]+","+o[1]+","+o[2]+")"),this.context.beginPath(),a=0;a<e.VertexCount();a++)l=e.GetVertex(a),0===a?this.context.moveTo(l.x,this.canvas.height-l.y):this.context.lineTo(l.x,this.canvas.height-l.y);if(this.context.closePath(),this.context.fill(),i)for(a=0;a<e.VertexCount();a++)l=e.GetVertex(a),s=e.GetVertex(a<e.VertexCount()-1?a+1:0),this.DrawLine(l,s)},t.SVGDrawer=function(t){this.svgObject=t,this.svgNameSpace="http://www.w3.org/2000/svg"},t.SVGDrawer.prototype.GetWidth=function(){return this.svgObject.getAttribute("width")},t.SVGDrawer.prototype.GetHeight=function(){return this.svgObject.getAttribute("height")},t.SVGDrawer.prototype.Clear=function(){for(;this.svgObject.lastChild;)this.svgObject.removeChild(this.svgObject.lastChild)},t.SVGDrawer.prototype.DrawLine=function(t,e){var n=document.createElementNS(this.svgNameSpace,"line"),i=this.GetHeight();n.setAttributeNS(null,"stroke","black"),n.setAttributeNS(null,"x1",t.x),n.setAttributeNS(null,"y1",i-t.y),n.setAttributeNS(null,"x2",e.x),n.setAttributeNS(null,"y2",i-e.y),this.svgObject.appendChild(n)},t.SVGDrawer.prototype.DrawPolygon=function(e,n){var i,r,o="",a=this.GetHeight();for(i=0;i<e.VertexCount();i++)o=o+(r=e.GetVertex(i)).x+", "+(a-r.y),i<e.VertexCount()-1&&(o+=", ");var l,s,h=document.createElementNS(this.svgNameSpace,"polygon");h.setAttributeNS(null,"points",o),h.setAttributeNS(null,"fill",(l=n,"rgb("+(s=t.HexColorToRGBComponents(l))[0]+","+s[1]+","+s[2]+")")),h.setAttributeNS(null,"fill-opacity","1.0"),h.setAttributeNS(null,"stroke","black"),this.svgObject.appendChild(h)},t.DrawProjectedBody=function(e,n,i,r,o,a){function l(e,n){var i=t.Project(n,p,w,G,C*t.DegRad,P,S,D,b);e.AddVertex(i.x,i.y)}function s(n){var i,r=new t.Polygon2D;for(i=0;i<n.VertexIndexCount();i++)l(r,e.GetVertexPosition(n.GetVertexIndex(i)));return r}o&&a.Clear();var h,c,u,g,f,x,d,v=a.GetWidth(),y=a.GetHeight(),p=i.eye,w=i.center,G=i.up,C=i.fieldOfView,P=v/y,S=i.nearClippingPlane,D=i.farClippingPlane,b=[0,0,v,y];if("HiddenLinePainter"==r){var V=t.OrderPolygons(e,p,w);for(void 0!==n&&null!==n||(n=new t.MaterialSet),h=0;h<V.length;h++)u=e.GetPolygon(V[h]),f=s(u),x=u.GetMaterialIndex(),d=n.GetMaterial(x).diffuse,a.DrawPolygon(f,d,!0)}else if("HiddenLineBSPTree"==r){void 0!==n&&null!==n||(n=new t.MaterialSet);var m=new t.BSPTree;t.AddBodyToBSPTree(e,m),t.TraverseBSPTreeForEyePosition(m,i.eye,function(i){f=function(e){var n,i=new t.Polygon2D;for(n=0;n<e.VertexCount();n++)l(i,e.GetVertex(n));return i}(i.polygon),u=e.GetPolygon(i.userData.originalPolygon),x=u.GetMaterialIndex(),d=n.GetMaterial(x).diffuse,a.DrawPolygon(f,d,!0)})}else if("HiddenLineFrontFacing"==r)for(void 0!==n&&null!==n||(n=new t.MaterialSet),h=0;h<e.PolygonCount();h++)u=e.GetPolygon(h),(f=s(u)).GetOrientation()==t.Orientation.CounterClockwise&&(x=u.GetMaterialIndex(),d=n.GetMaterial(x).diffuse,a.DrawPolygon(f,d,!0));else if("Wireframe"==r){var N,A,j,O,T=[];for(h=0;h<e.PolygonCount();h++)for(A=null,j=null,N=(u=e.GetPolygon(h)).VertexIndexCount(),c=0;c<=N;c++)O=u.GetVertexIndex(c%N),g=e.GetVertexPosition(O),f=t.Project(g,p,w,G,C*t.DegRad,P,S,D,b),null!==A&&null!==j&&void 0===T[[j,O]]&&(a.DrawLine(A,f),T[[j,O]]=!0,T[[O,j]]=!0),j=O,A=f}return!0},t});
//# sourceMappingURL=../sourcemaps/viewer/drawing.js.map
