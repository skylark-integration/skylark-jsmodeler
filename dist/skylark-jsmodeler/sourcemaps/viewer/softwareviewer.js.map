{"version":3,"sources":["viewer/softwareviewer.js"],"names":["define","JSM","SoftwareViewer","this","canvas","camera","bodies","drawer","drawMode","navigation","prototype","Start","InitCanvas","InitCamera","CanvasDrawer","SVGDrawer","ValueOrDefault","Camera","Navigation","Init","Draw","bind","Resize","AddBody","body","materials","push","RemoveBodies","FitInWindow","sphere","GetBoundingSphere","GetCenter","GetRadius","GetBoundingBox","i","j","vertex","min","Coord","Inf","max","length","VertexCount","GetVertex","x","Minimum","position","y","z","Maximum","Box","distance","center","radius","DistanceTo","IsGreater","Sphere","bodyAndMaterials","Clear","DrawProjectedBody"],"mappings":"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","file":"../../viewer/softwareviewer.js","sourcesContent":["define([\"../core/jsm\"],function(JSM){\n\tJSM.SoftwareViewer = function ()\n\t{\n\t\tthis.canvas = null;\n\t\tthis.camera = null;\n\t\tthis.bodies = null;\n\t\tthis.drawer = null;\n\t\tthis.drawMode = null;\n\t\tthis.navigation = null;\n\t};\n\n\tJSM.SoftwareViewer.prototype.Start = function (canvas, camera)\n\t{\n\t\tif (!this.InitCanvas (canvas)) {\n\t\t\treturn false;\n\t\t}\n\n\t\tif (!this.InitCamera (camera)) {\n\t\t\treturn false;\n\t\t}\n\n\t\treturn true;\n\t};\n\n\tJSM.SoftwareViewer.prototype.InitCanvas = function (canvas)\n\t{\n\t\tthis.bodies = [];\n\t\tthis.canvas = canvas;\n\t\tif (!this.canvas) {\n\t\t\treturn false;\n\t\t}\n\t\t\n\t\tif (this.canvas instanceof (HTMLCanvasElement)) {\n\t\t\tthis.drawer = new JSM.CanvasDrawer (this.canvas);\n\t\t} else if (this.canvas instanceof (SVGSVGElement)) {\n\t\t\tthis.drawer = new JSM.SVGDrawer (this.canvas);\n\t\t}\n\t\t\n\t\tif (!this.drawer) {\n\t\t\treturn false;\n\t\t}\n\t\t\n\t\tthis.drawMode = 'Wireframe';\n\t\treturn true;\n\t};\n\n\tJSM.SoftwareViewer.prototype.InitCamera = function (camera)\n\t{\n\t\tthis.camera = JSM.ValueOrDefault (camera, new JSM.Camera ());\n\t\tif (!this.camera) {\n\t\t\treturn false;\n\t\t}\n\n\t\tthis.navigation = new JSM.Navigation ();\n\t\tif (!this.navigation.Init (this.canvas, this.camera, this.Draw.bind (this), this.Resize.bind (this))) {\n\t\t\treturn false;\n\t\t}\n\n\t\treturn true;\n\t};\n\n\tJSM.SoftwareViewer.prototype.AddBody = function (body, materials)\n\t{\n\t\tthis.bodies.push ([body, materials]);\n\t};\n\n\tJSM.SoftwareViewer.prototype.RemoveBodies = function ()\n\t{\n\t\tthis.bodies = [];\n\t};\n\n\tJSM.SoftwareViewer.prototype.FitInWindow = function ()\n\t{\n\t\tvar sphere = this.GetBoundingSphere ();\n\t\tthis.navigation.FitInWindow (sphere.GetCenter (), sphere.GetRadius ());\n\t\tthis.Draw ();\n\t};\n\n\tJSM.SoftwareViewer.prototype.GetCenter = function ()\n\t{\n\t\tvar boundingBox = this.GetBoundingBox ();\n\t\treturn boundingBox.GetCenter ();\n\t};\n\n\tJSM.SoftwareViewer.prototype.GetBoundingBox = function ()\n\t{\n\t\tvar min = new JSM.Coord (JSM.Inf, JSM.Inf, JSM.Inf);\n\t\tvar max = new JSM.Coord (-JSM.Inf, -JSM.Inf, -JSM.Inf);\n\t\t\n\t\tvar i, j, body, vertex;\n\t\tfor (i = 0; i < this.bodies.length; i++) {\n\t\t\tbody = this.bodies[i][0];\n\t\t\tfor (j = 0; j < body.VertexCount (); j++) {\n\t\t\t\tvertex = body.GetVertex (j);\n\t\t\t\tmin.x = JSM.Minimum (min.x, vertex.position.x);\n\t\t\t\tmin.y = JSM.Minimum (min.y, vertex.position.y);\n\t\t\t\tmin.z = JSM.Minimum (min.z, vertex.position.z);\n\t\t\t\tmax.x = JSM.Maximum (max.x, vertex.position.x);\n\t\t\t\tmax.y = JSM.Maximum (max.y, vertex.position.y);\n\t\t\t\tmax.z = JSM.Maximum (max.z, vertex.position.z);\n\t\t\t}\n\t\t}\n\n\t\treturn new JSM.Box (min, max);\n\t};\n\n\tJSM.SoftwareViewer.prototype.GetBoundingSphere = function ()\n\t{\n\t\tvar center = this.GetCenter ();\n\t\tvar radius = 0.0;\n\n\t\tvar i, j, body, vertex, distance;\n\t\tfor (i = 0; i < this.bodies.length; i++) {\n\t\t\tbody = this.bodies[i][0];\n\t\t\tfor (j = 0; j < body.VertexCount (); j++) {\n\t\t\t\tvertex = body.GetVertex (j);\n\t\t\t\tdistance = center.DistanceTo (vertex.position);\n\t\t\t\tif (JSM.IsGreater (distance, radius)) {\n\t\t\t\t\tradius = distance;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tvar sphere = new JSM.Sphere (center, radius);\n\t\treturn sphere;\n\t};\n\n\tJSM.SoftwareViewer.prototype.Resize = function ()\n\t{\n\t\tthis.Draw ();\n\t};\n\n\tJSM.SoftwareViewer.prototype.Draw = function ()\n\t{\n\t\tvar i, bodyAndMaterials;\n\t\tthis.drawer.Clear ();\n\t\t\n\t\tfor (i = 0; i < this.bodies.length; i++) {\n\t\t\tbodyAndMaterials = this.bodies[i];\n\t\t\tJSM.DrawProjectedBody (bodyAndMaterials[0], bodyAndMaterials[1], this.camera, this.drawMode, false, this.drawer);\n\t\t}\n\n\t\treturn true;\n\t};\n\n\treturn JSM;\n});\n"]}