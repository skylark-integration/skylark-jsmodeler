{"version":3,"sources":["extras/solidgenerator.js"],"names":["define","JSM","GenerateSolidWithRadius","solidName","radius","result","Body","equalRadius","GenerateTetrahedron","GenerateHexahedron","GenerateOctahedron","GenerateDodecahedron","GenerateIcosahedron","GenerateTruncatedTetrahedron","GenerateCuboctahedron","GenerateTruncatedCube","GenerateTruncatedOctahedron","GenerateRhombicuboctahedron","GenerateTruncatedCuboctahedron","GenerateSnubCube","GenerateIcosidodecahedron","GenerateTruncatedDodecahedron","GenerateTruncatedIcosahedron","GenerateRhombicosidodecahedron","GenerateTruncatedIcosidodecahedron","GenerateSnubDodecahedron","GenerateTetrakisHexahedron","GenerateRhombicDodecahedron","GeneratePentakisDodecahedron","GenerateSmallStellatedDodecahedron","GenerateGreatDodecahedron","GenerateSmallTriambicIcosahedron","GenerateGreatStellatedDodecahedron","GenerateSmallTriakisOctahedron","GenerateStellaOctangula","GenerateTriakisTetrahedron","VertexCount","i","currentRadius","maxRadius","GetVertexPosition","Length","IsGreater","scale","GetVertex","position","MultiplyScalar","AddVertex","BodyVertex","Coord","AddPolygon","BodyPolygon","AddVertexToBody","AddPolygonToBody","c","Math","sqrt","d","b","pow","e","f","g","h","j","l","k","m","n","o","p","q","r","s","AddCumulatedPolygonToBody","body","vertices","height","centroidCoord","normalVector","Vector","vertexCoords","length","push","centroid","CalculateCentroid","normal","CalculateNormal","Set","x","y","z","CalculatePolygonCentroidAndNormal","Offset","curr","next","count","GenerateCumulatedTetrahedron","pyramidUnitHeight","GenerateCumulatedHexahedron","GenerateCumulatedOctahedron","GenerateCumulatedDodecahedron","GenerateCumulatedIcosahedron"],"mappings":"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G,EAAG,KACrCJ,EAAIoD,iBAAkBhD,GAAS,EAAG,GAAI,KACtCJ,EAAIoD,iBAAkBhD,GAAS,EAAG,GAAI,IACtCJ,EAAIoD,iBAAkBhD,GAAS,EAAG,GAAI,KACtCJ,EAAIoD,iBAAkBhD,GAAS,EAAG,GAAI,KACtCJ,EAAIoD,iBAAkBhD,GAAS,EAAG,GAAI,KACtCJ,EAAIoD,iBAAkBhD,GAAS,EAAG,GAAI,KACtCJ,EAAIoD,iBAAkBhD,GAAS,EAAG,GAAI,KACtCJ,EAAIoD,iBAAkBhD,GAAS,EAAG,EAAG,KACrCJ,EAAIoD,iBAAkBhD,GAAS,EAAG,GAAI,KACtCJ,EAAIoD,iBAAkBhD,GAAS,EAAG,GAAI,IACtCJ,EAAIoD,iBAAkBhD,GAAS,EAAG,GAAI,KACtCJ,EAAIoD,iBAAkBhD,GAAS,EAAG,EAAG,KACrCJ,EAAIoD,iBAAkBhD,GAAS,EAAG,GAAI,KACtCJ,EAAIoD,iBAAkBhD,GAAS,EAAG,GAAI,IACtCJ,EAAIoD,iBAAkBhD,GAAS,EAAG,GAAI,KACtCJ,EAAIoD,iBAAkBhD,GAAS,EAAG,GAAI,KACtCJ,EAAIoD,iBAAkBhD,GAAS,EAAG,GAAI,KACtCJ,EAAIoD,iBAAkBhD,GAAS,EAAG,GAAI,KACtCJ,EAAIoD,iBAAkBhD,GAAS,EAAG,GAAI,KACtCJ,EAAIoD,iBAAkBhD,GAAS,EAAG,GAAI,KACtCJ,EAAIoD,iBAAkBhD,GAAS,EAAG,GAAI,KACtCJ,EAAIoD,iBAAkBhD,GAAS,EAAG,GAAI,KACtCJ,EAAIoD,iBAAkBhD,GAAS,EAAG,GAAI,KACtCJ,EAAIoD,iBAAkBhD,GAAS,EAAG,GAAI,KACtCJ,EAAIoD,iBAAkBhD,GAAS,EAAG,GAAI,KACtCJ,EAAIoD,iBAAkBhD,GAAS,EAAG,GAAI,KACtCJ,EAAIoD,iBAAkBhD,GAAS,EAAG,GAAI,KACtCJ,EAAIoD,iBAAkBhD,GAAS,GAAI,GAAI,KACvCJ,EAAIoD,iBAAkBhD,GAAS,GAAI,GAAI,KACvCJ,EAAIoD,iBAAkBhD,GAAS,GAAI,GAAI,KACvCJ,EAAIoD,iBAAkBhD,GAAS,GAAI,GAAI,KACvCJ,EAAIoD,iBAAkBhD,GAAS,GAAI,GAAI,KACvCJ,EAAIoD,iBAAkBhD,GAAS,GAAI,GAAI,KACvCJ,EAAIoD,iBAAkBhD,GAAS,GAAI,GAAI,KACvCJ,EAAIoD,iBAAkBhD,GAAS,GAAI,GAAI,KACvCJ,EAAIoD,iBAAkBhD,GAAS,GAAI,GAAI,KACvCJ,EAAIoD,iBAAkBhD,GAAS,GAAI,GAAI,KACvCJ,EAAIoD,iBAAkBhD,GAAS,GAAI,GAAI,KACvCJ,EAAIoD,iBAAkBhD,GAAS,GAAI,GAAI,KACvCJ,EAAIoD,iBAAkBhD,GAAS,GAAI,GAAI,KACvCJ,EAAIoD,iBAAkBhD,GAAS,GAAI,GAAI,KACvCJ,EAAIoD,iBAAkBhD,GAAS,GAAI,GAAI,KACvCJ,EAAIoD,iBAAkBhD,GAAS,GAAI,GAAI,KACvCJ,EAAIoD,iBAAkBhD,GAAS,GAAI,GAAI,KACvCJ,EAAIoD,iBAAkBhD,GAAS,GAAI,GAAI,KACvCJ,EAAIoD,iBAAkBhD,GAAS,GAAI,GAAI,KACvCJ,EAAIoD,iBAAkBhD,GAAS,GAAI,GAAI,KACvCJ,EAAIoD,iBAAkBhD,GAAS,GAAI,GAAI,KACvCJ,EAAIoD,iBAAkBhD,GAAS,GAAI,GAAI,KACvCJ,EAAIoD,iBAAkBhD,GAAS,GAAI,GAAI,KACvCJ,EAAIoD,iBAAkBhD,GAAS,GAAI,GAAI,KACvCJ,EAAIoD,iBAAkBhD,GAAS,GAAI,GAAI,KACvCJ,EAAIoD,iBAAkBhD,GAAS,GAAI,GAAI,KACvCJ,EAAIoD,iBAAkBhD,GAAS,GAAI,GAAI,KACvCJ,EAAIoD,iBAAkBhD,GAAS,GAAI,GAAI,KACvCJ,EAAIoD,iBAAkBhD,GAAS,GAAI,GAAI,KACvCJ,EAAIoD,iBAAkBhD,GAAS,GAAI,GAAI,KACvCJ,EAAIoD,iBAAkBhD,GAAS,GAAI,GAAI,KACvCJ,EAAIoD,iBAAkBhD,GAAS,GAAI,GAAI,KACvCJ,EAAIoD,iBAAkBhD,GAAS,GAAI,GAAI,KACvCJ,EAAIoD,iBAAkBhD,GAAS,GAAI,GAAI,KACvCJ,EAAIoD,iBAAkBhD,GAAS,GAAI,GAAI,KACvCJ,EAAIoD,iBAAkBhD,GAAS,GAAI,GAAI,KACvCJ,EAAIoD,iBAAkBhD,GAAS,GAAI,GAAI,KACvCJ,EAAIoD,iBAAkBhD,GAAS,GAAI,GAAI,KACvCJ,EAAIoD,iBAAkBhD,GAAS,GAAI,GAAI,KACvCJ,EAAIoD,iBAAkBhD,GAAS,GAAI,GAAI,KACvCJ,EAAIoD,iBAAkBhD,GAAS,GAAI,GAAI,KACvCJ,EAAIoD,iBAAkBhD,GAAS,GAAI,GAAI,KACvCJ,EAAIoD,iBAAkBhD,GAAS,GAAI,GAAI,KACvCJ,EAAIoD,iBAAkBhD,GAAS,GAAI,GAAI,KACvCJ,EAAIoD,iBAAkBhD,GAAS,GAAI,GAAI,KACvCJ,EAAIoD,iBAAkBhD,GAAS,GAAI,GAAI,KACvCJ,EAAIoD,iBAAkBhD,GAAS,GAAI,GAAI,KACvCJ,EAAIoD,iBAAkBhD,GAAS,GAAI,GAAI,KAEvCJ,EAAIoD,iBAAkBhD,GAAS,EAAG,GAAI,GAAI,GAAI,KAC9CJ,EAAIoD,iBAAkBhD,GAAS,EAAG,GAAI,GAAI,GAAI,KAC9CJ,EAAIoD,iBAAkBhD,GAAS,EAAG,GAAI,GAAI,GAAI,KAC9CJ,EAAIoD,iBAAkBhD,GAAS,EAAG,GAAI,GAAI,GAAI,KAC9CJ,EAAIoD,iBAAkBhD,GAAS,EAAG,GAAI,GAAI,GAAI,KAC9CJ,EAAIoD,iBAAkBhD,GAAS,EAAG,GAAI,GAAI,GAAI,KAC9CJ,EAAIoD,iBAAkBhD,GAAS,EAAG,GAAI,GAAI,GAAI,KAC9CJ,EAAIoD,iBAAkBhD,GAAS,EAAG,GAAI,GAAI,GAAI,KAC9CJ,EAAIoD,iBAAkBhD,GAAS,EAAG,GAAI,GAAI,GAAI,KAC9CJ,EAAIoD,iBAAkBhD,GAAS,EAAG,GAAI,GAAI,GAAI,KAC9CJ,EAAIoD,iBAAkBhD,GAAS,GAAI,GAAI,GAAI,GAAI,KAC/CJ,EAAIoD,iBAAkBhD,GAAS,GAAI,GAAI,GAAI,GAAI,KAExCA,GAWRJ,EAAIyE,0BAA4B,SAAUC,EAAMC,EAAUC,GAkBzD,IAAIC,EAAgB,IAAI7E,EAAIgD,MAAO,EAAK,EAAK,GACzC8B,EAAe,IAAI9E,EAAI+E,OAAQ,EAAK,EAAK,IAjB7C,SAA4CJ,EAAUE,EAAeC,GAEpE,IAEI1C,EAFA4C,KAGJ,IAAK5C,EAAI,EAAGA,EAAIuC,EAASM,OAAQ7C,IAChC4C,EAAaE,KAAMR,EAAKnC,kBAAmBoC,EAASvC,KAGrD,IAAI+C,EAAWnF,EAAIoF,kBAAmBJ,GAClCK,EAASrF,EAAIsF,gBAAiBN,GAElCH,EAAcU,IAAKJ,EAASK,EAAGL,EAASM,EAAGN,EAASO,GACpDZ,EAAaS,IAAKF,EAAOG,EAAGH,EAAOI,EAAGJ,EAAOK,GAK9CC,CAAmChB,EAAUE,EAAeC,GAC5DD,EAAce,OAAQd,EAAcF,GAEpC,IAAIO,EAAWT,EAAKvC,cACpBnC,EAAImD,gBAAiBuB,EAAMG,EAAcW,EAAGX,EAAcY,EAAGZ,EAAca,GAE3E,IAEItD,EAAGyD,EAAMC,EAFTC,EAAQpB,EAASM,OAGrB,IAAK7C,EAAI,EAAGA,EAAI2D,EAAO3D,IACtByD,EAAOlB,EAASvC,GAChB0D,EAAOnB,EAAUvC,EAAI2D,EAAQ,EAAI3D,EAAI,EAAI,GACzCpC,EAAIoD,iBAAkBsB,GAAOmB,EAAMC,EAAMX,KAY3CnF,EAAIgG,6BAA+B,SAAUC,GAE5C,IAAI7F,EAAS,IAAIJ,EAAIK,KAIrBD,EAAO0C,UAAW,IAAI9C,EAAI+C,WAAY,IAAI/C,EAAIgD,MAAO,EAAI,EAAI,KAC7D5C,EAAO0C,UAAW,IAAI9C,EAAI+C,WAAY,IAAI/C,EAAIgD,OAHtC,GAAA,EAGqD,KAC7D5C,EAAO0C,UAAW,IAAI9C,EAAI+C,WAAY,IAAI/C,EAAIgD,OAJtC,EAIiD,GAJjD,KAKR5C,EAAO0C,UAAW,IAAI9C,EAAI+C,WAAY,IAAI/C,EAAIgD,MAAO,GAL7C,GAAA,KAOR,IACI4B,EADa,EAAMtB,KAAKC,KAAM,GACR0C,EAO1B,OALAjG,EAAIyE,0BAA2BrE,GAAS,EAAG,EAAG,GAAIwE,GAClD5E,EAAIyE,0BAA2BrE,GAAS,EAAG,EAAG,GAAIwE,GAClD5E,EAAIyE,0BAA2BrE,GAAS,EAAG,EAAG,GAAIwE,GAClD5E,EAAIyE,0BAA2BrE,GAAS,EAAG,EAAG,GAAIwE,GAE3CxE,GAWRJ,EAAIkG,4BAA8B,SAAUD,GAE3C,IAAI7F,EAAS,IAAIJ,EAAIK,KAIrBL,EAAImD,gBAAiB/C,EAAQ,EAAI,EAAI,GACrCJ,EAAImD,gBAAiB/C,EAAQ,EAAI,GAHzB,GAIRJ,EAAImD,gBAAiB/C,EAAQ,GAJrB,EAI6B,GACrCJ,EAAImD,gBAAiB/C,GALb,EAKyB,EAAI,GACrCJ,EAAImD,gBAAiB/C,EAAQ,GANrB,GAAA,GAORJ,EAAImD,gBAAiB/C,GAPb,EAOyB,GAPzB,GAQRJ,EAAImD,gBAAiB/C,GARb,GAAA,EAQ6B,GACrCJ,EAAImD,gBAAiB/C,GATb,GAAA,GAAA,GAWR,IACIwE,EADa,EACSqB,EAS1B,OAPAjG,EAAIyE,0BAA2BrE,GAAS,EAAG,EAAG,EAAG,GAAIwE,GACrD5E,EAAIyE,0BAA2BrE,GAAS,EAAG,EAAG,EAAG,GAAIwE,GACrD5E,EAAIyE,0BAA2BrE,GAAS,EAAG,EAAG,EAAG,GAAIwE,GACrD5E,EAAIyE,0BAA2BrE,GAAS,EAAG,EAAG,EAAG,GAAIwE,GACrD5E,EAAIyE,0BAA2BrE,GAAS,EAAG,EAAG,EAAG,GAAIwE,GACrD5E,EAAIyE,0BAA2BrE,GAAS,EAAG,EAAG,EAAG,GAAIwE,GAE9CxE,GAWRJ,EAAImG,4BAA8B,SAAUF,GAE3C,IAAI7F,EAAS,IAAIJ,EAAIK,KAKrBL,EAAImD,gBAAiB/C,EAAQ,EAAI,EAAI,GACrCJ,EAAImD,gBAAiB/C,GAJb,EAIyB,EAAI,GACrCJ,EAAImD,gBAAiB/C,EAAQ,EAAI,EAAI,GACrCJ,EAAImD,gBAAiB/C,EAAQ,GANrB,EAM6B,GACrCJ,EAAImD,gBAAiB/C,EAAQ,EAAI,EAAI,GACrCJ,EAAImD,gBAAiB/C,EAAQ,EAAI,GARzB,GAUR,IACIwE,EADatB,KAAKC,KAAM,GACF0C,EAW1B,OATAjG,EAAIyE,0BAA2BrE,GAAS,EAAG,EAAG,GAAIwE,GAClD5E,EAAIyE,0BAA2BrE,GAAS,EAAG,EAAG,GAAIwE,GAClD5E,EAAIyE,0BAA2BrE,GAAS,EAAG,EAAG,GAAIwE,GAClD5E,EAAIyE,0BAA2BrE,GAAS,EAAG,EAAG,GAAIwE,GAClD5E,EAAIyE,0BAA2BrE,GAAS,EAAG,EAAG,GAAIwE,GAClD5E,EAAIyE,0BAA2BrE,GAAS,EAAG,EAAG,GAAIwE,GAClD5E,EAAIyE,0BAA2BrE,GAAS,EAAG,EAAG,GAAIwE,GAClD5E,EAAIyE,0BAA2BrE,GAAS,EAAG,EAAG,GAAIwE,GAE3CxE,GAWRJ,EAAIoG,8BAAgC,SAAUH,GAE7C,IAAI7F,EAAS,IAAIJ,EAAIK,KAIjBgD,GAAK,EAAMC,KAAKC,KAAM,IAAQ,EAC9BC,EAAI,EAAMH,EAEdrD,EAAImD,gBAAiB/C,EAAQ,EAAI,EAAI,GACrCJ,EAAImD,gBAAiB/C,EAAQ,EAAI,GANzB,GAORJ,EAAImD,gBAAiB/C,EAAQ,GAPrB,EAO6B,GACrCJ,EAAImD,gBAAiB/C,GARb,EAQyB,EAAI,GACrCJ,EAAImD,gBAAiB/C,EAAQ,GATrB,GAAA,GAURJ,EAAImD,gBAAiB/C,GAVb,EAUyB,GAVzB,GAWRJ,EAAImD,gBAAiB/C,GAXb,GAAA,EAW6B,GACrCJ,EAAImD,gBAAiB/C,GAZb,GAAA,GAAA,GAcRJ,EAAImD,gBAAiB/C,EAAQ,GAAKoD,GAAIH,GACtCrD,EAAImD,gBAAiB/C,EAAQ,GAAKoD,GAAIH,GACtCrD,EAAImD,gBAAiB/C,EAAQ,GAAKoD,GAAIH,GACtCrD,EAAImD,gBAAiB/C,EAAQ,GAAKoD,GAAIH,GAEtCrD,EAAImD,gBAAiB/C,GAASoD,GAAIH,EAAG,GACrCrD,EAAImD,gBAAiB/C,GAASoD,GAAIH,EAAG,GACrCrD,EAAImD,gBAAiB/C,GAASoD,GAAIH,EAAG,GACrCrD,EAAImD,gBAAiB/C,GAASoD,GAAIH,EAAG,GAErCrD,EAAImD,gBAAiB/C,GAASiD,EAAG,GAAKG,GACtCxD,EAAImD,gBAAiB/C,GAASiD,EAAG,GAAKG,GACtCxD,EAAImD,gBAAiB/C,GAASiD,EAAG,GAAKG,GACtCxD,EAAImD,gBAAiB/C,GAASiD,EAAG,GAAKG,GAEtC,IACIoB,GADatB,KAAKC,KAAM,GAAO,GACT0C,EAe1B,OAbAjG,EAAIyE,0BAA2BrE,GAAS,EAAG,EAAG,GAAI,EAAG,IAAKwE,GAC1D5E,EAAIyE,0BAA2BrE,GAAS,EAAG,GAAI,GAAI,EAAG,IAAKwE,GAC3D5E,EAAIyE,0BAA2BrE,GAAS,EAAG,GAAI,GAAI,EAAG,GAAIwE,GAC1D5E,EAAIyE,0BAA2BrE,GAAS,EAAG,EAAG,EAAG,GAAI,IAAKwE,GAC1D5E,EAAIyE,0BAA2BrE,GAAS,EAAG,GAAI,EAAG,GAAI,GAAIwE,GAC1D5E,EAAIyE,0BAA2BrE,GAAS,EAAG,GAAI,EAAG,GAAI,IAAKwE,GAC3D5E,EAAIyE,0BAA2BrE,GAAS,EAAG,GAAI,EAAG,GAAI,IAAKwE,GAC3D5E,EAAIyE,0BAA2BrE,GAAS,EAAG,GAAI,EAAG,GAAI,IAAKwE,GAC3D5E,EAAIyE,0BAA2BrE,GAAS,EAAG,GAAI,EAAG,GAAI,GAAIwE,GAC1D5E,EAAIyE,0BAA2BrE,GAAS,EAAG,GAAI,GAAI,EAAG,IAAKwE,GAC3D5E,EAAIyE,0BAA2BrE,GAAS,EAAG,EAAG,GAAI,EAAG,IAAKwE,GAC1D5E,EAAIyE,0BAA2BrE,GAAS,EAAG,GAAI,GAAI,EAAG,IAAKwE,GAEpDxE,GAWRJ,EAAIqG,6BAA+B,SAAUJ,GAE5C,IAAI7F,EAAS,IAAIJ,EAAIK,KAIjBgD,GAAK,EAAMC,KAAKC,KAAM,IAAQ,EAElCvD,EAAImD,gBAAiB/C,EAAQ,EAAI,GAAKiD,GACtCrD,EAAImD,gBAAiB/C,EAAQ,EAAI,GAAKiD,GACtCrD,EAAImD,gBAAiB/C,EAAQ,GANrB,GAM8BiD,GACtCrD,EAAImD,gBAAiB/C,EAAQ,GAPrB,GAO8BiD,GAEtCrD,EAAImD,gBAAiB/C,EAAQ,GAAKiD,EAAG,GACrCrD,EAAImD,gBAAiB/C,EAAQ,GAAKiD,EAAG,GACrCrD,EAAImD,gBAAiB/C,GAXb,GAW0BiD,EAAG,GACrCrD,EAAImD,gBAAiB/C,GAZb,GAY0BiD,EAAG,GAErCrD,EAAImD,gBAAiB/C,GAASiD,EAAG,EAAI,GACrCrD,EAAImD,gBAAiB/C,GAASiD,EAAG,EAAI,GACrCrD,EAAImD,gBAAiB/C,GAASiD,EAAG,GAhBzB,GAiBRrD,EAAImD,gBAAiB/C,GAASiD,EAAG,GAjBzB,GAmBR,IACIuB,EADa,EACSqB,EAuB1B,OArBAjG,EAAIyE,0BAA2BrE,GAAS,EAAG,EAAG,GAAIwE,GAClD5E,EAAIyE,0BAA2BrE,GAAS,EAAG,EAAG,GAAIwE,GAClD5E,EAAIyE,0BAA2BrE,GAAS,EAAG,EAAG,GAAIwE,GAClD5E,EAAIyE,0BAA2BrE,GAAS,EAAG,EAAG,GAAIwE,GAClD5E,EAAIyE,0BAA2BrE,GAAS,EAAG,EAAG,GAAIwE,GAClD5E,EAAIyE,0BAA2BrE,GAAS,EAAG,EAAG,IAAKwE,GACnD5E,EAAIyE,0BAA2BrE,GAAS,EAAG,EAAG,IAAKwE,GACnD5E,EAAIyE,0BAA2BrE,GAAS,EAAG,EAAG,GAAIwE,GAClD5E,EAAIyE,0BAA2BrE,GAAS,EAAG,GAAI,GAAIwE,GACnD5E,EAAIyE,0BAA2BrE,GAAS,EAAG,GAAI,GAAIwE,GACnD5E,EAAIyE,0BAA2BrE,GAAS,EAAG,EAAG,GAAIwE,GAClD5E,EAAIyE,0BAA2BrE,GAAS,EAAG,EAAG,GAAIwE,GAClD5E,EAAIyE,0BAA2BrE,GAAS,EAAG,EAAG,GAAIwE,GAClD5E,EAAIyE,0BAA2BrE,GAAS,EAAG,EAAG,GAAIwE,GAClD5E,EAAIyE,0BAA2BrE,GAAS,EAAG,EAAG,IAAKwE,GACnD5E,EAAIyE,0BAA2BrE,GAAS,EAAG,GAAI,GAAIwE,GACnD5E,EAAIyE,0BAA2BrE,GAAS,EAAG,EAAG,IAAKwE,GACnD5E,EAAIyE,0BAA2BrE,GAAS,EAAG,GAAI,GAAIwE,GACnD5E,EAAIyE,0BAA2BrE,GAAS,EAAG,GAAI,GAAIwE,GACnD5E,EAAIyE,0BAA2BrE,GAAS,EAAG,EAAG,IAAKwE,GAE5CxE,GASRJ,EAAIyB,2BAA6B,WAGhC,OAAOzB,EAAIkG,4BADa,MAUzBlG,EAAI0B,4BAA8B,WAGjC,OAAO1B,EAAIkG,4BADa,KAUzBlG,EAAI2B,6BAA+B,WAElC,IAAIsE,EAAoB3C,KAAKC,MAAO,GAAO,GAAOD,KAAKC,KAAM,IAAQ,GAAO,GAC5E,OAAOvD,EAAIoG,8BAA+BH,IAS3CjG,EAAI4B,mCAAqC,WAExC,IAAIqE,EAAoB3C,KAAKC,MAAO,EAAM,EAAMD,KAAKC,KAAM,IAAQ,GACnE,OAAOvD,EAAIoG,8BAA+BH,IAS3CjG,EAAI6B,0BAA4B,WAE/B,IAAIoE,EAAqB3C,KAAKC,KAAM,IAAQD,KAAKC,KAAM,GAAO,GAAQ,EACtE,OAAOvD,EAAIqG,6BAA8BJ,IAS1CjG,EAAI8B,iCAAmC,WAEtC,IAAImE,EAAoB3C,KAAKC,KAAM,IAAQ,GAC3C,OAAOvD,EAAIqG,6BAA8BJ,IAS1CjG,EAAI+B,mCAAqC,WAExC,IAAIkE,EAAqB3C,KAAKC,KAAM,IAAQ,EAAMD,KAAKC,KAAM,IAAS,EACtE,OAAOvD,EAAIqG,6BAA8BJ,IAS1CjG,EAAIgC,+BAAiC,WAEpC,IAAIiE,EAAoB3C,KAAKC,KAAM,GAAO,EAAMD,KAAKC,KAAM,GAAO,EAClE,OAAOvD,EAAImG,4BAA6BF,IASzCjG,EAAIiC,wBAA0B,WAE7B,IAAIgE,EAAoB3C,KAAKC,KAAM,GAAO,EAC1C,OAAOvD,EAAImG,4BAA6BF,IASzCjG,EAAIkC,2BAA6B,WAEhC,IAAI+D,EAAoB3C,KAAKC,KAAM,GAAO,GAC1C,OAAOvD,EAAIgG,6BAA8BC,IAGnCjG","file":"../../extras/solidgenerator.js","sourcesContent":["define([\"../core/jsm\"],function(JSM){\n\t/**\n\t* Function: GenerateSolidWithRadius\n\t* Description: Generates a special solid with the given radius.\n\t* Parameters:\n\t*\tsolidName {string} the name of the solid\n\t*\tradius {number} the radius of the solid\n\t* Returns:\n\t*\t{Body} the result\n\t*/\n\tJSM.GenerateSolidWithRadius = function (solidName, radius)\n\t{\n\t\tvar result = new JSM.Body ();\n\t\tvar equalRadius = true;\n\t\t\n\t\tif (solidName === 'Tetrahedron') {\n\t\t\tresult = JSM.GenerateTetrahedron ();\n\t\t} else if (solidName === 'Hexahedron') {\n\t\t\tresult = JSM.GenerateHexahedron ();\n\t\t} else if (solidName === 'Octahedron') {\n\t\t\tresult = JSM.GenerateOctahedron ();\n\t\t} else if (solidName === 'Dodecahedron') {\n\t\t\tresult = JSM.GenerateDodecahedron ();\n\t\t} else if (solidName === 'Icosahedron') {\n\t\t\tresult = JSM.GenerateIcosahedron ();\n\t\t} else if (solidName === 'TruncatedTetrahedron') {\n\t\t\tresult = JSM.GenerateTruncatedTetrahedron ();\n\t\t} else if (solidName === 'Cuboctahedron') {\n\t\t\tresult = JSM.GenerateCuboctahedron ();\n\t\t} else if (solidName === 'TruncatedCube') {\n\t\t\tresult = JSM.GenerateTruncatedCube ();\n\t\t} else if (solidName === 'TruncatedOctahedron') {\n\t\t\tresult = JSM.GenerateTruncatedOctahedron ();\n\t\t} else if (solidName === 'Rhombicuboctahedron') {\n\t\t\tresult = JSM.GenerateRhombicuboctahedron ();\n\t\t} else if (solidName === 'TruncatedCuboctahedron') {\n\t\t\tresult = JSM.GenerateTruncatedCuboctahedron ();\n\t\t} else if (solidName === 'SnubCube') {\n\t\t\tresult = JSM.GenerateSnubCube ();\n\t\t} else if (solidName === 'Icosidodecahedron') {\n\t\t\tresult = JSM.GenerateIcosidodecahedron ();\n\t\t} else if (solidName === 'TruncatedDodecahedron') {\n\t\t\tresult = JSM.GenerateTruncatedDodecahedron ();\n\t\t} else if (solidName === 'TruncatedIcosahedron') {\n\t\t\tresult = JSM.GenerateTruncatedIcosahedron ();\n\t\t} else if (solidName === 'Rhombicosidodecahedron') {\n\t\t\tresult = JSM.GenerateRhombicosidodecahedron ();\n\t\t} else if (solidName === 'TruncatedIcosidodecahedron') {\n\t\t\tresult = JSM.GenerateTruncatedIcosidodecahedron ();\n\t\t} else if (solidName === 'SnubDodecahedron') {\n\t\t\tresult = JSM.GenerateSnubDodecahedron ();\n\t\t} else if (solidName === 'TetrakisHexahedron') {\n\t\t\tresult = JSM.GenerateTetrakisHexahedron ();\n\t\t\tequalRadius = false;\n\t\t} else if (solidName === 'RhombicDodecahedron') {\n\t\t\tresult = JSM.GenerateRhombicDodecahedron ();\n\t\t\tequalRadius = false;\n\t\t} else if (solidName === 'PentakisDodecahedron') {\n\t\t\tresult = JSM.GeneratePentakisDodecahedron ();\n\t\t\tequalRadius = false;\n\t\t} else if (solidName === 'SmallStellatedDodecahedron') {\n\t\t\tresult = JSM.GenerateSmallStellatedDodecahedron ();\n\t\t\tequalRadius = false;\n\t\t} else if (solidName === 'GreatDodecahedron') {\n\t\t\tresult = JSM.GenerateGreatDodecahedron ();\n\t\t\tequalRadius = false;\n\t\t} else if (solidName === 'SmallTriambicIcosahedron') {\n\t\t\tresult = JSM.GenerateSmallTriambicIcosahedron ();\n\t\t\tequalRadius = false;\n\t\t} else if (solidName === 'GreatStellatedDodecahedron') {\n\t\t\tresult = JSM.GenerateGreatStellatedDodecahedron ();\n\t\t\tequalRadius = false;\n\t\t} else if (solidName === 'SmallTriakisOctahedron') {\n\t\t\tresult = JSM.GenerateSmallTriakisOctahedron ();\n\t\t\tequalRadius = false;\n\t\t} else if (solidName === 'StellaOctangula') {\n\t\t\tresult = JSM.GenerateStellaOctangula ();\n\t\t\tequalRadius = false;\n\t\t} else if (solidName === 'TriakisTetrahedron') {\n\t\t\tresult = JSM.GenerateTriakisTetrahedron ();\n\t\t\tequalRadius = false;\n\t\t}\n\n\t\tif (result.VertexCount () > 0) {\n\t\t\tvar i;\n\t\t\n\t\t\tvar maxRadius = 0.0;\n\t\t\tif (equalRadius) {\n\t\t\t\tmaxRadius = result.GetVertexPosition (0).Length ();\n\t\t\t} else {\n\t\t\t\tvar currentRadius;\n\t\t\t\tfor (i = 0; i < result.VertexCount (); i++) {\n\t\t\t\t\tcurrentRadius = result.GetVertexPosition (i).Length ();\n\t\t\t\t\tif (JSM.IsGreater (currentRadius, maxRadius)) {\n\t\t\t\t\t\tmaxRadius = currentRadius;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\t\n\t\t\tvar scale = radius / maxRadius;\n\t\t\t\n\t\t\tvar vertex;\n\t\t\tfor (i = 0; i < result.VertexCount (); i++) {\n\t\t\t\tvertex = result.GetVertex (i);\n\t\t\t\tvertex.position.MultiplyScalar (scale);\n\t\t\t}\n\t\t}\n\t\t\n\t\treturn result;\n\t};\n\n\t/**\n\t* Function: GenerateTetrahedron\n\t* Description: Generates a tetrahedron.\n\t* Returns:\n\t*\t{Body} the result\n\t*/\n\tJSM.GenerateTetrahedron = function ()\n\t{\n\t\tvar result = new JSM.Body ();\n\n\t\tvar a = 1.0;\n\n\t\tresult.AddVertex (new JSM.BodyVertex (new JSM.Coord (+a, +a, +a)));\n\t\tresult.AddVertex (new JSM.BodyVertex (new JSM.Coord (-a, -a, +a)));\n\t\tresult.AddVertex (new JSM.BodyVertex (new JSM.Coord (-a, +a, -a)));\n\t\tresult.AddVertex (new JSM.BodyVertex (new JSM.Coord (+a, -a, -a)));\n\n\t\tresult.AddPolygon (new JSM.BodyPolygon ([0, 1, 3]));\n\t\tresult.AddPolygon (new JSM.BodyPolygon ([0, 2, 1]));\n\t\tresult.AddPolygon (new JSM.BodyPolygon ([0, 3, 2]));\n\t\tresult.AddPolygon (new JSM.BodyPolygon ([1, 2, 3]));\n\t\t\n\t\treturn result;\n\t};\n\n\t/**\n\t* Function: GenerateHexahedron\n\t* Description: Generates a hexahedron.\n\t* Returns:\n\t*\t{Body} the result\n\t*/\n\tJSM.GenerateHexahedron = function ()\n\t{\n\t\tvar result = new JSM.Body ();\n\n\t\tvar a = 1.0;\n\n\t\tJSM.AddVertexToBody (result, +a, +a, +a);\n\t\tJSM.AddVertexToBody (result, +a, +a, -a);\n\t\tJSM.AddVertexToBody (result, +a, -a, +a);\n\t\tJSM.AddVertexToBody (result, +a, -a, -a);\n\t\tJSM.AddVertexToBody (result, -a, +a, +a);\n\t\tJSM.AddVertexToBody (result, -a, +a, -a);\n\t\tJSM.AddVertexToBody (result, -a, -a, +a);\n\t\tJSM.AddVertexToBody (result, -a, -a, -a);\n\n\t\tJSM.AddPolygonToBody (result, [0, 1, 5, 4]);\n\t\tJSM.AddPolygonToBody (result, [0, 2, 3, 1]);\n\t\tJSM.AddPolygonToBody (result, [0, 4, 6, 2]);\n\t\tJSM.AddPolygonToBody (result, [1, 3, 7, 5]);\n\t\tJSM.AddPolygonToBody (result, [2, 6, 7, 3]);\n\t\tJSM.AddPolygonToBody (result, [4, 5, 7, 6]);\n\n\t\treturn result;\n\t};\n\n\t/**\n\t* Function: GenerateOctahedron\n\t* Description: Generates an octahedron.\n\t* Returns:\n\t*\t{Body} the result\n\t*/\n\tJSM.GenerateOctahedron = function ()\n\t{\n\t\tvar result = new JSM.Body ();\n\n\t\tvar a = 1.0;\n\t\tvar b = 0.0;\n\n\t\tJSM.AddVertexToBody (result, +a, +b, +b);\n\t\tJSM.AddVertexToBody (result, -a, +b, +b);\n\t\tJSM.AddVertexToBody (result, +b, +a, +b);\n\t\tJSM.AddVertexToBody (result, +b, -a, +b);\n\t\tJSM.AddVertexToBody (result, +b, +b, +a);\n\t\tJSM.AddVertexToBody (result, +b, +b, -a);\n\n\t\tJSM.AddPolygonToBody (result, [0, 2, 4]);\n\t\tJSM.AddPolygonToBody (result, [0, 3, 5]);\n\t\tJSM.AddPolygonToBody (result, [0, 4, 3]);\n\t\tJSM.AddPolygonToBody (result, [0, 5, 2]);\n\t\tJSM.AddPolygonToBody (result, [1, 2, 5]);\n\t\tJSM.AddPolygonToBody (result, [1, 3, 4]);\n\t\tJSM.AddPolygonToBody (result, [1, 4, 2]);\n\t\tJSM.AddPolygonToBody (result, [1, 5, 3]);\n\n\t\treturn result;\n\t};\n\n\t/**\n\t* Function: GenerateDodecahedron\n\t* Description: Generates a dodecahedron.\n\t* Returns:\n\t*\t{Body} the result\n\t*/\n\tJSM.GenerateDodecahedron = function ()\n\t{\n\t\tvar result = new JSM.Body ();\n\n\t\tvar a = 1.0;\n\t\tvar b = 0.0;\n\t\tvar c = (1.0 + Math.sqrt (5.0)) / 2.0;\n\t\tvar d = 1.0 / c;\n\n\t\tJSM.AddVertexToBody (result, +a, +a, +a);\n\t\tJSM.AddVertexToBody (result, +a, +a, -a);\n\t\tJSM.AddVertexToBody (result, +a, -a, +a);\n\t\tJSM.AddVertexToBody (result, -a, +a, +a);\n\t\t\n\t\tJSM.AddVertexToBody (result, +a, -a, -a);\n\t\tJSM.AddVertexToBody (result, -a, +a, -a);\n\t\tJSM.AddVertexToBody (result, -a, -a, +a);\n\t\tJSM.AddVertexToBody (result, -a, -a, -a);\n\n\t\tJSM.AddVertexToBody (result, +b, +d, +c);\n\t\tJSM.AddVertexToBody (result, +b, +d, -c);\n\t\tJSM.AddVertexToBody (result, +b, -d, +c);\n\t\tJSM.AddVertexToBody (result, +b, -d, -c);\n\n\t\tJSM.AddVertexToBody (result, +d, +c, +b);\n\t\tJSM.AddVertexToBody (result, +d, -c, +b);\n\t\tJSM.AddVertexToBody (result, -d, +c, +b);\n\t\tJSM.AddVertexToBody (result, -d, -c, +b);\n\n\t\tJSM.AddVertexToBody (result, +c, +b, +d);\n\t\tJSM.AddVertexToBody (result, -c, +b, +d);\n\t\tJSM.AddVertexToBody (result, +c, +b, -d);\n\t\tJSM.AddVertexToBody (result, -c, +b, -d);\n\n\t\tJSM.AddPolygonToBody (result, [0, 8, 10, 2, 16]);\n\t\tJSM.AddPolygonToBody (result, [0, 16, 18, 1, 12]);\n\t\tJSM.AddPolygonToBody (result, [0, 12, 14, 3, 8]);\n\t\tJSM.AddPolygonToBody (result, [1, 9, 5, 14, 12]);\n\t\tJSM.AddPolygonToBody (result, [1, 18, 4, 11, 9]);\n\t\tJSM.AddPolygonToBody (result, [2, 10, 6, 15, 13]);\n\t\tJSM.AddPolygonToBody (result, [2, 13, 4, 18, 16]);\n\t\tJSM.AddPolygonToBody (result, [3, 14, 5, 19, 17]);\n\t\tJSM.AddPolygonToBody (result, [3, 17, 6, 10, 8]);\n\t\tJSM.AddPolygonToBody (result, [4, 13, 15, 7, 11]);\n\t\tJSM.AddPolygonToBody (result, [5, 9, 11, 7, 19]);\n\t\tJSM.AddPolygonToBody (result, [6, 17, 19, 7, 15]);\n\n\t\treturn result;\n\t};\n\n\t/**\n\t* Function: GenerateIcosahedron\n\t* Description: Generates an icosahedron.\n\t* Returns:\n\t*\t{Body} the result\n\t*/\n\tJSM.GenerateIcosahedron = function ()\n\t{\n\t\tvar result = new JSM.Body ();\n\n\t\tvar a = 1.0;\n\t\tvar b = 0.0;\n\t\tvar c = (1.0 + Math.sqrt (5.0)) / 2.0;\n\n\t\tJSM.AddVertexToBody (result, +b, +a, +c);\n\t\tJSM.AddVertexToBody (result, +b, +a, -c);\n\t\tJSM.AddVertexToBody (result, +b, -a, +c);\n\t\tJSM.AddVertexToBody (result, +b, -a, -c);\n\n\t\tJSM.AddVertexToBody (result, +a, +c, +b);\n\t\tJSM.AddVertexToBody (result, +a, -c, +b);\n\t\tJSM.AddVertexToBody (result, -a, +c, +b);\n\t\tJSM.AddVertexToBody (result, -a, -c, +b);\n\n\t\tJSM.AddVertexToBody (result, +c, +b, +a);\n\t\tJSM.AddVertexToBody (result, +c, +b, -a);\n\t\tJSM.AddVertexToBody (result, -c, +b, +a);\n\t\tJSM.AddVertexToBody (result, -c, +b, -a);\n\n\t\tJSM.AddPolygonToBody (result, [0, 2, 8]);\n\t\tJSM.AddPolygonToBody (result, [0, 4, 6]);\n\t\tJSM.AddPolygonToBody (result, [0, 6, 10]);\n\t\tJSM.AddPolygonToBody (result, [0, 8, 4]);\n\t\tJSM.AddPolygonToBody (result, [0, 10, 2]);\n\t\tJSM.AddPolygonToBody (result, [1, 3, 11]);\n\t\tJSM.AddPolygonToBody (result, [1, 4, 9]);\n\t\tJSM.AddPolygonToBody (result, [1, 6, 4]);\n\t\tJSM.AddPolygonToBody (result, [1, 9, 3]);\n\t\tJSM.AddPolygonToBody (result, [1, 11, 6]);\n\t\tJSM.AddPolygonToBody (result, [2, 5, 8]);\n\t\tJSM.AddPolygonToBody (result, [2, 7, 5]);\n\t\tJSM.AddPolygonToBody (result, [2, 10, 7]);\n\t\tJSM.AddPolygonToBody (result, [3, 5, 7]);\n\t\tJSM.AddPolygonToBody (result, [3, 7, 11]);\n\t\tJSM.AddPolygonToBody (result, [3, 9, 5]);\n\t\tJSM.AddPolygonToBody (result, [4, 8, 9]);\n\t\tJSM.AddPolygonToBody (result, [5, 9, 8]);\n\t\tJSM.AddPolygonToBody (result, [6, 11, 10]);\n\t\tJSM.AddPolygonToBody (result, [7, 10, 11]);\n\n\t\treturn result;\n\t};\n\n\t/**\n\t* Function: GenerateTruncatedTetrahedron\n\t* Description: Generates a truncated tetrahedron.\n\t* Returns:\n\t*\t{Body} the result\n\t*/\n\tJSM.GenerateTruncatedTetrahedron = function ()\n\t{\n\t\tvar result = new JSM.Body ();\n\n\t\tvar a = 1.0;\n\t\tvar b = 3.0;\n\n\t\tJSM.AddVertexToBody (result, +a, +a, +b);\n\t\tJSM.AddVertexToBody (result, +a, -a, -b);\n\t\tJSM.AddVertexToBody (result, -a, -a, +b);\n\t\tJSM.AddVertexToBody (result, -a, +a, -b);\n\n\t\tJSM.AddVertexToBody (result, +a, +b, +a);\n\t\tJSM.AddVertexToBody (result, +a, -b, -a);\n\t\tJSM.AddVertexToBody (result, -a, -b, +a);\n\t\tJSM.AddVertexToBody (result, -a, +b, -a);\n\n\t\tJSM.AddVertexToBody (result, +b, +a, +a);\n\t\tJSM.AddVertexToBody (result, +b, -a, -a);\n\t\tJSM.AddVertexToBody (result, -b, -a, +a);\n\t\tJSM.AddVertexToBody (result, -b, +a, -a);\n\n\t\tJSM.AddPolygonToBody (result, [0, 8, 4]);\n\t\tJSM.AddPolygonToBody (result, [1, 9, 5]);\n\t\tJSM.AddPolygonToBody (result, [2, 10, 6]);\n\t\tJSM.AddPolygonToBody (result, [3, 11, 7]);\n\n\t\tJSM.AddPolygonToBody (result, [0, 2, 6, 5, 9, 8]);\n\t\tJSM.AddPolygonToBody (result, [0, 4, 7, 11, 10, 2]);\n\t\tJSM.AddPolygonToBody (result, [1, 3, 7, 4, 8, 9]);\n\t\tJSM.AddPolygonToBody (result, [1, 5, 6, 10, 11, 3]);\n\n\t\treturn result;\n\t};\n\n\t/**\n\t* Function: GenerateCuboctahedron\n\t* Description: Generates a cuboctahedron.\n\t* Returns:\n\t*\t{Body} the result\n\t*/\n\tJSM.GenerateCuboctahedron = function ()\n\t{\n\t\tvar result = new JSM.Body ();\n\n\t\tvar a = 1.0;\n\t\tvar b = 0.0;\n\n\t\tJSM.AddVertexToBody (result, +a, +a, +b);\n\t\tJSM.AddVertexToBody (result, +a, -a, +b);\n\t\tJSM.AddVertexToBody (result, -a, -a, +b);\n\t\tJSM.AddVertexToBody (result, -a, +a, +b);\n\n\t\tJSM.AddVertexToBody (result, +a, +b, +a);\n\t\tJSM.AddVertexToBody (result, +a, +b, -a);\n\t\tJSM.AddVertexToBody (result, -a, +b, +a);\n\t\tJSM.AddVertexToBody (result, -a, +b, -a);\n\n\t\tJSM.AddVertexToBody (result, +b, +a, +a);\n\t\tJSM.AddVertexToBody (result, +b, -a, -a);\n\t\tJSM.AddVertexToBody (result, +b, -a, +a);\n\t\tJSM.AddVertexToBody (result, +b, +a, -a);\n\n\t\tJSM.AddPolygonToBody (result, [0, 5, 11]);\n\t\tJSM.AddPolygonToBody (result, [0, 8, 4]);\n\t\tJSM.AddPolygonToBody (result, [1, 4, 10]);\n\t\tJSM.AddPolygonToBody (result, [1, 9, 5]);\n\t\tJSM.AddPolygonToBody (result, [2, 7, 9]);\n\t\tJSM.AddPolygonToBody (result, [2, 10, 6]);\n\t\tJSM.AddPolygonToBody (result, [3, 6, 8]);\n\t\tJSM.AddPolygonToBody (result, [3, 11, 7]);\n\n\t\tJSM.AddPolygonToBody (result, [0, 4, 1, 5]);\n\t\tJSM.AddPolygonToBody (result, [0, 11, 3, 8]);\n\t\tJSM.AddPolygonToBody (result, [1, 10, 2, 9]);\n\t\tJSM.AddPolygonToBody (result, [2, 6, 3, 7]);\n\t\tJSM.AddPolygonToBody (result, [4, 8, 6, 10]);\n\t\tJSM.AddPolygonToBody (result, [5, 9, 7, 11]);\n\n\t\treturn result;\n\t};\n\n\t/**\n\t* Function: GenerateTruncatedCube\n\t* Description: Generates a truncated cube.\n\t* Returns:\n\t*\t{Body} the result\n\t*/\n\tJSM.GenerateTruncatedCube = function ()\n\t{\n\t\tvar result = new JSM.Body ();\n\n\t\tvar a = 1.0;\n\t\tvar b = Math.sqrt (2.0) - 1.0;\n\n\t\tJSM.AddVertexToBody (result, +a, +a, +b);\n\t\tJSM.AddVertexToBody (result, +a, +a, -b);\n\t\tJSM.AddVertexToBody (result, +a, -a, +b);\n\t\tJSM.AddVertexToBody (result, -a, +a, +b);\n\t\tJSM.AddVertexToBody (result, +a, -a, -b);\n\t\tJSM.AddVertexToBody (result, -a, +a, -b);\n\t\tJSM.AddVertexToBody (result, -a, -a, +b);\n\t\tJSM.AddVertexToBody (result, -a, -a, -b);\n\n\t\tJSM.AddVertexToBody (result, +a, +b, +a);\n\t\tJSM.AddVertexToBody (result, +a, +b, -a);\n\t\tJSM.AddVertexToBody (result, +a, -b, +a);\n\t\tJSM.AddVertexToBody (result, -a, +b, +a);\n\t\tJSM.AddVertexToBody (result, +a, -b, -a);\n\t\tJSM.AddVertexToBody (result, -a, +b, -a);\n\t\tJSM.AddVertexToBody (result, -a, -b, +a);\n\t\tJSM.AddVertexToBody (result, -a, -b, -a);\n\n\t\tJSM.AddVertexToBody (result, +b, +a, +a);\n\t\tJSM.AddVertexToBody (result, +b, +a, -a);\n\t\tJSM.AddVertexToBody (result, +b, -a, +a);\n\t\tJSM.AddVertexToBody (result, -b, +a, +a);\n\t\tJSM.AddVertexToBody (result, +b, -a, -a);\n\t\tJSM.AddVertexToBody (result, -b, +a, -a);\n\t\tJSM.AddVertexToBody (result, -b, -a, +a);\n\t\tJSM.AddVertexToBody (result, -b, -a, -a);\n\n\t\tJSM.AddPolygonToBody (result, [0, 16, 8]);\n\t\tJSM.AddPolygonToBody (result, [1, 9, 17]);\n\t\tJSM.AddPolygonToBody (result, [2, 10, 18]);\n\t\tJSM.AddPolygonToBody (result, [3, 11, 19]);\n\t\tJSM.AddPolygonToBody (result, [4, 20, 12]);\n\t\tJSM.AddPolygonToBody (result, [5, 21, 13]);\n\t\tJSM.AddPolygonToBody (result, [6, 22, 14]);\n\t\tJSM.AddPolygonToBody (result, [7, 15, 23]);\n\n\t\tJSM.AddPolygonToBody (result, [0, 1, 17, 21, 5, 3, 19, 16]);\n\t\tJSM.AddPolygonToBody (result, [0, 8, 10, 2, 4, 12, 9, 1]);\n\t\tJSM.AddPolygonToBody (result, [2, 18, 22, 6, 7, 23, 20, 4]);\n\t\tJSM.AddPolygonToBody (result, [3, 5, 13, 15, 7, 6, 14, 11]);\n\t\tJSM.AddPolygonToBody (result, [8, 16, 19, 11, 14, 22, 18, 10]);\n\t\tJSM.AddPolygonToBody (result, [9, 12, 20, 23, 15, 13, 21, 17]);\n\n\t\treturn result;\n\t};\n\n\t/**\n\t* Function: GenerateTruncatedOctahedron\n\t* Description: Generates a truncated octahedron.\n\t* Returns:\n\t*\t{Body} the result\n\t*/\n\tJSM.GenerateTruncatedOctahedron = function ()\n\t{\n\t\tvar result = new JSM.Body ();\n\n\t\tvar a = 1.0;\n\t\tvar b = 0.0;\n\t\tvar c = 2.0;\n\n\t\tJSM.AddVertexToBody (result, +b, +a, +c);\n\t\tJSM.AddVertexToBody (result, +b, +a, -c);\n\t\tJSM.AddVertexToBody (result, +b, -a, +c);\n\t\tJSM.AddVertexToBody (result, +b, -a, -c);\n\n\t\tJSM.AddVertexToBody (result, +b, +c, +a);\n\t\tJSM.AddVertexToBody (result, +b, -c, +a);\n\t\tJSM.AddVertexToBody (result, +b, +c, -a);\n\t\tJSM.AddVertexToBody (result, +b, -c, -a);\n\n\t\tJSM.AddVertexToBody (result, +a, +b, +c);\n\t\tJSM.AddVertexToBody (result, +a, +b, -c);\n\t\tJSM.AddVertexToBody (result, -a, +b, +c);\n\t\tJSM.AddVertexToBody (result, -a, +b, -c);\n\n\t\tJSM.AddVertexToBody (result, +a, +c, +b);\n\t\tJSM.AddVertexToBody (result, +a, -c, +b);\n\t\tJSM.AddVertexToBody (result, -a, +c, +b);\n\t\tJSM.AddVertexToBody (result, -a, -c, +b);\n\n\t\tJSM.AddVertexToBody (result, +c, +b, +a);\n\t\tJSM.AddVertexToBody (result, -c, +b, +a);\n\t\tJSM.AddVertexToBody (result, +c, +b, -a);\n\t\tJSM.AddVertexToBody (result, -c, +b, -a);\n\n\t\tJSM.AddVertexToBody (result, +c, +a, +b);\n\t\tJSM.AddVertexToBody (result, -c, +a, +b);\n\t\tJSM.AddVertexToBody (result, +c, -a, +b);\n\t\tJSM.AddVertexToBody (result, -c, -a, +b);\n\n\t\tJSM.AddPolygonToBody (result, [0, 10, 2, 8]);\n\t\tJSM.AddPolygonToBody (result, [1, 9, 3, 11]);\n\t\tJSM.AddPolygonToBody (result, [4, 12, 6, 14]);\n\t\tJSM.AddPolygonToBody (result, [5, 15, 7, 13]);\n\t\tJSM.AddPolygonToBody (result, [16, 22, 18, 20]);\n\t\tJSM.AddPolygonToBody (result, [17, 21, 19, 23]);\n\n\t\tJSM.AddPolygonToBody (result, [0, 4, 14, 21, 17, 10]);\n\t\tJSM.AddPolygonToBody (result, [0, 8, 16, 20, 12, 4]);\n\t\tJSM.AddPolygonToBody (result, [1, 6, 12, 20, 18, 9]);\n\t\tJSM.AddPolygonToBody (result, [1, 11, 19, 21, 14, 6]);\n\t\tJSM.AddPolygonToBody (result, [2, 5, 13, 22, 16, 8]);\n\t\tJSM.AddPolygonToBody (result, [2, 10, 17, 23, 15, 5]);\n\t\tJSM.AddPolygonToBody (result, [3, 7, 15, 23, 19, 11]);\n\t\tJSM.AddPolygonToBody (result, [3, 9, 18, 22, 13, 7]);\n\n\t\treturn result;\n\t};\n\n\t/**\n\t* Function: GenerateRhombicuboctahedron\n\t* Description: Generates a rhombicuboctahedron.\n\t* Returns:\n\t*\t{Body} the result\n\t*/\n\tJSM.GenerateRhombicuboctahedron = function ()\n\t{\n\t\tvar result = new JSM.Body ();\n\n\t\tvar a = 1.0;\n\t\tvar b = 1.0 + Math.sqrt (2.0);\n\n\t\tJSM.AddVertexToBody (result, +a, +a, +b);\n\t\tJSM.AddVertexToBody (result, +a, +a, -b);\n\t\tJSM.AddVertexToBody (result, +a, -a, +b);\n\t\tJSM.AddVertexToBody (result, -a, +a, +b);\n\t\tJSM.AddVertexToBody (result, +a, -a, -b);\n\t\tJSM.AddVertexToBody (result, -a, +a, -b);\n\t\tJSM.AddVertexToBody (result, -a, -a, +b);\n\t\tJSM.AddVertexToBody (result, -a, -a, -b);\n\n\t\tJSM.AddVertexToBody (result, +a, +b, +a);\n\t\tJSM.AddVertexToBody (result, +a, +b, -a);\n\t\tJSM.AddVertexToBody (result, +a, -b, +a);\n\t\tJSM.AddVertexToBody (result, -a, +b, +a);\n\t\tJSM.AddVertexToBody (result, +a, -b, -a);\n\t\tJSM.AddVertexToBody (result, -a, +b, -a);\n\t\tJSM.AddVertexToBody (result, -a, -b, +a);\n\t\tJSM.AddVertexToBody (result, -a, -b, -a);\n\n\t\tJSM.AddVertexToBody (result, +b, +a, +a);\n\t\tJSM.AddVertexToBody (result, +b, +a, -a);\n\t\tJSM.AddVertexToBody (result, +b, -a, +a);\n\t\tJSM.AddVertexToBody (result, -b, +a, +a);\n\t\tJSM.AddVertexToBody (result, +b, -a, -a);\n\t\tJSM.AddVertexToBody (result, -b, +a, -a);\n\t\tJSM.AddVertexToBody (result, -b, -a, +a);\n\t\tJSM.AddVertexToBody (result, -b, -a, -a);\n\n\t\tJSM.AddPolygonToBody (result, [0, 16, 8]);\n\t\tJSM.AddPolygonToBody (result, [1, 9, 17]);\n\t\tJSM.AddPolygonToBody (result, [2, 10, 18]);\n\t\tJSM.AddPolygonToBody (result, [3, 11, 19]);\n\t\tJSM.AddPolygonToBody (result, [4, 20, 12]);\n\t\tJSM.AddPolygonToBody (result, [5, 21, 13]);\n\t\tJSM.AddPolygonToBody (result, [6, 22, 14]);\n\t\tJSM.AddPolygonToBody (result, [7, 15, 23]);\n\n\t\tJSM.AddPolygonToBody (result, [0, 2, 18, 16]);\n\t\tJSM.AddPolygonToBody (result, [0, 3, 6, 2]);\n\t\tJSM.AddPolygonToBody (result, [0, 8, 11, 3]);\n\t\tJSM.AddPolygonToBody (result, [1, 4, 7, 5]);\n\t\tJSM.AddPolygonToBody (result, [1, 5, 13, 9]);\n\t\tJSM.AddPolygonToBody (result, [1, 17, 20, 4]);\n\t\tJSM.AddPolygonToBody (result, [2, 6, 14, 10]);\n\t\tJSM.AddPolygonToBody (result, [3, 19, 22, 6]);\n\t\tJSM.AddPolygonToBody (result, [4, 12, 15, 7]);\n\t\tJSM.AddPolygonToBody (result, [5, 7, 23, 21]);\n\t\tJSM.AddPolygonToBody (result, [8, 9, 13, 11]);\n\t\tJSM.AddPolygonToBody (result, [8, 16, 17, 9]);\n\t\tJSM.AddPolygonToBody (result, [10, 12, 20, 18]);\n\t\tJSM.AddPolygonToBody (result, [10, 14, 15, 12]);\n\t\tJSM.AddPolygonToBody (result, [11, 13, 21, 19]);\n\t\tJSM.AddPolygonToBody (result, [14, 22, 23, 15]);\n\t\tJSM.AddPolygonToBody (result, [16, 18, 20, 17]);\n\t\tJSM.AddPolygonToBody (result, [19, 21, 23, 22]);\n\n\t\treturn result;\n\t};\n\n\t/**\n\t* Function: GenerateTruncatedCuboctahedron\n\t* Description: Generates a truncated cuboctahedron.\n\t* Returns:\n\t*\t{Body} the result\n\t*/\n\tJSM.GenerateTruncatedCuboctahedron = function ()\n\t{\n\t\tvar result = new JSM.Body ();\n\n\t\tvar a = 1.0;\n\t\tvar b = 1.0 + Math.sqrt (2.0);\n\t\tvar c = 1.0 + 2.0 * Math.sqrt (2.0);\n\n\t\tJSM.AddVertexToBody (result, +a, +b, +c);\n\t\tJSM.AddVertexToBody (result, +a, +b, -c);\n\t\tJSM.AddVertexToBody (result, +a, -b, +c);\n\t\tJSM.AddVertexToBody (result, -a, +b, +c);\n\t\tJSM.AddVertexToBody (result, +a, -b, -c);\n\t\tJSM.AddVertexToBody (result, -a, +b, -c);\n\t\tJSM.AddVertexToBody (result, -a, -b, +c);\n\t\tJSM.AddVertexToBody (result, -a, -b, -c);\n\n\t\tJSM.AddVertexToBody (result, +a, +c, +b);\n\t\tJSM.AddVertexToBody (result, +a, -c, +b);\n\t\tJSM.AddVertexToBody (result, +a, +c, -b);\n\t\tJSM.AddVertexToBody (result, -a, +c, +b);\n\t\tJSM.AddVertexToBody (result, +a, -c, -b);\n\t\tJSM.AddVertexToBody (result, -a, -c, +b);\n\t\tJSM.AddVertexToBody (result, -a, +c, -b);\n\t\tJSM.AddVertexToBody (result, -a, -c, -b);\n\n\t\tJSM.AddVertexToBody (result, +b, +a, +c);\n\t\tJSM.AddVertexToBody (result, +b, +a, -c);\n\t\tJSM.AddVertexToBody (result, -b, +a, +c);\n\t\tJSM.AddVertexToBody (result, +b, -a, +c);\n\t\tJSM.AddVertexToBody (result, -b, +a, -c);\n\t\tJSM.AddVertexToBody (result, +b, -a, -c);\n\t\tJSM.AddVertexToBody (result, -b, -a, +c);\n\t\tJSM.AddVertexToBody (result, -b, -a, -c);\n\n\t\tJSM.AddVertexToBody (result, +b, +c, +a);\n\t\tJSM.AddVertexToBody (result, +b, -c, +a);\n\t\tJSM.AddVertexToBody (result, -b, +c, +a);\n\t\tJSM.AddVertexToBody (result, +b, +c, -a);\n\t\tJSM.AddVertexToBody (result, -b, -c, +a);\n\t\tJSM.AddVertexToBody (result, +b, -c, -a);\n\t\tJSM.AddVertexToBody (result, -b, +c, -a);\n\t\tJSM.AddVertexToBody (result, -b, -c, -a);\n\n\t\tJSM.AddVertexToBody (result, +c, +a, +b);\n\t\tJSM.AddVertexToBody (result, -c, +a, +b);\n\t\tJSM.AddVertexToBody (result, +c, +a, -b);\n\t\tJSM.AddVertexToBody (result, +c, -a, +b);\n\t\tJSM.AddVertexToBody (result, -c, +a, -b);\n\t\tJSM.AddVertexToBody (result, -c, -a, +b);\n\t\tJSM.AddVertexToBody (result, +c, -a, -b);\n\t\tJSM.AddVertexToBody (result, -c, -a, -b);\n\n\t\tJSM.AddVertexToBody (result, +c, +b, +a);\n\t\tJSM.AddVertexToBody (result, -c, +b, +a);\n\t\tJSM.AddVertexToBody (result, +c, -b, +a);\n\t\tJSM.AddVertexToBody (result, +c, +b, -a);\n\t\tJSM.AddVertexToBody (result, -c, -b, +a);\n\t\tJSM.AddVertexToBody (result, -c, +b, -a);\n\t\tJSM.AddVertexToBody (result, +c, -b, -a);\n\t\tJSM.AddVertexToBody (result, -c, -b, -a);\n\n\t\tJSM.AddPolygonToBody (result, [0, 8, 11, 3]);\n\t\tJSM.AddPolygonToBody (result, [1, 5, 14, 10]);\n\t\tJSM.AddPolygonToBody (result, [2, 6, 13, 9]);\n\t\tJSM.AddPolygonToBody (result, [4, 12, 15, 7]);\n\t\tJSM.AddPolygonToBody (result, [16, 19, 35, 32]);\n\t\tJSM.AddPolygonToBody (result, [17, 34, 38, 21]);\n\t\tJSM.AddPolygonToBody (result, [18, 33, 37, 22]);\n\t\tJSM.AddPolygonToBody (result, [23, 39, 36, 20]);\n\t\tJSM.AddPolygonToBody (result, [24, 40, 43, 27]);\n\t\tJSM.AddPolygonToBody (result, [25, 29, 46, 42]);\n\t\tJSM.AddPolygonToBody (result, [26, 30, 45, 41]);\n\t\tJSM.AddPolygonToBody (result, [28, 44, 47, 31]);\n\n\t\tJSM.AddPolygonToBody (result, [0, 16, 32, 40, 24, 8]);\n\t\tJSM.AddPolygonToBody (result, [1, 10, 27, 43, 34, 17]);\n\t\tJSM.AddPolygonToBody (result, [2, 9, 25, 42, 35, 19]);\n\t\tJSM.AddPolygonToBody (result, [3, 11, 26, 41, 33, 18]);\n\t\tJSM.AddPolygonToBody (result, [4, 21, 38, 46, 29, 12]);\n\t\tJSM.AddPolygonToBody (result, [5, 20, 36, 45, 30, 14]);\n\t\tJSM.AddPolygonToBody (result, [6, 22, 37, 44, 28, 13]);\n\t\tJSM.AddPolygonToBody (result, [7, 15, 31, 47, 39, 23]);\n\n\t\tJSM.AddPolygonToBody (result, [0, 3, 18, 22, 6, 2, 19, 16]);\n\t\tJSM.AddPolygonToBody (result, [1, 17, 21, 4, 7, 23, 20, 5]);\n\t\tJSM.AddPolygonToBody (result, [8, 24, 27, 10, 14, 30, 26, 11]);\n\t\tJSM.AddPolygonToBody (result, [9, 13, 28, 31, 15, 12, 29, 25]);\n\t\tJSM.AddPolygonToBody (result, [32, 35, 42, 46, 38, 34, 43, 40]);\n\t\tJSM.AddPolygonToBody (result, [33, 41, 45, 36, 39, 47, 44, 37]);\n\n\t\treturn result;\n\t};\n\n\t/**\n\t* Function: GenerateSnubCube\n\t* Description: Generates a snub cube.\n\t* Returns:\n\t*\t{Body} the result\n\t*/\n\tJSM.GenerateSnubCube = function ()\n\t{\n\t\tvar result = new JSM.Body ();\n\n\t\tvar a = 1.0;\n\t\tvar b = (1.0 / 3.0) * (Math.pow (17 + 3.0 * Math.sqrt (33.0), 1.0 / 3.0) - Math.pow (-17 + 3.0 * Math.sqrt (33.0), 1.0 / 3.0) - 1.0);\n\t\tvar c = 1.0 / b;\n\n\t\tJSM.AddVertexToBody (result, +a, +b, -c);\n\t\tJSM.AddVertexToBody (result, +a, -b, +c);\n\t\tJSM.AddVertexToBody (result, -a, +b, +c);\n\t\tJSM.AddVertexToBody (result, -a, -b, -c);\n\n\t\tJSM.AddVertexToBody (result, +b, -c, +a);\n\t\tJSM.AddVertexToBody (result, -b, +c, +a);\n\t\tJSM.AddVertexToBody (result, +b, +c, -a);\n\t\tJSM.AddVertexToBody (result, -b, -c, -a);\n\n\t\tJSM.AddVertexToBody (result, -c, +a, +b);\n\t\tJSM.AddVertexToBody (result, +c, +a, -b);\n\t\tJSM.AddVertexToBody (result, +c, -a, +b);\n\t\tJSM.AddVertexToBody (result, -c, -a, -b);\n\n\t\tJSM.AddVertexToBody (result, +a, +c, +b);\n\t\tJSM.AddVertexToBody (result, +a, -c, -b);\n\t\tJSM.AddVertexToBody (result, -a, +c, -b);\n\t\tJSM.AddVertexToBody (result, -a, -c, +b);\n\n\t\tJSM.AddVertexToBody (result, +b, +a, +c);\n\t\tJSM.AddVertexToBody (result, -b, +a, -c);\n\t\tJSM.AddVertexToBody (result, -b, -a, +c);\n\t\tJSM.AddVertexToBody (result, +b, -a, -c);\n\n\t\tJSM.AddVertexToBody (result, +c, +b, +a);\n\t\tJSM.AddVertexToBody (result, -c, -b, +a);\n\t\tJSM.AddVertexToBody (result, +c, -b, -a);\n\t\tJSM.AddVertexToBody (result, -c, +b, -a);\n\n\t\tJSM.AddPolygonToBody (result, [0, 6, 9]);\n\t\tJSM.AddPolygonToBody (result, [0, 9, 22]);\n\t\tJSM.AddPolygonToBody (result, [0, 17, 6]);\n\t\tJSM.AddPolygonToBody (result, [0, 22, 19]);\n\t\tJSM.AddPolygonToBody (result, [1, 4, 10]);\n\t\tJSM.AddPolygonToBody (result, [1, 10, 20]);\n\t\tJSM.AddPolygonToBody (result, [1, 18, 4]);\n\t\tJSM.AddPolygonToBody (result, [1, 20, 16]);\n\t\tJSM.AddPolygonToBody (result, [2, 5, 8]);\n\t\tJSM.AddPolygonToBody (result, [2, 8, 21]);\n\t\tJSM.AddPolygonToBody (result, [2, 16, 5]);\n\t\tJSM.AddPolygonToBody (result, [2, 21, 18]);\n\t\tJSM.AddPolygonToBody (result, [3, 7, 11]);\n\t\tJSM.AddPolygonToBody (result, [3, 11, 23]);\n\t\tJSM.AddPolygonToBody (result, [3, 19, 7]);\n\t\tJSM.AddPolygonToBody (result, [3, 23, 17]);\n\t\tJSM.AddPolygonToBody (result, [4, 13, 10]);\n\t\tJSM.AddPolygonToBody (result, [4, 18, 15]);\n\t\tJSM.AddPolygonToBody (result, [5, 14, 8]);\n\t\tJSM.AddPolygonToBody (result, [5, 16, 12]);\n\t\tJSM.AddPolygonToBody (result, [6, 12, 9]);\n\t\tJSM.AddPolygonToBody (result, [6, 17, 14]);\n\t\tJSM.AddPolygonToBody (result, [7, 15, 11]);\n\t\tJSM.AddPolygonToBody (result, [7, 19, 13]);\n\t\tJSM.AddPolygonToBody (result, [8, 14, 23]);\n\t\tJSM.AddPolygonToBody (result, [9, 12, 20]);\n\t\tJSM.AddPolygonToBody (result, [10, 13, 22]);\n\t\tJSM.AddPolygonToBody (result, [11, 15, 21]);\n\t\tJSM.AddPolygonToBody (result, [12, 16, 20]);\n\t\tJSM.AddPolygonToBody (result, [13, 19, 22]);\n\t\tJSM.AddPolygonToBody (result, [14, 17, 23]);\n\t\tJSM.AddPolygonToBody (result, [15, 18, 21]);\n\n\t\tJSM.AddPolygonToBody (result, [0, 19, 3, 17]);\n\t\tJSM.AddPolygonToBody (result, [1, 16, 2, 18]);\n\t\tJSM.AddPolygonToBody (result, [4, 15, 7, 13]);\n\t\tJSM.AddPolygonToBody (result, [5, 12, 6, 14]);\n\t\tJSM.AddPolygonToBody (result, [8, 23, 11, 21]);\n\t\tJSM.AddPolygonToBody (result, [9, 20, 10, 22]);\n\n\t\treturn result;\n\t};\n\n\t/**\n\t* Function: GenerateIcosidodecahedron\n\t* Description: Generates an icosidodecahedron.\n\t* Returns:\n\t*\t{Body} the result\n\t*/\n\tJSM.GenerateIcosidodecahedron = function ()\n\t{\n\t\tvar result = new JSM.Body ();\n\n\t\tvar a = 0.0;\n\t\tvar b = (1.0 + Math.sqrt (5.0)) / 2.0;\n\t\tvar c = 1.0 / 2.0;\n\t\tvar d = b / 2.0;\n\t\tvar e = (1.0 + b) / 2.0;\n\n\t\tJSM.AddVertexToBody (result, +a, +a, +b);\n\t\tJSM.AddVertexToBody (result, +a, +a, -b);\n\t\tJSM.AddVertexToBody (result, +a, +b, +a);\n\t\tJSM.AddVertexToBody (result, +a, -b, +a);\n\t\tJSM.AddVertexToBody (result, +b, +a, +a);\n\t\tJSM.AddVertexToBody (result, -b, +a, +a);\n\n\t\tJSM.AddVertexToBody (result, +c, +d, +e);\n\t\tJSM.AddVertexToBody (result, +c, +d, -e);\n\t\tJSM.AddVertexToBody (result, +c, -d, +e);\n\t\tJSM.AddVertexToBody (result, -c, +d, +e);\n\t\tJSM.AddVertexToBody (result, +c, -d, -e);\n\t\tJSM.AddVertexToBody (result, -c, +d, -e);\n\t\tJSM.AddVertexToBody (result, -c, -d, +e);\n\t\tJSM.AddVertexToBody (result, -c, -d, -e);\n\n\t\tJSM.AddVertexToBody (result, +d, +e, +c);\n\t\tJSM.AddVertexToBody (result, +d, -e, +c);\n\t\tJSM.AddVertexToBody (result, -d, +e, +c);\n\t\tJSM.AddVertexToBody (result, +d, +e, -c);\n\t\tJSM.AddVertexToBody (result, -d, -e, +c);\n\t\tJSM.AddVertexToBody (result, +d, -e, -c);\n\t\tJSM.AddVertexToBody (result, -d, +e, -c);\n\t\tJSM.AddVertexToBody (result, -d, -e, -c);\n\n\t\tJSM.AddVertexToBody (result, +e, +c, +d);\n\t\tJSM.AddVertexToBody (result, -e, +c, +d);\n\t\tJSM.AddVertexToBody (result, +e, +c, -d);\n\t\tJSM.AddVertexToBody (result, +e, -c, +d);\n\t\tJSM.AddVertexToBody (result, -e, +c, -d);\n\t\tJSM.AddVertexToBody (result, -e, -c, +d);\n\t\tJSM.AddVertexToBody (result, +e, -c, -d);\n\t\tJSM.AddVertexToBody (result, -e, -c, -d);\n\n\t\tJSM.AddPolygonToBody (result, [0, 6, 9]);\n\t\tJSM.AddPolygonToBody (result, [0, 12, 8]);\n\t\tJSM.AddPolygonToBody (result, [1, 10, 13]);\n\t\tJSM.AddPolygonToBody (result, [1, 11, 7]);\n\t\tJSM.AddPolygonToBody (result, [2, 14, 17]);\n\t\tJSM.AddPolygonToBody (result, [2, 20, 16]);\n\t\tJSM.AddPolygonToBody (result, [3, 18, 21]);\n\t\tJSM.AddPolygonToBody (result, [3, 19, 15]);\n\t\tJSM.AddPolygonToBody (result, [4, 22, 25]);\n\t\tJSM.AddPolygonToBody (result, [4, 28, 24]);\n\t\tJSM.AddPolygonToBody (result, [5, 26, 29]);\n\t\tJSM.AddPolygonToBody (result, [5, 27, 23]);\n\t\tJSM.AddPolygonToBody (result, [6, 22, 14]);\n\t\tJSM.AddPolygonToBody (result, [7, 17, 24]);\n\t\tJSM.AddPolygonToBody (result, [8, 15, 25]);\n\t\tJSM.AddPolygonToBody (result, [9, 16, 23]);\n\t\tJSM.AddPolygonToBody (result, [10, 28, 19]);\n\t\tJSM.AddPolygonToBody (result, [11, 26, 20]);\n\t\tJSM.AddPolygonToBody (result, [12, 27, 18]);\n\t\tJSM.AddPolygonToBody (result, [13, 21, 29]);\n\n\t\tJSM.AddPolygonToBody (result, [0, 8, 25, 22, 6]);\n\t\tJSM.AddPolygonToBody (result, [0, 9, 23, 27, 12]);\n\t\tJSM.AddPolygonToBody (result, [1, 7, 24, 28, 10]);\n\t\tJSM.AddPolygonToBody (result, [1, 13, 29, 26, 11]);\n\t\tJSM.AddPolygonToBody (result, [2, 16, 9, 6, 14]);\n\t\tJSM.AddPolygonToBody (result, [2, 17, 7, 11, 20]);\n\t\tJSM.AddPolygonToBody (result, [3, 15, 8, 12, 18]);\n\t\tJSM.AddPolygonToBody (result, [3, 21, 13, 10, 19]);\n\t\tJSM.AddPolygonToBody (result, [4, 24, 17, 14, 22]);\n\t\tJSM.AddPolygonToBody (result, [4, 25, 15, 19, 28]);\n\t\tJSM.AddPolygonToBody (result, [5, 23, 16, 20, 26]);\n\t\tJSM.AddPolygonToBody (result, [5, 29, 21, 18, 27]);\n\n\t\treturn result;\n\t};\n\n\t/**\n\t* Function: GenerateTruncatedDodecahedron\n\t* Description: Generates a truncated dodecahedron.\n\t* Returns:\n\t*\t{Body} the result\n\t*/\n\tJSM.GenerateTruncatedDodecahedron = function ()\n\t{\n\t\tvar result = new JSM.Body ();\n\n\t\tvar a = 0.0;\n\t\tvar b = 2.0;\n\t\tvar c = (1.0 + Math.sqrt (5.0)) / 2.0;\n\t\tvar d = 1.0 / c;\n\t\tvar e = 2.0 + c;\n\t\tvar f = 2.0 * c;\n\t\tvar g = Math.pow (c, 2.0);\n\n\t\tJSM.AddVertexToBody (result, +a, +d, +e);\n\t\tJSM.AddVertexToBody (result, +a, +d, -e);\n\t\tJSM.AddVertexToBody (result, +a, -d, +e);\n\t\tJSM.AddVertexToBody (result, +a, -d, -e);\n\n\t\tJSM.AddVertexToBody (result, +e, +a, +d);\n\t\tJSM.AddVertexToBody (result, -e, +a, +d);\n\t\tJSM.AddVertexToBody (result, +e, +a, -d);\n\t\tJSM.AddVertexToBody (result, -e, +a, -d);\n\n\t\tJSM.AddVertexToBody (result, +d, +e, +a);\n\t\tJSM.AddVertexToBody (result, +d, -e, +a);\n\t\tJSM.AddVertexToBody (result, -d, +e, +a);\n\t\tJSM.AddVertexToBody (result, -d, -e, +a);\n\n\t\tJSM.AddVertexToBody (result, +d, +c, +f);\n\t\tJSM.AddVertexToBody (result, +d, +c, -f);\n\t\tJSM.AddVertexToBody (result, +d, -c, +f);\n\t\tJSM.AddVertexToBody (result, -d, +c, +f);\n\t\tJSM.AddVertexToBody (result, +d, -c, -f);\n\t\tJSM.AddVertexToBody (result, -d, +c, -f);\n\t\tJSM.AddVertexToBody (result, -d, -c, +f);\n\t\tJSM.AddVertexToBody (result, -d, -c, -f);\n\n\t\tJSM.AddVertexToBody (result, +f, +d, +c);\n\t\tJSM.AddVertexToBody (result, +f, +d, -c);\n\t\tJSM.AddVertexToBody (result, +f, -d, +c);\n\t\tJSM.AddVertexToBody (result, -f, +d, +c);\n\t\tJSM.AddVertexToBody (result, +f, -d, -c);\n\t\tJSM.AddVertexToBody (result, -f, +d, -c);\n\t\tJSM.AddVertexToBody (result, -f, -d, +c);\n\t\tJSM.AddVertexToBody (result, -f, -d, -c);\n\n\t\tJSM.AddVertexToBody (result, +c, +f, +d);\n\t\tJSM.AddVertexToBody (result, +c, +f, -d);\n\t\tJSM.AddVertexToBody (result, +c, -f, +d);\n\t\tJSM.AddVertexToBody (result, -c, +f, +d);\n\t\tJSM.AddVertexToBody (result, +c, -f, -d);\n\t\tJSM.AddVertexToBody (result, -c, +f, -d);\n\t\tJSM.AddVertexToBody (result, -c, -f, +d);\n\t\tJSM.AddVertexToBody (result, -c, -f, -d);\n\n\t\tJSM.AddVertexToBody (result, +c, +b, +g);\n\t\tJSM.AddVertexToBody (result, +c, +b, -g);\n\t\tJSM.AddVertexToBody (result, +c, -b, +g);\n\t\tJSM.AddVertexToBody (result, -c, +b, +g);\n\t\tJSM.AddVertexToBody (result, +c, -b, -g);\n\t\tJSM.AddVertexToBody (result, -c, +b, -g);\n\t\tJSM.AddVertexToBody (result, -c, -b, +g);\n\t\tJSM.AddVertexToBody (result, -c, -b, -g);\n\n\t\tJSM.AddVertexToBody (result, +g, +c, +b);\n\t\tJSM.AddVertexToBody (result, +g, +c, -b);\n\t\tJSM.AddVertexToBody (result, +g, -c, +b);\n\t\tJSM.AddVertexToBody (result, -g, +c, +b);\n\t\tJSM.AddVertexToBody (result, +g, -c, -b);\n\t\tJSM.AddVertexToBody (result, -g, +c, -b);\n\t\tJSM.AddVertexToBody (result, -g, -c, +b);\n\t\tJSM.AddVertexToBody (result, -g, -c, -b);\n\n\t\tJSM.AddVertexToBody (result, +b, +g, +c);\n\t\tJSM.AddVertexToBody (result, +b, +g, -c);\n\t\tJSM.AddVertexToBody (result, +b, -g, +c);\n\t\tJSM.AddVertexToBody (result, -b, +g, +c);\n\t\tJSM.AddVertexToBody (result, +b, -g, -c);\n\t\tJSM.AddVertexToBody (result, -b, +g, -c);\n\t\tJSM.AddVertexToBody (result, -b, -g, +c);\n\t\tJSM.AddVertexToBody (result, -b, -g, -c);\n\n\t\tJSM.AddPolygonToBody (result, [0, 12, 15]);\n\t\tJSM.AddPolygonToBody (result, [1, 17, 13]);\n\t\tJSM.AddPolygonToBody (result, [2, 18, 14]);\n\t\tJSM.AddPolygonToBody (result, [3, 16, 19]);\n\t\tJSM.AddPolygonToBody (result, [4, 20, 22]);\n\t\tJSM.AddPolygonToBody (result, [5, 26, 23]);\n\t\tJSM.AddPolygonToBody (result, [6, 24, 21]);\n\t\tJSM.AddPolygonToBody (result, [7, 25, 27]);\n\t\tJSM.AddPolygonToBody (result, [8, 28, 29]);\n\t\tJSM.AddPolygonToBody (result, [9, 32, 30]);\n\t\tJSM.AddPolygonToBody (result, [10, 33, 31]);\n\t\tJSM.AddPolygonToBody (result, [11, 34, 35]);\n\t\tJSM.AddPolygonToBody (result, [36, 44, 52]);\n\t\tJSM.AddPolygonToBody (result, [37, 53, 45]);\n\t\tJSM.AddPolygonToBody (result, [38, 54, 46]);\n\t\tJSM.AddPolygonToBody (result, [39, 55, 47]);\n\t\tJSM.AddPolygonToBody (result, [40, 48, 56]);\n\t\tJSM.AddPolygonToBody (result, [41, 49, 57]);\n\t\tJSM.AddPolygonToBody (result, [42, 50, 58]);\n\t\tJSM.AddPolygonToBody (result, [43, 59, 51]);\n\n\t\tJSM.AddPolygonToBody (result, [0, 2, 14, 38, 46, 22, 20, 44, 36, 12]);\n\t\tJSM.AddPolygonToBody (result, [0, 15, 39, 47, 23, 26, 50, 42, 18, 2]);\n\t\tJSM.AddPolygonToBody (result, [1, 3, 19, 43, 51, 27, 25, 49, 41, 17]);\n\t\tJSM.AddPolygonToBody (result, [1, 13, 37, 45, 21, 24, 48, 40, 16, 3]);\n\t\tJSM.AddPolygonToBody (result, [4, 6, 21, 45, 53, 29, 28, 52, 44, 20]);\n\t\tJSM.AddPolygonToBody (result, [4, 22, 46, 54, 30, 32, 56, 48, 24, 6]);\n\t\tJSM.AddPolygonToBody (result, [5, 7, 27, 51, 59, 35, 34, 58, 50, 26]);\n\t\tJSM.AddPolygonToBody (result, [5, 23, 47, 55, 31, 33, 57, 49, 25, 7]);\n\t\tJSM.AddPolygonToBody (result, [8, 10, 31, 55, 39, 15, 12, 36, 52, 28]);\n\t\tJSM.AddPolygonToBody (result, [8, 29, 53, 37, 13, 17, 41, 57, 33, 10]);\n\t\tJSM.AddPolygonToBody (result, [9, 11, 35, 59, 43, 19, 16, 40, 56, 32]);\n\t\tJSM.AddPolygonToBody (result, [9, 30, 54, 38, 14, 18, 42, 58, 34, 11]);\n\n\t\treturn result;\n\t};\n\n\t/**\n\t* Function: GenerateTruncatedIcosahedron\n\t* Description: Generates a truncated icosahedron.\n\t* Returns:\n\t*\t{Body} the result\n\t*/\n\tJSM.GenerateTruncatedIcosahedron = function ()\n\t{\n\t\tvar result = new JSM.Body ();\n\n\t\tvar a = 0.0;\n\t\tvar b = 1.0;\n\t\tvar c = 2.0;\n\t\tvar d = (1.0 + Math.sqrt (5.0)) / 2.0;\n\t\tvar e = 3.0 * d;\n\t\tvar f = 1.0 + 2.0 * d;\n\t\tvar g = 2.0 + d;\n\t\tvar h = 2.0 * d;\n\n\t\tJSM.AddVertexToBody (result, +a, +b, +e);\n\t\tJSM.AddVertexToBody (result, +a, +b, -e);\n\t\tJSM.AddVertexToBody (result, +a, -b, +e);\n\t\tJSM.AddVertexToBody (result, +a, -b, -e);\n\n\t\tJSM.AddVertexToBody (result, +b, +e, +a);\n\t\tJSM.AddVertexToBody (result, +b, -e, +a);\n\t\tJSM.AddVertexToBody (result, -b, +e, +a);\n\t\tJSM.AddVertexToBody (result, -b, -e, +a);\n\n\t\tJSM.AddVertexToBody (result, +e, +a, +b);\n\t\tJSM.AddVertexToBody (result, -e, +a, +b);\n\t\tJSM.AddVertexToBody (result, +e, +a, -b);\n\t\tJSM.AddVertexToBody (result, -e, +a, -b);\n\n\t\tJSM.AddVertexToBody (result, +c, +f, +d);\n\t\tJSM.AddVertexToBody (result, +c, +f, -d);\n\t\tJSM.AddVertexToBody (result, +c, -f, +d);\n\t\tJSM.AddVertexToBody (result, -c, +f, +d);\n\t\tJSM.AddVertexToBody (result, +c, -f, -d);\n\t\tJSM.AddVertexToBody (result, -c, +f, -d);\n\t\tJSM.AddVertexToBody (result, -c, -f, +d);\n\t\tJSM.AddVertexToBody (result, -c, -f, -d);\n\n\t\tJSM.AddVertexToBody (result, +f, +d, +c);\n\t\tJSM.AddVertexToBody (result, +f, -d, +c);\n\t\tJSM.AddVertexToBody (result, -f, +d, +c);\n\t\tJSM.AddVertexToBody (result, +f, +d, -c);\n\t\tJSM.AddVertexToBody (result, -f, -d, +c);\n\t\tJSM.AddVertexToBody (result, +f, -d, -c);\n\t\tJSM.AddVertexToBody (result, -f, +d, -c);\n\t\tJSM.AddVertexToBody (result, -f, -d, -c);\n\n\t\tJSM.AddVertexToBody (result, +d, +c, +f);\n\t\tJSM.AddVertexToBody (result, -d, +c, +f);\n\t\tJSM.AddVertexToBody (result, +d, +c, -f);\n\t\tJSM.AddVertexToBody (result, +d, -c, +f);\n\t\tJSM.AddVertexToBody (result, -d, +c, -f);\n\t\tJSM.AddVertexToBody (result, -d, -c, +f);\n\t\tJSM.AddVertexToBody (result, +d, -c, -f);\n\t\tJSM.AddVertexToBody (result, -d, -c, -f);\n\n\t\tJSM.AddVertexToBody (result, +b, +g, +h);\n\t\tJSM.AddVertexToBody (result, +b, +g, -h);\n\t\tJSM.AddVertexToBody (result, +b, -g, +h);\n\t\tJSM.AddVertexToBody (result, -b, +g, +h);\n\t\tJSM.AddVertexToBody (result, +b, -g, -h);\n\t\tJSM.AddVertexToBody (result, -b, +g, -h);\n\t\tJSM.AddVertexToBody (result, -b, -g, +h);\n\t\tJSM.AddVertexToBody (result, -b, -g, -h);\n\n\t\tJSM.AddVertexToBody (result, +g, +h, +b);\n\t\tJSM.AddVertexToBody (result, +g, -h, +b);\n\t\tJSM.AddVertexToBody (result, -g, +h, +b);\n\t\tJSM.AddVertexToBody (result, +g, +h, -b);\n\t\tJSM.AddVertexToBody (result, -g, -h, +b);\n\t\tJSM.AddVertexToBody (result, +g, -h, -b);\n\t\tJSM.AddVertexToBody (result, -g, +h, -b);\n\t\tJSM.AddVertexToBody (result, -g, -h, -b);\n\n\t\tJSM.AddVertexToBody (result, +h, +b, +g);\n\t\tJSM.AddVertexToBody (result, -h, +b, +g);\n\t\tJSM.AddVertexToBody (result, +h, +b, -g);\n\t\tJSM.AddVertexToBody (result, +h, -b, +g);\n\t\tJSM.AddVertexToBody (result, -h, +b, -g);\n\t\tJSM.AddVertexToBody (result, -h, -b, +g);\n\t\tJSM.AddVertexToBody (result, +h, -b, -g);\n\t\tJSM.AddVertexToBody (result, -h, -b, -g);\n\n\t\tJSM.AddPolygonToBody (result, [0, 28, 36, 39, 29]);\n\t\tJSM.AddPolygonToBody (result, [1, 32, 41, 37, 30]);\n\t\tJSM.AddPolygonToBody (result, [2, 33, 42, 38, 31]);\n\t\tJSM.AddPolygonToBody (result, [3, 34, 40, 43, 35]);\n\t\tJSM.AddPolygonToBody (result, [4, 12, 44, 47, 13]);\n\t\tJSM.AddPolygonToBody (result, [5, 16, 49, 45, 14]);\n\t\tJSM.AddPolygonToBody (result, [6, 17, 50, 46, 15]);\n\t\tJSM.AddPolygonToBody (result, [7, 18, 48, 51, 19]);\n\t\tJSM.AddPolygonToBody (result, [8, 20, 52, 55, 21]);\n\t\tJSM.AddPolygonToBody (result, [9, 24, 57, 53, 22]);\n\t\tJSM.AddPolygonToBody (result, [10, 25, 58, 54, 23]);\n\t\tJSM.AddPolygonToBody (result, [11, 26, 56, 59, 27]);\n\n\t\tJSM.AddPolygonToBody (result, [0, 2, 31, 55, 52, 28]);\n\t\tJSM.AddPolygonToBody (result, [0, 29, 53, 57, 33, 2]);\n\t\tJSM.AddPolygonToBody (result, [1, 3, 35, 59, 56, 32]);\n\t\tJSM.AddPolygonToBody (result, [1, 30, 54, 58, 34, 3]);\n\t\tJSM.AddPolygonToBody (result, [4, 6, 15, 39, 36, 12]);\n\t\tJSM.AddPolygonToBody (result, [4, 13, 37, 41, 17, 6]);\n\t\tJSM.AddPolygonToBody (result, [5, 7, 19, 43, 40, 16]);\n\t\tJSM.AddPolygonToBody (result, [5, 14, 38, 42, 18, 7]);\n\t\tJSM.AddPolygonToBody (result, [8, 10, 23, 47, 44, 20]);\n\t\tJSM.AddPolygonToBody (result, [8, 21, 45, 49, 25, 10]);\n\t\tJSM.AddPolygonToBody (result, [9, 11, 27, 51, 48, 24]);\n\t\tJSM.AddPolygonToBody (result, [9, 22, 46, 50, 26, 11]);\n\t\tJSM.AddPolygonToBody (result, [12, 36, 28, 52, 20, 44]);\n\t\tJSM.AddPolygonToBody (result, [13, 47, 23, 54, 30, 37]);\n\t\tJSM.AddPolygonToBody (result, [14, 45, 21, 55, 31, 38]);\n\t\tJSM.AddPolygonToBody (result, [15, 46, 22, 53, 29, 39]);\n\t\tJSM.AddPolygonToBody (result, [16, 40, 34, 58, 25, 49]);\n\t\tJSM.AddPolygonToBody (result, [17, 41, 32, 56, 26, 50]);\n\t\tJSM.AddPolygonToBody (result, [18, 42, 33, 57, 24, 48]);\n\t\tJSM.AddPolygonToBody (result, [19, 51, 27, 59, 35, 43]);\n\n\t\treturn result;\n\t};\n\n\t/**\n\t* Function: GenerateRhombicosidodecahedron\n\t* Description: Generates a rhombicosidodecahedron.\n\t* Returns:\n\t*\t{Body} the result\n\t*/\n\tJSM.GenerateRhombicosidodecahedron = function ()\n\t{\n\t\tvar result = new JSM.Body ();\n\n\t\tvar a = 0.0;\n\t\tvar b = 1.0;\n\t\tvar c = (1.0 + Math.sqrt (5.0)) / 2.0;\n\t\tvar d = Math.pow (c, 2.0);\n\t\tvar e = Math.pow (c, 3.0);\n\t\tvar f = 2.0 * c;\n\t\tvar g = 2.0 + c;\n\n\t\tJSM.AddVertexToBody (result, +b, +b, +e);\n\t\tJSM.AddVertexToBody (result, +b, +b, -e);\n\t\tJSM.AddVertexToBody (result, +b, -b, +e);\n\t\tJSM.AddVertexToBody (result, -b, +b, +e);\n\t\tJSM.AddVertexToBody (result, +b, -b, -e);\n\t\tJSM.AddVertexToBody (result, -b, +b, -e);\n\t\tJSM.AddVertexToBody (result, -b, -b, +e);\n\t\tJSM.AddVertexToBody (result, -b, -b, -e);\n\n\t\tJSM.AddVertexToBody (result, +e, +b, +b);\n\t\tJSM.AddVertexToBody (result, +e, +b, -b);\n\t\tJSM.AddVertexToBody (result, +e, -b, +b);\n\t\tJSM.AddVertexToBody (result, -e, +b, +b);\n\t\tJSM.AddVertexToBody (result, +e, -b, -b);\n\t\tJSM.AddVertexToBody (result, -e, +b, -b);\n\t\tJSM.AddVertexToBody (result, -e, -b, +b);\n\t\tJSM.AddVertexToBody (result, -e, -b, -b);\n\n\t\tJSM.AddVertexToBody (result, +b, +e, +b);\n\t\tJSM.AddVertexToBody (result, +b, +e, -b);\n\t\tJSM.AddVertexToBody (result, +b, -e, +b);\n\t\tJSM.AddVertexToBody (result, -b, +e, +b);\n\t\tJSM.AddVertexToBody (result, +b, -e, -b);\n\t\tJSM.AddVertexToBody (result, -b, +e, -b);\n\t\tJSM.AddVertexToBody (result, -b, -e, +b);\n\t\tJSM.AddVertexToBody (result, -b, -e, -b);\n\n\t\tJSM.AddVertexToBody (result, +d, +c, +f);\n\t\tJSM.AddVertexToBody (result, +d, +c, -f);\n\t\tJSM.AddVertexToBody (result, +d, -c, +f);\n\t\tJSM.AddVertexToBody (result, -d, +c, +f);\n\t\tJSM.AddVertexToBody (result, +d, -c, -f);\n\t\tJSM.AddVertexToBody (result, -d, +c, -f);\n\t\tJSM.AddVertexToBody (result, -d, -c, +f);\n\t\tJSM.AddVertexToBody (result, -d, -c, -f);\n\n\t\tJSM.AddVertexToBody (result, +f, +d, +c);\n\t\tJSM.AddVertexToBody (result, +f, +d, -c);\n\t\tJSM.AddVertexToBody (result, +f, -d, +c);\n\t\tJSM.AddVertexToBody (result, -f, +d, +c);\n\t\tJSM.AddVertexToBody (result, +f, -d, -c);\n\t\tJSM.AddVertexToBody (result, -f, +d, -c);\n\t\tJSM.AddVertexToBody (result, -f, -d, +c);\n\t\tJSM.AddVertexToBody (result, -f, -d, -c);\n\n\t\tJSM.AddVertexToBody (result, +c, +f, +d);\n\t\tJSM.AddVertexToBody (result, +c, +f, -d);\n\t\tJSM.AddVertexToBody (result, +c, -f, +d);\n\t\tJSM.AddVertexToBody (result, -c, +f, +d);\n\t\tJSM.AddVertexToBody (result, +c, -f, -d);\n\t\tJSM.AddVertexToBody (result, -c, +f, -d);\n\t\tJSM.AddVertexToBody (result, -c, -f, +d);\n\t\tJSM.AddVertexToBody (result, -c, -f, -d);\n\n\t\tJSM.AddVertexToBody (result, +g, +a, +d);\n\t\tJSM.AddVertexToBody (result, +g, +a, -d);\n\t\tJSM.AddVertexToBody (result, -g, +a, +d);\n\t\tJSM.AddVertexToBody (result, -g, +a, -d);\n\n\t\tJSM.AddVertexToBody (result, +d, +g, +a);\n\t\tJSM.AddVertexToBody (result, -d, +g, +a);\n\t\tJSM.AddVertexToBody (result, +d, -g, +a);\n\t\tJSM.AddVertexToBody (result, -d, -g, +a);\n\n\t\tJSM.AddVertexToBody (result, +a, +d, +g);\n\t\tJSM.AddVertexToBody (result, +a, -d, +g);\n\t\tJSM.AddVertexToBody (result, +a, +d, -g);\n\t\tJSM.AddVertexToBody (result, +a, -d, -g);\n\n\t\tJSM.AddPolygonToBody (result, [0, 56, 3]);\n\t\tJSM.AddPolygonToBody (result, [1, 5, 58]);\n\t\tJSM.AddPolygonToBody (result, [2, 6, 57]);\n\t\tJSM.AddPolygonToBody (result, [4, 59, 7]);\n\t\tJSM.AddPolygonToBody (result, [8, 48, 10]);\n\t\tJSM.AddPolygonToBody (result, [9, 12, 49]);\n\t\tJSM.AddPolygonToBody (result, [11, 14, 50]);\n\t\tJSM.AddPolygonToBody (result, [13, 51, 15]);\n\t\tJSM.AddPolygonToBody (result, [16, 52, 17]);\n\t\tJSM.AddPolygonToBody (result, [18, 20, 54]);\n\t\tJSM.AddPolygonToBody (result, [19, 21, 53]);\n\t\tJSM.AddPolygonToBody (result, [22, 55, 23]);\n\t\tJSM.AddPolygonToBody (result, [24, 32, 40]);\n\t\tJSM.AddPolygonToBody (result, [25, 41, 33]);\n\t\tJSM.AddPolygonToBody (result, [26, 42, 34]);\n\t\tJSM.AddPolygonToBody (result, [27, 43, 35]);\n\t\tJSM.AddPolygonToBody (result, [28, 36, 44]);\n\t\tJSM.AddPolygonToBody (result, [29, 37, 45]);\n\t\tJSM.AddPolygonToBody (result, [30, 38, 46]);\n\t\tJSM.AddPolygonToBody (result, [31, 47, 39]);\n\n\t\tJSM.AddPolygonToBody (result, [0, 3, 6, 2]);\n\t\tJSM.AddPolygonToBody (result, [0, 24, 40, 56]);\n\t\tJSM.AddPolygonToBody (result, [1, 4, 7, 5]);\n\t\tJSM.AddPolygonToBody (result, [1, 58, 41, 25]);\n\t\tJSM.AddPolygonToBody (result, [2, 57, 42, 26]);\n\t\tJSM.AddPolygonToBody (result, [3, 56, 43, 27]);\n\t\tJSM.AddPolygonToBody (result, [4, 28, 44, 59]);\n\t\tJSM.AddPolygonToBody (result, [5, 29, 45, 58]);\n\t\tJSM.AddPolygonToBody (result, [6, 30, 46, 57]);\n\t\tJSM.AddPolygonToBody (result, [7, 59, 47, 31]);\n\t\tJSM.AddPolygonToBody (result, [8, 10, 12, 9]);\n\t\tJSM.AddPolygonToBody (result, [8, 32, 24, 48]);\n\t\tJSM.AddPolygonToBody (result, [9, 49, 25, 33]);\n\t\tJSM.AddPolygonToBody (result, [10, 48, 26, 34]);\n\t\tJSM.AddPolygonToBody (result, [11, 13, 15, 14]);\n\t\tJSM.AddPolygonToBody (result, [11, 50, 27, 35]);\n\t\tJSM.AddPolygonToBody (result, [12, 36, 28, 49]);\n\t\tJSM.AddPolygonToBody (result, [13, 37, 29, 51]);\n\t\tJSM.AddPolygonToBody (result, [14, 38, 30, 50]);\n\t\tJSM.AddPolygonToBody (result, [15, 51, 31, 39]);\n\t\tJSM.AddPolygonToBody (result, [16, 17, 21, 19]);\n\t\tJSM.AddPolygonToBody (result, [16, 40, 32, 52]);\n\t\tJSM.AddPolygonToBody (result, [17, 52, 33, 41]);\n\t\tJSM.AddPolygonToBody (result, [18, 22, 23, 20]);\n\t\tJSM.AddPolygonToBody (result, [18, 54, 34, 42]);\n\t\tJSM.AddPolygonToBody (result, [19, 53, 35, 43]);\n\t\tJSM.AddPolygonToBody (result, [20, 44, 36, 54]);\n\t\tJSM.AddPolygonToBody (result, [21, 45, 37, 53]);\n\t\tJSM.AddPolygonToBody (result, [22, 46, 38, 55]);\n\t\tJSM.AddPolygonToBody (result, [23, 55, 39, 47]);\n\n\t\tJSM.AddPolygonToBody (result, [0, 2, 26, 48, 24]);\n\t\tJSM.AddPolygonToBody (result, [1, 25, 49, 28, 4]);\n\t\tJSM.AddPolygonToBody (result, [3, 27, 50, 30, 6]);\n\t\tJSM.AddPolygonToBody (result, [5, 7, 31, 51, 29]);\n\t\tJSM.AddPolygonToBody (result, [8, 9, 33, 52, 32]);\n\t\tJSM.AddPolygonToBody (result, [10, 34, 54, 36, 12]);\n\t\tJSM.AddPolygonToBody (result, [11, 35, 53, 37, 13]);\n\t\tJSM.AddPolygonToBody (result, [14, 15, 39, 55, 38]);\n\t\tJSM.AddPolygonToBody (result, [16, 19, 43, 56, 40]);\n\t\tJSM.AddPolygonToBody (result, [17, 41, 58, 45, 21]);\n\t\tJSM.AddPolygonToBody (result, [18, 42, 57, 46, 22]);\n\t\tJSM.AddPolygonToBody (result, [20, 23, 47, 59, 44]);\n\n\t\treturn result;\n\t};\n\n\t/**\n\t* Function: GenerateTruncatedIcosidodecahedron\n\t* Description: Generates a truncated icosidodecahedron.\n\t* Returns:\n\t*\t{Body} the result\n\t*/\n\tJSM.GenerateTruncatedIcosidodecahedron = function ()\n\t{\n\t\tvar result = new JSM.Body ();\n\n\t\tvar a = 2.0;\n\t\tvar b = (1.0 + Math.sqrt (5.0)) / 2.0;\n\t\tvar c = 1.0 / b;\n\t\tvar d = 3.0 + b;\n\t\tvar e = 2.0 / b;\n\t\tvar f = 1 + 2.0 * b;\n\t\tvar g = Math.pow (b, 2.0);\n\t\tvar h = -1.0 + 3.0 * b;\n\t\tvar i = -1.0 + 2.0 * b;\n\t\tvar j = 2.0 + b;\n\t\tvar k = 3.0;\n\t\tvar l = 2.0 * b;\n\n\t\tJSM.AddVertexToBody (result, +c, +c, +d);\n\t\tJSM.AddVertexToBody (result, +c, +c, -d);\n\t\tJSM.AddVertexToBody (result, +c, -c, +d);\n\t\tJSM.AddVertexToBody (result, -c, +c, +d);\n\t\tJSM.AddVertexToBody (result, +c, -c, -d);\n\t\tJSM.AddVertexToBody (result, -c, +c, -d);\n\t\tJSM.AddVertexToBody (result, -c, -c, +d);\n\t\tJSM.AddVertexToBody (result, -c, -c, -d);\n\n\t\tJSM.AddVertexToBody (result, +c, +d, +c);\n\t\tJSM.AddVertexToBody (result, +c, -d, +c);\n\t\tJSM.AddVertexToBody (result, -c, +d, +c);\n\t\tJSM.AddVertexToBody (result, +c, +d, -c);\n\t\tJSM.AddVertexToBody (result, -c, -d, +c);\n\t\tJSM.AddVertexToBody (result, +c, -d, -c);\n\t\tJSM.AddVertexToBody (result, -c, +d, -c);\n\t\tJSM.AddVertexToBody (result, -c, -d, -c);\n\n\t\tJSM.AddVertexToBody (result, +d, +c, +c);\n\t\tJSM.AddVertexToBody (result, -d, +c, +c);\n\t\tJSM.AddVertexToBody (result, +d, +c, -c);\n\t\tJSM.AddVertexToBody (result, +d, -c, +c);\n\t\tJSM.AddVertexToBody (result, -d, +c, -c);\n\t\tJSM.AddVertexToBody (result, -d, -c, +c);\n\t\tJSM.AddVertexToBody (result, +d, -c, -c);\n\t\tJSM.AddVertexToBody (result, -d, -c, -c);\n\n\t\tJSM.AddVertexToBody (result, +e, +b, +f);\n\t\tJSM.AddVertexToBody (result, +e, +b, -f);\n\t\tJSM.AddVertexToBody (result, +e, -b, +f);\n\t\tJSM.AddVertexToBody (result, -e, +b, +f);\n\t\tJSM.AddVertexToBody (result, +e, -b, -f);\n\t\tJSM.AddVertexToBody (result, -e, +b, -f);\n\t\tJSM.AddVertexToBody (result, -e, -b, +f);\n\t\tJSM.AddVertexToBody (result, -e, -b, -f);\n\n\t\tJSM.AddVertexToBody (result, +b, +f, +e);\n\t\tJSM.AddVertexToBody (result, +b, -f, +e);\n\t\tJSM.AddVertexToBody (result, -b, +f, +e);\n\t\tJSM.AddVertexToBody (result, +b, +f, -e);\n\t\tJSM.AddVertexToBody (result, -b, -f, +e);\n\t\tJSM.AddVertexToBody (result, +b, -f, -e);\n\t\tJSM.AddVertexToBody (result, -b, +f, -e);\n\t\tJSM.AddVertexToBody (result, -b, -f, -e);\n\n\t\tJSM.AddVertexToBody (result, +f, +e, +b);\n\t\tJSM.AddVertexToBody (result, -f, +e, +b);\n\t\tJSM.AddVertexToBody (result, +f, +e, -b);\n\t\tJSM.AddVertexToBody (result, +f, -e, +b);\n\t\tJSM.AddVertexToBody (result, -f, +e, -b);\n\t\tJSM.AddVertexToBody (result, -f, -e, +b);\n\t\tJSM.AddVertexToBody (result, +f, -e, -b);\n\t\tJSM.AddVertexToBody (result, -f, -e, -b);\n\n\t\tJSM.AddVertexToBody (result, +c, +g, +h);\n\t\tJSM.AddVertexToBody (result, +c, +g, -h);\n\t\tJSM.AddVertexToBody (result, +c, -g, +h);\n\t\tJSM.AddVertexToBody (result, -c, +g, +h);\n\t\tJSM.AddVertexToBody (result, +c, -g, -h);\n\t\tJSM.AddVertexToBody (result, -c, +g, -h);\n\t\tJSM.AddVertexToBody (result, -c, -g, +h);\n\t\tJSM.AddVertexToBody (result, -c, -g, -h);\n\n\t\tJSM.AddVertexToBody (result, +g, +h, +c);\n\t\tJSM.AddVertexToBody (result, +g, -h, +c);\n\t\tJSM.AddVertexToBody (result, -g, +h, +c);\n\t\tJSM.AddVertexToBody (result, +g, +h, -c);\n\t\tJSM.AddVertexToBody (result, -g, -h, +c);\n\t\tJSM.AddVertexToBody (result, +g, -h, -c);\n\t\tJSM.AddVertexToBody (result, -g, +h, -c);\n\t\tJSM.AddVertexToBody (result, -g, -h, -c);\n\n\t\tJSM.AddVertexToBody (result, +h, +c, +g);\n\t\tJSM.AddVertexToBody (result, -h, +c, +g);\n\t\tJSM.AddVertexToBody (result, +h, +c, -g);\n\t\tJSM.AddVertexToBody (result, +h, -c, +g);\n\t\tJSM.AddVertexToBody (result, -h, +c, -g);\n\t\tJSM.AddVertexToBody (result, -h, -c, +g);\n\t\tJSM.AddVertexToBody (result, +h, -c, -g);\n\t\tJSM.AddVertexToBody (result, -h, -c, -g);\n\n\t\tJSM.AddVertexToBody (result, +i, +a, +j);\n\t\tJSM.AddVertexToBody (result, +i, +a, -j);\n\t\tJSM.AddVertexToBody (result, +i, -a, +j);\n\t\tJSM.AddVertexToBody (result, -i, +a, +j);\n\t\tJSM.AddVertexToBody (result, +i, -a, -j);\n\t\tJSM.AddVertexToBody (result, -i, +a, -j);\n\t\tJSM.AddVertexToBody (result, -i, -a, +j);\n\t\tJSM.AddVertexToBody (result, -i, -a, -j);\n\n\t\tJSM.AddVertexToBody (result, +a, +j, +i);\n\t\tJSM.AddVertexToBody (result, +a, -j, +i);\n\t\tJSM.AddVertexToBody (result, -a, +j, +i);\n\t\tJSM.AddVertexToBody (result, +a, +j, -i);\n\t\tJSM.AddVertexToBody (result, -a, -j, +i);\n\t\tJSM.AddVertexToBody (result, +a, -j, -i);\n\t\tJSM.AddVertexToBody (result, -a, +j, -i);\n\t\tJSM.AddVertexToBody (result, -a, -j, -i);\n\n\t\tJSM.AddVertexToBody (result, +j, +i, +a);\n\t\tJSM.AddVertexToBody (result, -j, +i, +a);\n\t\tJSM.AddVertexToBody (result, +j, +i, -a);\n\t\tJSM.AddVertexToBody (result, +j, -i, +a);\n\t\tJSM.AddVertexToBody (result, -j, +i, -a);\n\t\tJSM.AddVertexToBody (result, -j, -i, +a);\n\t\tJSM.AddVertexToBody (result, +j, -i, -a);\n\t\tJSM.AddVertexToBody (result, -j, -i, -a);\n\n\t\tJSM.AddVertexToBody (result, +b, +k, +l);\n\t\tJSM.AddVertexToBody (result, +b, +k, -l);\n\t\tJSM.AddVertexToBody (result, +b, -k, +l);\n\t\tJSM.AddVertexToBody (result, -b, +k, +l);\n\t\tJSM.AddVertexToBody (result, +b, -k, -l);\n\t\tJSM.AddVertexToBody (result, -b, +k, -l);\n\t\tJSM.AddVertexToBody (result, -b, -k, +l);\n\t\tJSM.AddVertexToBody (result, -b, -k, -l);\n\n\t\tJSM.AddVertexToBody (result, +k, +l, +b);\n\t\tJSM.AddVertexToBody (result, +k, -l, +b);\n\t\tJSM.AddVertexToBody (result, -k, +l, +b);\n\t\tJSM.AddVertexToBody (result, +k, +l, -b);\n\t\tJSM.AddVertexToBody (result, -k, -l, +b);\n\t\tJSM.AddVertexToBody (result, +k, -l, -b);\n\t\tJSM.AddVertexToBody (result, -k, +l, -b);\n\t\tJSM.AddVertexToBody (result, -k, -l, -b);\n\n\t\tJSM.AddVertexToBody (result, +l, +b, +k);\n\t\tJSM.AddVertexToBody (result, -l, +b, +k);\n\t\tJSM.AddVertexToBody (result, +l, +b, -k);\n\t\tJSM.AddVertexToBody (result, +l, -b, +k);\n\t\tJSM.AddVertexToBody (result, -l, +b, -k);\n\t\tJSM.AddVertexToBody (result, -l, -b, +k);\n\t\tJSM.AddVertexToBody (result, +l, -b, -k);\n\t\tJSM.AddVertexToBody (result, -l, -b, -k);\n\n\t\tJSM.AddPolygonToBody (result, [0, 3, 6, 2]);\n\t\tJSM.AddPolygonToBody (result, [1, 4, 7, 5]);\n\t\tJSM.AddPolygonToBody (result, [8, 11, 14, 10]);\n\t\tJSM.AddPolygonToBody (result, [9, 12, 15, 13]);\n\t\tJSM.AddPolygonToBody (result, [16, 19, 22, 18]);\n\t\tJSM.AddPolygonToBody (result, [17, 20, 23, 21]);\n\t\tJSM.AddPolygonToBody (result, [24, 72, 96, 48]);\n\t\tJSM.AddPolygonToBody (result, [25, 49, 97, 73]);\n\t\tJSM.AddPolygonToBody (result, [26, 50, 98, 74]);\n\t\tJSM.AddPolygonToBody (result, [27, 51, 99, 75]);\n\t\tJSM.AddPolygonToBody (result, [28, 76, 100, 52]);\n\t\tJSM.AddPolygonToBody (result, [29, 77, 101, 53]);\n\t\tJSM.AddPolygonToBody (result, [30, 78, 102, 54]);\n\t\tJSM.AddPolygonToBody (result, [31, 55, 103, 79]);\n\t\tJSM.AddPolygonToBody (result, [32, 80, 104, 56]);\n\t\tJSM.AddPolygonToBody (result, [33, 57, 105, 81]);\n\t\tJSM.AddPolygonToBody (result, [34, 58, 106, 82]);\n\t\tJSM.AddPolygonToBody (result, [35, 59, 107, 83]);\n\t\tJSM.AddPolygonToBody (result, [36, 84, 108, 60]);\n\t\tJSM.AddPolygonToBody (result, [37, 85, 109, 61]);\n\t\tJSM.AddPolygonToBody (result, [38, 86, 110, 62]);\n\t\tJSM.AddPolygonToBody (result, [39, 63, 111, 87]);\n\t\tJSM.AddPolygonToBody (result, [40, 88, 112, 64]);\n\t\tJSM.AddPolygonToBody (result, [41, 65, 113, 89]);\n\t\tJSM.AddPolygonToBody (result, [42, 66, 114, 90]);\n\t\tJSM.AddPolygonToBody (result, [43, 67, 115, 91]);\n\t\tJSM.AddPolygonToBody (result, [44, 92, 116, 68]);\n\t\tJSM.AddPolygonToBody (result, [45, 93, 117, 69]);\n\t\tJSM.AddPolygonToBody (result, [46, 94, 118, 70]);\n\t\tJSM.AddPolygonToBody (result, [47, 71, 119, 95]);\n\n\t\tJSM.AddPolygonToBody (result, [0, 24, 48, 51, 27, 3]);\n\t\tJSM.AddPolygonToBody (result, [1, 5, 29, 53, 49, 25]);\n\t\tJSM.AddPolygonToBody (result, [2, 6, 30, 54, 50, 26]);\n\t\tJSM.AddPolygonToBody (result, [4, 28, 52, 55, 31, 7]);\n\t\tJSM.AddPolygonToBody (result, [8, 32, 56, 59, 35, 11]);\n\t\tJSM.AddPolygonToBody (result, [9, 13, 37, 61, 57, 33]);\n\t\tJSM.AddPolygonToBody (result, [10, 14, 38, 62, 58, 34]);\n\t\tJSM.AddPolygonToBody (result, [12, 36, 60, 63, 39, 15]);\n\t\tJSM.AddPolygonToBody (result, [16, 40, 64, 67, 43, 19]);\n\t\tJSM.AddPolygonToBody (result, [17, 21, 45, 69, 65, 41]);\n\t\tJSM.AddPolygonToBody (result, [18, 22, 46, 70, 66, 42]);\n\t\tJSM.AddPolygonToBody (result, [20, 44, 68, 71, 47, 23]);\n\t\tJSM.AddPolygonToBody (result, [72, 112, 88, 104, 80, 96]);\n\t\tJSM.AddPolygonToBody (result, [73, 97, 83, 107, 90, 114]);\n\t\tJSM.AddPolygonToBody (result, [74, 98, 81, 105, 91, 115]);\n\t\tJSM.AddPolygonToBody (result, [75, 99, 82, 106, 89, 113]);\n\t\tJSM.AddPolygonToBody (result, [76, 118, 94, 109, 85, 100]);\n\t\tJSM.AddPolygonToBody (result, [78, 117, 93, 108, 84, 102]);\n\t\tJSM.AddPolygonToBody (result, [79, 103, 87, 111, 95, 119]);\n\t\tJSM.AddPolygonToBody (result, [86, 101, 77, 116, 92, 110]);\n\n\t\tJSM.AddPolygonToBody (result, [0, 2, 26, 74, 115, 67, 64, 112, 72, 24]);\n\t\tJSM.AddPolygonToBody (result, [1, 25, 73, 114, 66, 70, 118, 76, 28, 4]);\n\t\tJSM.AddPolygonToBody (result, [3, 27, 75, 113, 65, 69, 117, 78, 30, 6]);\n\t\tJSM.AddPolygonToBody (result, [5, 7, 31, 79, 119, 71, 68, 116, 77, 29]);\n\t\tJSM.AddPolygonToBody (result, [8, 10, 34, 82, 99, 51, 48, 96, 80, 32]);\n\t\tJSM.AddPolygonToBody (result, [9, 33, 81, 98, 50, 54, 102, 84, 36, 12]);\n\t\tJSM.AddPolygonToBody (result, [11, 35, 83, 97, 49, 53, 101, 86, 38, 14]);\n\t\tJSM.AddPolygonToBody (result, [13, 15, 39, 87, 103, 55, 52, 100, 85, 37]);\n\t\tJSM.AddPolygonToBody (result, [16, 18, 42, 90, 107, 59, 56, 104, 88, 40]);\n\t\tJSM.AddPolygonToBody (result, [17, 41, 89, 106, 58, 62, 110, 92, 44, 20]);\n\t\tJSM.AddPolygonToBody (result, [19, 43, 91, 105, 57, 61, 109, 94, 46, 22]);\n\t\tJSM.AddPolygonToBody (result, [21, 23, 47, 95, 111, 63, 60, 108, 93, 45]);\n\n\t\treturn result;\n\t};\n\n\t/**\n\t* Function: GenerateSnubDodecahedron\n\t* Description: Generates a snub dodecahedron.\n\t* Returns:\n\t*\t{Body} the result\n\t*/\n\tJSM.GenerateSnubDodecahedron = function ()\n\t{\n\t\tvar result = new JSM.Body ();\n\n\t\tvar a = 2.0;\n\t\tvar b = (1.0 + Math.sqrt (5.0)) / 2.0;\n\t\tvar c = Math.pow (b / 2.0 + (1.0 / 2.0) * Math.sqrt (b - (5.0 / 27.0)), 1.0 / 3.0) + Math.pow (b / 2.0 - (1.0 / 2.0) * Math.sqrt (b - (5.0 / 27.0)), 1.0 / 3.0);\n\t\tvar d = c - (1.0 / c);\n\t\tvar e = c * b + Math.pow (b, 2.0) + b / c;\n\t\tvar f = 2.0 * d;\n\t\tvar g = 2.0 * e;\n\t\tvar h = d + (e / b) + b;\n\t\tvar i = -(d * b) + e + (1.0 / b);\n\t\tvar j = (d / b) + (e * b) - 1.0;\n\t\tvar k = -(d / b) + (e * b) + 1.0;\n\t\tvar l = -d + (e / b) - b;\n\t\tvar m = (d * b) + e - (1.0 / b);\n\t\tvar n = -(d / b) + (e * b) - 1.0;\n\t\tvar o = d - (e / b) - b;\n\t\tvar p = (d * b) + e + (1.0 / b);\n\t\tvar q = d + (e / b) - b;\n\t\tvar r = (d * b) - e + (1.0 / b);\n\t\tvar s = (d / b) + (e * b) + 1.0;\n\n\t\tJSM.AddVertexToBody (result, +f, +a, -g);\n\t\tJSM.AddVertexToBody (result, +f, -a, +g);\n\t\tJSM.AddVertexToBody (result, -f, +a, +g);\n\t\tJSM.AddVertexToBody (result, -f, -a, -g);\n\n\t\tJSM.AddVertexToBody (result, +a, -g, +f);\n\t\tJSM.AddVertexToBody (result, -a, +g, +f);\n\t\tJSM.AddVertexToBody (result, +a, +g, -f);\n\t\tJSM.AddVertexToBody (result, -a, -g, -f);\n\n\t\tJSM.AddVertexToBody (result, -g, +f, +a);\n\t\tJSM.AddVertexToBody (result, +g, +f, -a);\n\t\tJSM.AddVertexToBody (result, +g, -f, +a);\n\t\tJSM.AddVertexToBody (result, -g, -f, -a);\n\n\t\tJSM.AddVertexToBody (result, +h, +i, -j);\n\t\tJSM.AddVertexToBody (result, +h, -i, +j);\n\t\tJSM.AddVertexToBody (result, -h, +i, +j);\n\t\tJSM.AddVertexToBody (result, -h, -i, -j);\n\n\t\tJSM.AddVertexToBody (result, +i, -j, +h);\n\t\tJSM.AddVertexToBody (result, -i, +j, +h);\n\t\tJSM.AddVertexToBody (result, +i, +j, -h);\n\t\tJSM.AddVertexToBody (result, -i, -j, -h);\n\n\t\tJSM.AddVertexToBody (result, -j, +h, +i);\n\t\tJSM.AddVertexToBody (result, +j, +h, -i);\n\t\tJSM.AddVertexToBody (result, +j, -h, +i);\n\t\tJSM.AddVertexToBody (result, -j, -h, -i);\n\n\t\tJSM.AddVertexToBody (result, +k, +l, -m);\n\t\tJSM.AddVertexToBody (result, +k, -l, +m);\n\t\tJSM.AddVertexToBody (result, -k, +l, +m);\n\t\tJSM.AddVertexToBody (result, -k, -l, -m);\n\n\t\tJSM.AddVertexToBody (result, +l, -m, +k);\n\t\tJSM.AddVertexToBody (result, -l, +m, +k);\n\t\tJSM.AddVertexToBody (result, +l, +m, -k);\n\t\tJSM.AddVertexToBody (result, -l, -m, -k);\n\n\t\tJSM.AddVertexToBody (result, -m, +k, +l);\n\t\tJSM.AddVertexToBody (result, +m, +k, -l);\n\t\tJSM.AddVertexToBody (result, +m, -k, +l);\n\t\tJSM.AddVertexToBody (result, -m, -k, -l);\n\n\t\tJSM.AddVertexToBody (result, +n, +o, -p);\n\t\tJSM.AddVertexToBody (result, +n, -o, +p);\n\t\tJSM.AddVertexToBody (result, -n, +o, +p);\n\t\tJSM.AddVertexToBody (result, -n, -o, -p);\n\n\t\tJSM.AddVertexToBody (result, +o, -p, +n);\n\t\tJSM.AddVertexToBody (result, -o, +p, +n);\n\t\tJSM.AddVertexToBody (result, +o, +p, -n);\n\t\tJSM.AddVertexToBody (result, -o, -p, -n);\n\n\t\tJSM.AddVertexToBody (result, -p, +n, +o);\n\t\tJSM.AddVertexToBody (result, +p, +n, -o);\n\t\tJSM.AddVertexToBody (result, +p, -n, +o);\n\t\tJSM.AddVertexToBody (result, -p, -n, -o);\n\n\t\tJSM.AddVertexToBody (result, +q, +r, -s);\n\t\tJSM.AddVertexToBody (result, +q, -r, +s);\n\t\tJSM.AddVertexToBody (result, -q, +r, +s);\n\t\tJSM.AddVertexToBody (result, -q, -r, -s);\n\n\t\tJSM.AddVertexToBody (result, +r, -s, +q);\n\t\tJSM.AddVertexToBody (result, -r, +s, +q);\n\t\tJSM.AddVertexToBody (result, +r, +s, -q);\n\t\tJSM.AddVertexToBody (result, -r, -s, -q);\n\n\t\tJSM.AddVertexToBody (result, -s, +q, +r);\n\t\tJSM.AddVertexToBody (result, +s, +q, -r);\n\t\tJSM.AddVertexToBody (result, +s, -q, +r);\n\t\tJSM.AddVertexToBody (result, -s, -q, -r);\n\n\t\tJSM.AddPolygonToBody (result, [0, 3, 51]);\n\t\tJSM.AddPolygonToBody (result, [0, 30, 12]);\n\t\tJSM.AddPolygonToBody (result, [0, 48, 3]);\n\t\tJSM.AddPolygonToBody (result, [0, 51, 30]);\n\t\tJSM.AddPolygonToBody (result, [1, 2, 50]);\n\t\tJSM.AddPolygonToBody (result, [1, 28, 13]);\n\t\tJSM.AddPolygonToBody (result, [1, 49, 2]);\n\t\tJSM.AddPolygonToBody (result, [1, 50, 28]);\n\t\tJSM.AddPolygonToBody (result, [2, 29, 14]);\n\t\tJSM.AddPolygonToBody (result, [2, 49, 29]);\n\t\tJSM.AddPolygonToBody (result, [3, 31, 15]);\n\t\tJSM.AddPolygonToBody (result, [3, 48, 31]);\n\t\tJSM.AddPolygonToBody (result, [4, 7, 55]);\n\t\tJSM.AddPolygonToBody (result, [4, 34, 16]);\n\t\tJSM.AddPolygonToBody (result, [4, 52, 7]);\n\t\tJSM.AddPolygonToBody (result, [4, 55, 34]);\n\t\tJSM.AddPolygonToBody (result, [5, 6, 54]);\n\t\tJSM.AddPolygonToBody (result, [5, 32, 17]);\n\t\tJSM.AddPolygonToBody (result, [5, 53, 6]);\n\t\tJSM.AddPolygonToBody (result, [5, 54, 32]);\n\t\tJSM.AddPolygonToBody (result, [6, 33, 18]);\n\t\tJSM.AddPolygonToBody (result, [6, 53, 33]);\n\t\tJSM.AddPolygonToBody (result, [7, 35, 19]);\n\t\tJSM.AddPolygonToBody (result, [7, 52, 35]);\n\t\tJSM.AddPolygonToBody (result, [8, 11, 59]);\n\t\tJSM.AddPolygonToBody (result, [8, 26, 20]);\n\t\tJSM.AddPolygonToBody (result, [8, 56, 11]);\n\t\tJSM.AddPolygonToBody (result, [8, 59, 26]);\n\t\tJSM.AddPolygonToBody (result, [9, 10, 58]);\n\t\tJSM.AddPolygonToBody (result, [9, 24, 21]);\n\t\tJSM.AddPolygonToBody (result, [9, 57, 10]);\n\t\tJSM.AddPolygonToBody (result, [9, 58, 24]);\n\t\tJSM.AddPolygonToBody (result, [10, 25, 22]);\n\t\tJSM.AddPolygonToBody (result, [10, 57, 25]);\n\t\tJSM.AddPolygonToBody (result, [11, 27, 23]);\n\t\tJSM.AddPolygonToBody (result, [11, 56, 27]);\n\t\tJSM.AddPolygonToBody (result, [12, 18, 21]);\n\t\tJSM.AddPolygonToBody (result, [12, 21, 24]);\n\t\tJSM.AddPolygonToBody (result, [12, 30, 18]);\n\t\tJSM.AddPolygonToBody (result, [13, 16, 22]);\n\t\tJSM.AddPolygonToBody (result, [13, 22, 25]);\n\t\tJSM.AddPolygonToBody (result, [13, 28, 16]);\n\t\tJSM.AddPolygonToBody (result, [14, 17, 20]);\n\t\tJSM.AddPolygonToBody (result, [14, 20, 26]);\n\t\tJSM.AddPolygonToBody (result, [14, 29, 17]);\n\t\tJSM.AddPolygonToBody (result, [15, 19, 23]);\n\t\tJSM.AddPolygonToBody (result, [15, 23, 27]);\n\t\tJSM.AddPolygonToBody (result, [15, 31, 19]);\n\t\tJSM.AddPolygonToBody (result, [16, 34, 22]);\n\t\tJSM.AddPolygonToBody (result, [17, 32, 20]);\n\t\tJSM.AddPolygonToBody (result, [18, 33, 21]);\n\t\tJSM.AddPolygonToBody (result, [19, 35, 23]);\n\t\tJSM.AddPolygonToBody (result, [24, 58, 36]);\n\t\tJSM.AddPolygonToBody (result, [25, 57, 37]);\n\t\tJSM.AddPolygonToBody (result, [26, 59, 38]);\n\t\tJSM.AddPolygonToBody (result, [27, 56, 39]);\n\t\tJSM.AddPolygonToBody (result, [28, 50, 40]);\n\t\tJSM.AddPolygonToBody (result, [29, 49, 41]);\n\t\tJSM.AddPolygonToBody (result, [30, 51, 42]);\n\t\tJSM.AddPolygonToBody (result, [31, 48, 43]);\n\t\tJSM.AddPolygonToBody (result, [32, 54, 44]);\n\t\tJSM.AddPolygonToBody (result, [33, 53, 45]);\n\t\tJSM.AddPolygonToBody (result, [34, 55, 46]);\n\t\tJSM.AddPolygonToBody (result, [35, 52, 47]);\n\t\tJSM.AddPolygonToBody (result, [36, 43, 48]);\n\t\tJSM.AddPolygonToBody (result, [36, 46, 43]);\n\t\tJSM.AddPolygonToBody (result, [36, 58, 46]);\n\t\tJSM.AddPolygonToBody (result, [37, 41, 49]);\n\t\tJSM.AddPolygonToBody (result, [37, 45, 41]);\n\t\tJSM.AddPolygonToBody (result, [37, 57, 45]);\n\t\tJSM.AddPolygonToBody (result, [38, 40, 50]);\n\t\tJSM.AddPolygonToBody (result, [38, 47, 40]);\n\t\tJSM.AddPolygonToBody (result, [38, 59, 47]);\n\t\tJSM.AddPolygonToBody (result, [39, 42, 51]);\n\t\tJSM.AddPolygonToBody (result, [39, 44, 42]);\n\t\tJSM.AddPolygonToBody (result, [39, 56, 44]);\n\t\tJSM.AddPolygonToBody (result, [40, 47, 52]);\n\t\tJSM.AddPolygonToBody (result, [41, 45, 53]);\n\t\tJSM.AddPolygonToBody (result, [42, 44, 54]);\n\t\tJSM.AddPolygonToBody (result, [43, 46, 55]);\n\n\t\tJSM.AddPolygonToBody (result, [0, 12, 24, 36, 48]);\n\t\tJSM.AddPolygonToBody (result, [1, 13, 25, 37, 49]);\n\t\tJSM.AddPolygonToBody (result, [2, 14, 26, 38, 50]);\n\t\tJSM.AddPolygonToBody (result, [3, 15, 27, 39, 51]);\n\t\tJSM.AddPolygonToBody (result, [4, 16, 28, 40, 52]);\n\t\tJSM.AddPolygonToBody (result, [5, 17, 29, 41, 53]);\n\t\tJSM.AddPolygonToBody (result, [6, 18, 30, 42, 54]);\n\t\tJSM.AddPolygonToBody (result, [7, 19, 31, 43, 55]);\n\t\tJSM.AddPolygonToBody (result, [8, 20, 32, 44, 56]);\n\t\tJSM.AddPolygonToBody (result, [9, 21, 33, 45, 57]);\n\t\tJSM.AddPolygonToBody (result, [10, 22, 34, 46, 58]);\n\t\tJSM.AddPolygonToBody (result, [11, 23, 35, 47, 59]);\n\n\t\treturn result;\n\t};\n\n\t/**\n\t* Function: AddCumulatedPolygonToBody\n\t* Description: Adds polygons to a body by cumulating the original polygons vertex index array.\n\t* Parameters:\n\t*\tbody {Body} the body\n\t*\tvertices {integer[*]} the vertices of the original polygon\n\t*\theight {number} the height of the cumulation\n\t*/\n\tJSM.AddCumulatedPolygonToBody = function (body, vertices, height)\n\t{\n\t\tfunction CalculatePolygonCentroidAndNormal (vertices, centroidCoord, normalVector)\n\t\t{\n\t\t\tvar vertexCoords = [];\n\t\t\t\n\t\t\tvar i;\n\t\t\tfor (i = 0; i < vertices.length; i++) {\n\t\t\t\tvertexCoords.push (body.GetVertexPosition (vertices[i]));\n\t\t\t}\n\t\t\t\n\t\t\tvar centroid = JSM.CalculateCentroid (vertexCoords);\n\t\t\tvar normal = JSM.CalculateNormal (vertexCoords);\n\n\t\t\tcentroidCoord.Set (centroid.x, centroid.y, centroid.z);\n\t\t\tnormalVector.Set (normal.x, normal.y, normal.z);\n\t\t}\n\n\t\tvar centroidCoord = new JSM.Coord (0.0, 0.0, 0.0);\n\t\tvar normalVector = new JSM.Vector (0.0, 0.0, 0.0);\n\t\tCalculatePolygonCentroidAndNormal (vertices, centroidCoord, normalVector);\n\t\tcentroidCoord.Offset (normalVector, height);\n\t\t\n\t\tvar centroid = body.VertexCount ();\n\t\tJSM.AddVertexToBody (body, centroidCoord.x, centroidCoord.y, centroidCoord.z);\n\n\t\tvar count = vertices.length;\n\n\t\tvar i, curr, next;\n\t\tfor (i = 0; i < count; i++) {\n\t\t\tcurr = vertices[i];\n\t\t\tnext = vertices [i < count - 1 ? i + 1 : 0];\n\t\t\tJSM.AddPolygonToBody (body, [curr, next, centroid]);\n\t\t}\n\t};\n\n\t/**\n\t* Function: GenerateCumulatedTetrahedron\n\t* Description: Generates a cumulated tetrahedron.\n\t* Parameters:\n\t*\tpyramidUnitHeight {number} the unit height of pyramids\n\t* Returns:\n\t*\t{Body} the result\n\t*/\n\tJSM.GenerateCumulatedTetrahedron = function (pyramidUnitHeight)\n\t{\n\t\tvar result = new JSM.Body ();\n\n\t\tvar a = 1.0;\n\n\t\tresult.AddVertex (new JSM.BodyVertex (new JSM.Coord (+a, +a, +a)));\n\t\tresult.AddVertex (new JSM.BodyVertex (new JSM.Coord (-a, -a, +a)));\n\t\tresult.AddVertex (new JSM.BodyVertex (new JSM.Coord (-a, +a, -a)));\n\t\tresult.AddVertex (new JSM.BodyVertex (new JSM.Coord (+a, -a, -a)));\n\n\t\tvar edgeLength = 2.0 * Math.sqrt (2.0);\n\t\tvar height = edgeLength * pyramidUnitHeight;\n\t\t\n\t\tJSM.AddCumulatedPolygonToBody (result, [0, 1, 3], height);\n\t\tJSM.AddCumulatedPolygonToBody (result, [0, 2, 1], height);\n\t\tJSM.AddCumulatedPolygonToBody (result, [0, 3, 2], height);\n\t\tJSM.AddCumulatedPolygonToBody (result, [1, 2, 3], height);\n\n\t\treturn result;\n\t};\n\n\t/**\n\t* Function: GenerateCumulatedHexahedron\n\t* Description: Generates a cumulated hexahedron.\n\t* Parameters:\n\t*\tpyramidUnitHeight {number} the unit height of pyramids\n\t* Returns:\n\t*\t{Body} the result\n\t*/\n\tJSM.GenerateCumulatedHexahedron = function (pyramidUnitHeight)\n\t{\n\t\tvar result = new JSM.Body ();\n\n\t\tvar a = 1.0;\n\n\t\tJSM.AddVertexToBody (result, +a, +a, +a);\n\t\tJSM.AddVertexToBody (result, +a, +a, -a);\n\t\tJSM.AddVertexToBody (result, +a, -a, +a);\n\t\tJSM.AddVertexToBody (result, -a, +a, +a);\n\t\tJSM.AddVertexToBody (result, +a, -a, -a);\n\t\tJSM.AddVertexToBody (result, -a, +a, -a);\n\t\tJSM.AddVertexToBody (result, -a, -a, +a);\n\t\tJSM.AddVertexToBody (result, -a, -a, -a);\n\n\t\tvar edgeLength = 2.0;\n\t\tvar height = edgeLength * pyramidUnitHeight;\n\t\t\n\t\tJSM.AddCumulatedPolygonToBody (result, [0, 1, 5, 3], height);\n\t\tJSM.AddCumulatedPolygonToBody (result, [0, 2, 4, 1], height);\n\t\tJSM.AddCumulatedPolygonToBody (result, [0, 3, 6, 2], height);\n\t\tJSM.AddCumulatedPolygonToBody (result, [1, 4, 7, 5], height);\n\t\tJSM.AddCumulatedPolygonToBody (result, [2, 6, 7, 4], height);\n\t\tJSM.AddCumulatedPolygonToBody (result, [3, 5, 7, 6], height);\n\n\t\treturn result;\n\t};\n\n\t/**\n\t* Function: GenerateCumulatedOctahedron\n\t* Description: Generates a cumulated octahedron.\n\t* Parameters:\n\t*\tpyramidUnitHeight {number} the unit height of pyramids\n\t* Returns:\n\t*\t{Body} the result\n\t*/\n\tJSM.GenerateCumulatedOctahedron = function (pyramidUnitHeight)\n\t{\n\t\tvar result = new JSM.Body ();\n\n\t\tvar a = 1.0;\n\t\tvar b = 0.0;\n\n\t\tJSM.AddVertexToBody (result, +a, +b, +b);\n\t\tJSM.AddVertexToBody (result, -a, +b, +b);\n\t\tJSM.AddVertexToBody (result, +b, +a, +b);\n\t\tJSM.AddVertexToBody (result, +b, -a, +b);\n\t\tJSM.AddVertexToBody (result, +b, +b, +a);\n\t\tJSM.AddVertexToBody (result, +b, +b, -a);\n\n\t\tvar edgeLength = Math.sqrt (2.0);\n\t\tvar height = edgeLength * pyramidUnitHeight;\n\t\t\n\t\tJSM.AddCumulatedPolygonToBody (result, [0, 2, 4], height);\n\t\tJSM.AddCumulatedPolygonToBody (result, [0, 3, 5], height);\n\t\tJSM.AddCumulatedPolygonToBody (result, [0, 4, 3], height);\n\t\tJSM.AddCumulatedPolygonToBody (result, [0, 5, 2], height);\n\t\tJSM.AddCumulatedPolygonToBody (result, [1, 2, 5], height);\n\t\tJSM.AddCumulatedPolygonToBody (result, [1, 3, 4], height);\n\t\tJSM.AddCumulatedPolygonToBody (result, [1, 4, 2], height);\n\t\tJSM.AddCumulatedPolygonToBody (result, [1, 5, 3], height);\n\n\t\treturn result;\n\t};\n\n\t/**\n\t* Function: GenerateCumulatedDodecahedron\n\t* Description: Generates a cumulated dodecahedron.\n\t* Parameters:\n\t*\tpyramidUnitHeight {number} the unit height of pyramids\n\t* Returns:\n\t*\t{Body} the result\n\t*/\n\tJSM.GenerateCumulatedDodecahedron = function (pyramidUnitHeight)\n\t{\n\t\tvar result = new JSM.Body ();\n\n\t\tvar a = 1.0;\n\t\tvar b = 0.0;\n\t\tvar c = (1.0 + Math.sqrt (5.0)) / 2.0;\n\t\tvar d = 1.0 / c;\n\n\t\tJSM.AddVertexToBody (result, +a, +a, +a);\n\t\tJSM.AddVertexToBody (result, +a, +a, -a);\n\t\tJSM.AddVertexToBody (result, +a, -a, +a);\n\t\tJSM.AddVertexToBody (result, -a, +a, +a);\n\t\tJSM.AddVertexToBody (result, +a, -a, -a);\n\t\tJSM.AddVertexToBody (result, -a, +a, -a);\n\t\tJSM.AddVertexToBody (result, -a, -a, +a);\n\t\tJSM.AddVertexToBody (result, -a, -a, -a);\n\n\t\tJSM.AddVertexToBody (result, +b, +d, +c);\n\t\tJSM.AddVertexToBody (result, +b, +d, -c);\n\t\tJSM.AddVertexToBody (result, +b, -d, +c);\n\t\tJSM.AddVertexToBody (result, +b, -d, -c);\n\n\t\tJSM.AddVertexToBody (result, +d, +c, +b);\n\t\tJSM.AddVertexToBody (result, +d, -c, +b);\n\t\tJSM.AddVertexToBody (result, -d, +c, +b);\n\t\tJSM.AddVertexToBody (result, -d, -c, +b);\n\n\t\tJSM.AddVertexToBody (result, +c, +b, +d);\n\t\tJSM.AddVertexToBody (result, -c, +b, +d);\n\t\tJSM.AddVertexToBody (result, +c, +b, -d);\n\t\tJSM.AddVertexToBody (result, -c, +b, -d);\n\n\t\tvar edgeLength = Math.sqrt (5.0) - 1.0;\n\t\tvar height = edgeLength * pyramidUnitHeight;\n\t\t\n\t\tJSM.AddCumulatedPolygonToBody (result, [0, 8, 10, 2, 16], height);\n\t\tJSM.AddCumulatedPolygonToBody (result, [0, 16, 18, 1, 12], height);\n\t\tJSM.AddCumulatedPolygonToBody (result, [0, 12, 14, 3, 8], height);\n\t\tJSM.AddCumulatedPolygonToBody (result, [1, 9, 5, 14, 12], height);\n\t\tJSM.AddCumulatedPolygonToBody (result, [1, 18, 4, 11, 9], height);\n\t\tJSM.AddCumulatedPolygonToBody (result, [2, 10, 6, 15, 13], height);\n\t\tJSM.AddCumulatedPolygonToBody (result, [2, 13, 4, 18, 16], height);\n\t\tJSM.AddCumulatedPolygonToBody (result, [3, 14, 5, 19, 17], height);\n\t\tJSM.AddCumulatedPolygonToBody (result, [3, 17, 6, 10, 8], height);\n\t\tJSM.AddCumulatedPolygonToBody (result, [4, 13, 15, 7, 11], height);\n\t\tJSM.AddCumulatedPolygonToBody (result, [5, 9, 11, 7, 19], height);\n\t\tJSM.AddCumulatedPolygonToBody (result, [6, 17, 19, 7, 15], height);\n\n\t\treturn result;\n\t};\n\n\t/**\n\t* Function: GenerateCumulatedIcosahedron\n\t* Description: Generates a cumulated icosahedron.\n\t* Parameters:\n\t*\tpyramidUnitHeight {number} the unit height of pyramids\n\t* Returns:\n\t*\t{Body} the result\n\t*/\n\tJSM.GenerateCumulatedIcosahedron = function (pyramidUnitHeight)\n\t{\n\t\tvar result = new JSM.Body ();\n\n\t\tvar a = 1.0;\n\t\tvar b = 0.0;\n\t\tvar c = (1.0 + Math.sqrt (5.0)) / 2.0;\n\n\t\tJSM.AddVertexToBody (result, +b, +a, +c);\n\t\tJSM.AddVertexToBody (result, +b, +a, -c);\n\t\tJSM.AddVertexToBody (result, +b, -a, +c);\n\t\tJSM.AddVertexToBody (result, +b, -a, -c);\n\n\t\tJSM.AddVertexToBody (result, +a, +c, +b);\n\t\tJSM.AddVertexToBody (result, +a, -c, +b);\n\t\tJSM.AddVertexToBody (result, -a, +c, +b);\n\t\tJSM.AddVertexToBody (result, -a, -c, +b);\n\n\t\tJSM.AddVertexToBody (result, +c, +b, +a);\n\t\tJSM.AddVertexToBody (result, -c, +b, +a);\n\t\tJSM.AddVertexToBody (result, +c, +b, -a);\n\t\tJSM.AddVertexToBody (result, -c, +b, -a);\n\n\t\tvar edgeLength = 2;\n\t\tvar height = edgeLength * pyramidUnitHeight;\n\n\t\tJSM.AddCumulatedPolygonToBody (result, [0, 2, 8], height);\n\t\tJSM.AddCumulatedPolygonToBody (result, [0, 4, 6], height);\n\t\tJSM.AddCumulatedPolygonToBody (result, [0, 6, 9], height);\n\t\tJSM.AddCumulatedPolygonToBody (result, [0, 8, 4], height);\n\t\tJSM.AddCumulatedPolygonToBody (result, [0, 9, 2], height);\n\t\tJSM.AddCumulatedPolygonToBody (result, [1, 3, 11], height);\n\t\tJSM.AddCumulatedPolygonToBody (result, [1, 4, 10], height);\n\t\tJSM.AddCumulatedPolygonToBody (result, [1, 6, 4], height);\n\t\tJSM.AddCumulatedPolygonToBody (result, [1, 10, 3], height);\n\t\tJSM.AddCumulatedPolygonToBody (result, [1, 11, 6], height);\n\t\tJSM.AddCumulatedPolygonToBody (result, [2, 5, 8], height);\n\t\tJSM.AddCumulatedPolygonToBody (result, [2, 7, 5], height);\n\t\tJSM.AddCumulatedPolygonToBody (result, [2, 9, 7], height);\n\t\tJSM.AddCumulatedPolygonToBody (result, [3, 5, 7], height);\n\t\tJSM.AddCumulatedPolygonToBody (result, [3, 7, 11], height);\n\t\tJSM.AddCumulatedPolygonToBody (result, [3, 10, 5], height);\n\t\tJSM.AddCumulatedPolygonToBody (result, [4, 8, 10], height);\n\t\tJSM.AddCumulatedPolygonToBody (result, [6, 11, 9], height);\n\t\tJSM.AddCumulatedPolygonToBody (result, [5, 10, 8], height);\n\t\tJSM.AddCumulatedPolygonToBody (result, [7, 9, 11], height);\n\n\t\treturn result;\n\t};\n\n\t/**\n\t* Function: GenerateTetrakisHexahedron\n\t* Description: Generates a tetrakis hexahedron.\n\t* Returns:\n\t*\t{Body} the result\n\t*/\n\tJSM.GenerateTetrakisHexahedron = function ()\n\t{\n\t\tvar pyramidUnitHeight = 1.0 / 4.0;\n\t\treturn JSM.GenerateCumulatedHexahedron (pyramidUnitHeight);\n\t};\n\n\t/**\n\t* Function: GenerateRhombicDodecahedron\n\t* Description: Generates a rhombic dodecahedron.\n\t* Returns:\n\t*\t{Body} the result\n\t*/\n\tJSM.GenerateRhombicDodecahedron = function ()\n\t{\n\t\tvar pyramidUnitHeight = 1.0 / 2.0;\n\t\treturn JSM.GenerateCumulatedHexahedron (pyramidUnitHeight);\n\t};\n\n\t/**\n\t* Function: GeneratePentakisDodecahedron\n\t* Description: Generates a pentakis dodecahedron.\n\t* Returns:\n\t*\t{Body} the result\n\t*/\n\tJSM.GeneratePentakisDodecahedron = function ()\n\t{\n\t\tvar pyramidUnitHeight = Math.sqrt ((65.0 + 22.0 * Math.sqrt (5.0)) / 5.0) / 19.0;\n\t\treturn JSM.GenerateCumulatedDodecahedron (pyramidUnitHeight);\n\t};\n\n\t/**\n\t* Function: GenerateSmallStellatedDodecahedron\n\t* Description: Generates a small stellated dodecahedron.\n\t* Returns:\n\t*\t{Body} the result\n\t*/\n\tJSM.GenerateSmallStellatedDodecahedron = function ()\n\t{\n\t\tvar pyramidUnitHeight = Math.sqrt ((5.0 + 2.0 * Math.sqrt (5.0)) / 5.0);\n\t\treturn JSM.GenerateCumulatedDodecahedron (pyramidUnitHeight);\n\t};\n\n\t/**\n\t* Function: GenerateGreatDodecahedron\n\t* Description: Generates a great dodecahedron.\n\t* Returns:\n\t*\t{Body} the result\n\t*/\n\tJSM.GenerateGreatDodecahedron = function ()\n\t{\n\t\tvar pyramidUnitHeight = (Math.sqrt (3.0) * (Math.sqrt (5.0) - 3.0)) / 6.0;\n\t\treturn JSM.GenerateCumulatedIcosahedron (pyramidUnitHeight);\n\t};\n\n\t/**\n\t* Function: GenerateSmallTriambicIcosahedron\n\t* Description: Generates a small triambic icosahedron.\n\t* Returns:\n\t*\t{Body} the result\n\t*/\n\tJSM.GenerateSmallTriambicIcosahedron = function ()\n\t{\n\t\tvar pyramidUnitHeight = Math.sqrt (15.0) / 15.0;\n\t\treturn JSM.GenerateCumulatedIcosahedron (pyramidUnitHeight);\n\t};\n\n\t/**\n\t* Function: GenerateGreatStellatedDodecahedron\n\t* Description: Generates a great stellated dodecahedron.\n\t* Returns:\n\t*\t{Body} the result\n\t*/\n\tJSM.GenerateGreatStellatedDodecahedron = function ()\n\t{\n\t\tvar pyramidUnitHeight = (Math.sqrt (3.0) * (3.0 + Math.sqrt (5.0))) / 6.0;\n\t\treturn JSM.GenerateCumulatedIcosahedron (pyramidUnitHeight);\n\t};\n\n\t/**\n\t* Function: GenerateSmallTriakisOctahedron\n\t* Description: Generates a small triakis octahedron.\n\t* Returns:\n\t*\t{Body} the result\n\t*/\n\tJSM.GenerateSmallTriakisOctahedron = function ()\n\t{\n\t\tvar pyramidUnitHeight = Math.sqrt (3.0) - 2.0 * Math.sqrt (6.0) / 3.0;\n\t\treturn JSM.GenerateCumulatedOctahedron (pyramidUnitHeight);\n\t};\n\n\t/**\n\t* Function: GenerateStellaOctangula\n\t* Description: Generates a stella octangula.\n\t* Returns:\n\t*\t{Body} the result\n\t*/\n\tJSM.GenerateStellaOctangula = function ()\n\t{\n\t\tvar pyramidUnitHeight = Math.sqrt (6.0) / 3.0;\n\t\treturn JSM.GenerateCumulatedOctahedron (pyramidUnitHeight);\n\t};\n\n\t/**\n\t* Function: GenerateTriakisTetrahedron\n\t* Description: Generates a triakis tetrahedron.\n\t* Returns:\n\t*\t{Body} the result\n\t*/\n\tJSM.GenerateTriakisTetrahedron = function ()\n\t{\n\t\tvar pyramidUnitHeight = Math.sqrt (6.0) / 15.0;\n\t\treturn JSM.GenerateCumulatedTetrahedron (pyramidUnitHeight);\n\t};\n\n\treturn JSM;\n});\n"]}