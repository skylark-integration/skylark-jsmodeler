{"version":3,"sources":["modeler/trianglemodel.js"],"names":["define","JSM","TriangleModel","this","materials","bodies","defaultMaterial","prototype","AddMaterial","material","push","length","GetMaterial","index","AddDefaultMaterial","GetDefaultMaterialIndex","MaterialCount","AddBody","body","AddBodyToIndex","splice","GetBody","VertexCount","i","result","TriangleCount","BodyCount","FinalizeMaterials","defaultMaterialData","name","ambient","diffuse","specular","shininess","opacity","reflection","texture","offset","scale","rotation","CopyObjectProperties","FinalizeBodies","Finalize"],"mappings":";;;;;;;AAAAA,QAAQ,eAAe,SAASC,GAsN/B,OAjNAA,EAAIC,cAAgB,WAEnBC,KAAKC,aACLD,KAAKE,UACLF,KAAKG,iBAAmB,GAWzBL,EAAIC,cAAcK,UAAUC,YAAc,SAAUC,GAGnD,OADAN,KAAKC,UAAUM,KAAMD,GACdN,KAAKC,UAAUO,OAAS,GAWhCV,EAAIC,cAAcK,UAAUK,YAAc,SAAUC,GAEnD,OAAOV,KAAKC,UAAUS,IASvBZ,EAAIC,cAAcK,UAAUO,mBAAqB,WAKhD,OAH6B,GAAzBX,KAAKG,kBACRH,KAAKG,gBAAkBH,KAAKK,iBAEtBL,KAAKG,iBASbL,EAAIC,cAAcK,UAAUQ,wBAA0B,WAErD,OAAOZ,KAAKW,sBASbb,EAAIC,cAAcK,UAAUS,cAAgB,WAE3C,OAAOb,KAAKC,UAAUO,QAWvBV,EAAIC,cAAcK,UAAUU,QAAU,SAAUC,GAG/C,OADAf,KAAKE,OAAOK,KAAMQ,GACXf,KAAKE,OAAOM,OAAS,GAY7BV,EAAIC,cAAcK,UAAUY,eAAiB,SAAUD,EAAML,GAG5D,OADAV,KAAKE,OAAOe,OAAQP,EAAO,EAAGK,GACvBL,GAWRZ,EAAIC,cAAcK,UAAUc,QAAU,SAAUR,GAE/C,OAAOV,KAAKE,OAAOQ,IASpBZ,EAAIC,cAAcK,UAAUe,YAAc,WAEzC,IACIC,EADAC,EAAS,EAEb,IAAKD,EAAI,EAAGA,EAAIpB,KAAKE,OAAOM,OAAQY,IAEnCC,GADOrB,KAAKE,OAAOkB,GACJD,cAEhB,OAAOE,GASRvB,EAAIC,cAAcK,UAAUkB,cAAgB,WAE3C,IACIF,EADAC,EAAS,EAEb,IAAKD,EAAI,EAAGA,EAAIpB,KAAKE,OAAOM,OAAQY,IAEnCC,GADOrB,KAAKE,OAAOkB,GACJE,gBAEhB,OAAOD,GASRvB,EAAIC,cAAcK,UAAUmB,UAAY,WAEvC,OAAOvB,KAAKE,OAAOM,QASpBV,EAAIC,cAAcK,UAAUoB,kBAAoB,WAE/C,IAcIJ,EAAGd,EAdHmB,GACHC,KAAO,UACPC,SAAW,GAAK,GAAK,IACrBC,SAAW,GAAK,GAAK,IACrBC,UAAY,GAAK,GAAK,IACtBC,UAAY,EACZC,QAAU,EACVC,WAAa,EACbC,QAAU,KACVC,OAAS,KACTC,MAAQ,KACRC,SAAW,MAIZ,IAAKhB,EAAI,EAAGA,EAAIpB,KAAKC,UAAUO,OAAQY,IACtCd,EAAWN,KAAKC,UAAUmB,GAC1BtB,EAAIuC,qBAAsBZ,EAAqBnB,GAAU,IAQ3DR,EAAIC,cAAcK,UAAUkC,eAAiB,WAE5C,IAAIlB,EACJ,IAAKA,EAAI,EAAGA,EAAIpB,KAAKE,OAAOM,OAAQY,IAC5BpB,KAAKE,OAAOkB,GACdmB,SAAUvC,OAQjBF,EAAIC,cAAcK,UAAUmC,SAAW,WAEtCvC,KAAKsC,iBACLtC,KAAKwB,qBAGC1B","file":"../../modeler/trianglemodel.js","sourcesContent":["define([\"../core/jsm\"],function(JSM){\n\t/**\n\t* Class: TriangleModel\n\t* Description: Represents a 3D model which contains only triangles.\n\t*/\n\tJSM.TriangleModel = function ()\n\t{\n\t\tthis.materials = [];\n\t\tthis.bodies = [];\n\t\tthis.defaultMaterial = -1;\n\t};\n\n\t/**\n\t* Function: TriangleModel.AddMaterial\n\t* Description: Adds a material to the model.\n\t* Parameters:\n\t*\tmaterial {material} the parameters of the material\n\t* Returns:\n\t*\t{integer} the index of the added material\n\t*/\n\tJSM.TriangleModel.prototype.AddMaterial = function (material)\n\t{\n\t\tthis.materials.push (material);\n\t\treturn this.materials.length - 1;\n\t};\n\n\t/**\n\t* Function: TriangleModel.GetMaterial\n\t* Description: Returns the material at the given index.\n\t* Parameters:\n\t*\tindex {integer} the material index\n\t* Returns:\n\t*\t{object} the result\n\t*/\n\tJSM.TriangleModel.prototype.GetMaterial = function (index)\n\t{\n\t\treturn this.materials[index];\n\t};\n\n\t/**\n\t* Function: TriangleModel.AddDefaultMaterial\n\t* Description: Adds a default material to the model. The default material is stored only once.\n\t* Returns:\n\t*\t{integer} the index of the default material\n\t*/\n\tJSM.TriangleModel.prototype.AddDefaultMaterial = function ()\n\t{\n\t\tif (this.defaultMaterial == -1) {\n\t\t\tthis.defaultMaterial = this.AddMaterial ({});\n\t\t}\n\t\treturn this.defaultMaterial;\n\t};\n\n\t/**\n\t* Function: TriangleModel.GetDefaultMaterialIndex\n\t* Description: Adds a default material, and returns the index of it.\n\t* Returns:\n\t*\t{integer} the result\n\t*/\n\tJSM.TriangleModel.prototype.GetDefaultMaterialIndex = function ()\n\t{\n\t\treturn this.AddDefaultMaterial ();\n\t};\n\n\t/**\n\t* Function: TriangleModel.MaterialCount\n\t* Description: Returns the material count of the model.\n\t* Returns:\n\t*\t{integer} the result\n\t*/\n\tJSM.TriangleModel.prototype.MaterialCount = function ()\n\t{\n\t\treturn this.materials.length;\n\t};\n\n\t/**\n\t* Function: TriangleModel.AddBody\n\t* Description: Adds a body to the model.\n\t* Parameters:\n\t*\tbody {TriangleBody} the body\n\t* Returns:\n\t*\t{integer} the index of the added body\n\t*/\n\tJSM.TriangleModel.prototype.AddBody = function (body)\n\t{\n\t\tthis.bodies.push (body);\n\t\treturn this.bodies.length - 1;\n\t};\n\n\t/**\n\t* Function: TriangleModel.AddBodyToIndex\n\t* Description: Adds a body to the model to the given index.\n\t* Parameters:\n\t*\tbody {TriangleBody} the body\n\t*\tindex {integer} the index\n\t* Returns:\n\t*\t{integer} the index of the added body\n\t*/\n\tJSM.TriangleModel.prototype.AddBodyToIndex = function (body, index)\n\t{\n\t\tthis.bodies.splice (index, 0, body);\n\t\treturn index;\n\t};\n\n\t/**\n\t* Function: TriangleModel.GetBody\n\t* Description: Returns the body at the given index.\n\t* Parameters:\n\t*\tindex {integer} the body index\n\t* Returns:\n\t*\t{TriangleBody} the result\n\t*/\n\tJSM.TriangleModel.prototype.GetBody = function (index)\n\t{\n\t\treturn this.bodies[index];\n\t};\n\n\t/**\n\t* Function: TriangleModel.VertexCount\n\t* Description: Returns the vertex count of the model.\n\t* Returns:\n\t*\t{integer} the result\n\t*/\n\tJSM.TriangleModel.prototype.VertexCount = function ()\n\t{\n\t\tvar result = 0;\n\t\tvar i, body;\n\t\tfor (i = 0; i < this.bodies.length; i++) {\n\t\t\tbody = this.bodies[i];\n\t\t\tresult += body.VertexCount ();\n\t\t}\n\t\treturn result;\n\t};\n\n\t/**\n\t* Function: TriangleModel.TriangleCount\n\t* Description: Returns the triangle count of the model.\n\t* Returns:\n\t*\t{integer} the result\n\t*/\n\tJSM.TriangleModel.prototype.TriangleCount = function ()\n\t{\n\t\tvar result = 0;\n\t\tvar i, body;\n\t\tfor (i = 0; i < this.bodies.length; i++) {\n\t\t\tbody = this.bodies[i];\n\t\t\tresult += body.TriangleCount ();\n\t\t}\n\t\treturn result;\n\t};\n\n\t/**\n\t* Function: TriangleModel.BodyCount\n\t* Description: Returns the body count of the model.\n\t* Returns:\n\t*\t{integer} the result\n\t*/\n\tJSM.TriangleModel.prototype.BodyCount = function ()\n\t{\n\t\treturn this.bodies.length;\n\t};\n\n\t/**\n\t* Function: TriangleModel.FinalizeMaterials\n\t* Description:\n\t*\tFinalizes the materials in the model. This fill every not\n\t*\tspecified material parameter with default values.\n\t*/\n\tJSM.TriangleModel.prototype.FinalizeMaterials = function ()\n\t{\n\t\tvar defaultMaterialData = {\n\t\t\tname : 'Default',\n\t\t\tambient : [0.5, 0.5, 0.5],\n\t\t\tdiffuse : [0.5, 0.5, 0.5],\n\t\t\tspecular : [0.1, 0.1, 0.1],\n\t\t\tshininess : 0.0,\n\t\t\topacity : 1.0,\n\t\t\treflection : 0.0,\n\t\t\ttexture : null,\n\t\t\toffset : null,\n\t\t\tscale : null,\n\t\t\trotation : null\n\t\t};\n\t\t\n\t\tvar i, material;\n\t\tfor (i = 0; i < this.materials.length; i++) {\n\t\t\tmaterial = this.materials[i];\n\t\t\tJSM.CopyObjectProperties (defaultMaterialData, material, false);\n\t\t}\n\t};\n\n\t/**\n\t* Function: TriangleModel.FinalizeBodies\n\t* Description: Finalizes all body in the model.\n\t*/\n\tJSM.TriangleModel.prototype.FinalizeBodies = function ()\n\t{\n\t\tvar i, body;\n\t\tfor (i = 0; i < this.bodies.length; i++) {\n\t\t\tbody = this.bodies[i];\n\t\t\tbody.Finalize (this);\n\t\t}\n\t};\n\n\t/**\n\t* Function: TriangleModel.Finalize\n\t* Description: Finalizes the model. It finalizes materials and bodies.\n\t*/\n\tJSM.TriangleModel.prototype.Finalize = function ()\n\t{\n\t\tthis.FinalizeBodies ();\n\t\tthis.FinalizeMaterials ();\n\t};\n\n\treturn JSM;\n});\n"]}