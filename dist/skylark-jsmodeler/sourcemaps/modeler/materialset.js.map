{"version":3,"sources":["modeler/materialset.js"],"names":["define","JSM","MaterialSet","this","materials","defaultMaterial","Material","prototype","AddMaterial","material","push","length","GetMaterial","index","GetDefaultMaterial","Count"],"mappings":";;;;;;;AAAAA,QAAQ,eAAe,SAASC,GA+D/B,OA1DAA,EAAIC,YAAc,WAEjBC,KAAKC,aACLD,KAAKE,gBAAkB,IAAIJ,EAAIK,UAWhCL,EAAIC,YAAYK,UAAUC,YAAc,SAAUC,GAGjD,OADAN,KAAKC,UAAUM,KAAMD,GACdN,KAAKC,UAAUO,OAAS,GAWhCV,EAAIC,YAAYK,UAAUK,YAAc,SAAUC,GAEjD,OAAIA,EAAQ,GAAKA,GAASV,KAAKC,UAAUO,OACjCR,KAAKE,gBAENF,KAAKC,UAAUS,IASvBZ,EAAIC,YAAYK,UAAUO,mBAAqB,WAE9C,OAAOX,KAAKE,iBASbJ,EAAIC,YAAYK,UAAUQ,MAAQ,WAEjC,OAAOZ,KAAKC,UAAUO,QAGhBV","file":"../../modeler/materialset.js","sourcesContent":["define([\"../core/jsm\"],function(JSM){\n\t/**\n\t* Class: MaterialSet\n\t* Description: Defines a material container.\n\t*/\n\tJSM.MaterialSet = function ()\n\t{\n\t\tthis.materials = [];\n\t\tthis.defaultMaterial = new JSM.Material ();\n\t};\n\n\t/**\n\t* Function: MaterialSet.AddMaterial\n\t* Description: Adds a material to the container.\n\t* Parameters:\n\t*\tmaterial {Material} the material\n\t* Returns:\n\t*\t{integer} the index of the newly added material\n\t*/\n\tJSM.MaterialSet.prototype.AddMaterial = function (material)\n\t{\n\t\tthis.materials.push (material);\n\t\treturn this.materials.length - 1;\n\t};\n\n\t/**\n\t* Function: MaterialSet.GetMaterial\n\t* Description: Returns a material from the container.\n\t* Parameters:\n\t*\tindex {integer} the index\n\t* Returns:\n\t*\t{Material} the result\n\t*/\n\tJSM.MaterialSet.prototype.GetMaterial = function (index)\n\t{\n\t\tif (index < 0 || index >= this.materials.length) {\n\t\t\treturn this.defaultMaterial;\n\t\t}\n\t\treturn this.materials[index];\n\t};\n\n\t/**\n\t* Function: MaterialSet.GetDefaultMaterial\n\t* Description: Returns the default material from the container. It is always exists.\n\t* Returns:\n\t*\t{Material} the result\n\t*/\n\tJSM.MaterialSet.prototype.GetDefaultMaterial = function ()\n\t{\n\t\treturn this.defaultMaterial;\n\t};\n\n\t/**\n\t* Function: MaterialSet.Count\n\t* Description: Returns the material count of the container.\n\t* Returns:\n\t*\t{integer} the result\n\t*/\n\tJSM.MaterialSet.prototype.Count = function ()\n\t{\n\t\treturn this.materials.length;\n\t};\n\n\treturn JSM;\n});\n"]}