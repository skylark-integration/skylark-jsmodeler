{"version":3,"sources":["import/importercommon.js"],"names":["define","JSM","ImportFileList","this","descriptors","isFile","prototype","InitFromFiles","fileList","i","file","descriptor","length","originalObject","originalFileName","name","fileName","toUpperCase","extension","GetFileExtension","push","InitFromURLs","urlList","url","GetFileName","GetInputList","IsArrayBuffer","inputListElem","result","isArrayBuffer","fullFileName","splitted","split","decodeURI","GetFileDescriptor","index","GetMainFileIndex","IsSupportedExtension","GetFileIndexByName","currentFileName","lastPoint","lastIndexOf","substr","ConvertImportFileListToJsonData","importFileList","callbacks","OnError","undefined","onError","OnReady","fileNames","jsonData","onReady","FileRequested","resultBuffers","requestedFileIndex","missing","requested","indexOf","mainFileIndex","mainFile","main","inputList","LoadMultipleBuffers","mainFileBuffer","Convert3dsToJsonData","onFileRequested","ConvertObjToJsonData","IsBinaryStlFile","ConvertStlToJsonData","ConvertOffToJsonData","exception","ConvertFileListToJsonData","ConvertURLListToJsonData"],"mappings":"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","file":"../../import/importercommon.js","sourcesContent":["define([\"../core/jsm\"],function(JSM){\n\tJSM.ImportFileList = function ()\n\t{\n\t\tthis.descriptors = null;\n\t\tthis.isFile = null;\n\t};\n\n\tJSM.ImportFileList.prototype.InitFromFiles = function (fileList)\n\t{\n\t\tthis.descriptors = [];\n\t\tvar i, file, descriptor;\n\t\tfor (i = 0; i < fileList.length; i++) {\n\t\t\tfile = fileList[i];\n\t\t\tdescriptor = {\n\t\t\t\toriginalObject : file,\n\t\t\t\toriginalFileName : file.name,\n\t\t\t\tfileName : file.name.toUpperCase (),\n\t\t\t\textension : this.GetFileExtension (file.name).toUpperCase ()\n\t\t\t};\n\t\t\tthis.descriptors.push (descriptor);\n\t\t}\n\t\tthis.isFile = true;\n\t};\n\n\tJSM.ImportFileList.prototype.InitFromURLs = function (urlList)\n\t{\n\t\tthis.descriptors = [];\n\t\tvar i, url, fileName, descriptor;\n\t\tfor (i = 0; i < urlList.length; i++) {\n\t\t\turl = urlList[i];\n\t\t\tfileName = this.GetFileName (url);\n\t\t\tdescriptor = {\n\t\t\t\toriginalObject : url,\n\t\t\t\toriginalFileName : fileName,\n\t\t\t\tfileName : fileName.toUpperCase (),\n\t\t\t\textension : this.GetFileExtension (fileName).toUpperCase ()\n\t\t\t};\n\t\t\tthis.descriptors.push (descriptor);\n\t\t}\n\t\tthis.isFile = false;\n\t};\n\n\tJSM.ImportFileList.prototype.GetInputList = function ()\n\t{\n\t\tfunction IsArrayBuffer (descriptor)\n\t\t{\n\t\t\tif (descriptor.extension == '.OBJ' || descriptor.extension == '.MTL' || descriptor.extension == '.OFF') {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\treturn true;\n\t\t}\n\n\t\tvar result = [];\n\t\tvar i, descriptor, inputListElem;\n\t\tfor (i = 0; i < this.descriptors.length; i++) {\n\t\t\tdescriptor = this.descriptors[i];\n\t\t\tinputListElem = {\n\t\t\t\toriginalObject : descriptor.originalObject,\n\t\t\t\tisFile : this.isFile,\n\t\t\t\tisArrayBuffer : IsArrayBuffer (descriptor)\n\t\t\t};\n\t\t\tresult.push (inputListElem);\n\t\t}\n\t\treturn result;\n\t};\n\n\tJSM.ImportFileList.prototype.GetFileName = function (fullFileName)\n\t{\n\t\tvar splitted = fullFileName.split ('/');\n\t\tif (splitted.length == 1) {\n\t\t\tsplitted = fullFileName.split ('\\\\');\n\t\t}\n\t\tif (splitted.length === 0) {\n\t\t\treturn '';\n\t\t}\n\t\tvar fileName = splitted[splitted.length - 1];\n\t\treturn decodeURI (fileName);\n\t};\n\n\tJSM.ImportFileList.prototype.GetFileDescriptor = function (index)\n\t{\n\t\treturn this.descriptors[index];\n\t};\n\n\tJSM.ImportFileList.prototype.GetMainFileIndex = function ()\n\t{\n\t\tvar i, descriptor;\n\t\tfor (i = 0; i < this.descriptors.length; i++) {\n\t\t\tdescriptor = this.descriptors[i];\n\t\t\tif (this.IsSupportedExtension (descriptor.extension)) {\n\t\t\t\treturn i;\n\t\t\t}\n\t\t}\n\t\treturn -1;\n\t};\n\n\tJSM.ImportFileList.prototype.GetFileIndexByName = function (fileName)\n\t{\n\t\tvar i, descriptor, currentFileName;\n\t\tfor (i = 0; i < this.descriptors.length; i++) {\n\t\t\tdescriptor = this.descriptors[i];\n\t\t\tcurrentFileName = this.GetFileName (fileName);\n\t\t\tif (descriptor.fileName == currentFileName.toUpperCase ()) {\n\t\t\t\treturn i;\n\t\t\t}\n\t\t}\n\t\treturn -1;\n\t};\n\n\tJSM.ImportFileList.prototype.IsSupportedExtension = function (extension)\n\t{\n\t\tif (extension == '.3DS' || extension == '.OBJ' || extension == '.STL' || extension == '.OFF') {\n\t\t\treturn true;\n\t\t}\n\t\treturn false;\n\t};\n\n\tJSM.ImportFileList.prototype.GetFileExtension = function (fileName)\n\t{\n\t\tvar lastPoint = fileName.lastIndexOf ('.');\n\t\tif (lastPoint == -1) {\n\t\t\treturn '';\n\t\t}\n\t\tvar extension = fileName.substr (lastPoint);\n\t\treturn extension;\n\t};\n\n\tJSM.ConvertImportFileListToJsonData = function (importFileList, callbacks)\n\t{\n\t\tfunction OnError ()\n\t\t{\n\t\t\tif (callbacks.onError !== undefined && callbacks.onError !== null) {\n\t\t\t\tcallbacks.onError ();\n\t\t\t}\n\t\t}\n\n\t\tfunction OnReady (fileNames, jsonData)\n\t\t{\n\t\t\tif (callbacks.onReady !== undefined && callbacks.onReady !== null) {\n\t\t\t\tcallbacks.onReady (fileNames, jsonData);\n\t\t\t}\n\t\t}\n\t\t\n\t\tfunction FileRequested (importFileList, resultBuffers, fileName, fileNames)\n\t\t{\n\t\t\tvar requestedFileIndex = importFileList.GetFileIndexByName (fileName);\n\t\t\tvar currentFileName = importFileList.GetFileName (fileName);\n\t\t\tif (requestedFileIndex == -1) {\n\t\t\t\tfileNames.missing.push (currentFileName);\n\t\t\t\treturn null;\n\t\t\t}\n\t\t\tif (fileNames.requested.indexOf (currentFileName) == -1) {\n\t\t\t\tfileNames.requested.push (currentFileName);\n\t\t\t}\n\t\t\treturn resultBuffers[requestedFileIndex];\t\n\t\t}\n\t\t\n\t\tvar mainFileIndex = importFileList.GetMainFileIndex ();\n\t\tif (mainFileIndex === -1) {\n\t\t\tOnError ();\n\t\t\treturn;\n\t\t}\n\t\t\n\t\tvar mainFile = importFileList.GetFileDescriptor (mainFileIndex);\n\t\tvar fileNames = {\n\t\t\tmain : mainFile.originalFileName,\n\t\t\trequested : [],\n\t\t\tmissing : []\n\t\t};\n\n\t\tvar inputList = importFileList.GetInputList ();\n\t\ttry {\n\t\t\tif (mainFile.extension == '.3DS') {\n\t\t\t\tJSM.LoadMultipleBuffers (inputList, function (resultBuffers) {\n\t\t\t\t\tvar mainFileBuffer = resultBuffers[mainFileIndex];\n\t\t\t\t\tif (mainFileBuffer === null) {\n\t\t\t\t\t\tOnError ();\n\t\t\t\t\t} else {\n\t\t\t\t\t\tvar jsonData = JSM.Convert3dsToJsonData (mainFileBuffer, {\n\t\t\t\t\t\t\tonFileRequested : function (fileName) {\n\t\t\t\t\t\t\t\treturn FileRequested (importFileList, resultBuffers, fileName, fileNames);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t});\n\t\t\t\t\t\tOnReady (fileNames, jsonData);\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t} else if (mainFile.extension == '.OBJ') {\n\t\t\t\tJSM.LoadMultipleBuffers (inputList, function (resultBuffers) {\n\t\t\t\t\tvar mainFileBuffer = resultBuffers[mainFileIndex];\n\t\t\t\t\tif (mainFileBuffer === null) {\n\t\t\t\t\t\tOnError ();\n\t\t\t\t\t} else {\n\t\t\t\t\t\tvar jsonData = JSM.ConvertObjToJsonData (mainFileBuffer, {\n\t\t\t\t\t\t\tonFileRequested : function (fileName) {\n\t\t\t\t\t\t\t\treturn FileRequested (importFileList, resultBuffers, fileName, fileNames);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t});\n\t\t\t\t\t\tOnReady (fileNames, jsonData);\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t} else if (mainFile.extension == '.STL') {\n\t\t\t\tJSM.LoadMultipleBuffers (inputList, function (resultBuffers) {\n\t\t\t\t\tvar mainFileBuffer = resultBuffers[mainFileIndex];\n\t\t\t\t\tif (mainFileBuffer === null) {\n\t\t\t\t\t\tOnError ();\n\t\t\t\t\t} else {\n\t\t\t\t\t\tif (JSM.IsBinaryStlFile (mainFileBuffer)) {\n\t\t\t\t\t\t\tvar jsonData = JSM.ConvertStlToJsonData (mainFileBuffer, null);\n\t\t\t\t\t\t\tOnReady (fileNames, jsonData);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tvar i;\n\t\t\t\t\t\t\tfor (i = 0; i < inputList.length; i++) {\n\t\t\t\t\t\t\t\tinputList[i].isArrayBuffer = false;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tJSM.LoadMultipleBuffers (inputList, function (resultBuffers) {\n\t\t\t\t\t\t\t\tvar mainFileBuffer = resultBuffers[mainFileIndex];\n\t\t\t\t\t\t\t\tif (mainFileBuffer === null) {\n\t\t\t\t\t\t\t\t\tOnError ();\n\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\tvar jsonData = JSM.ConvertStlToJsonData (null, mainFileBuffer);\n\t\t\t\t\t\t\t\t\tOnReady (fileNames, jsonData);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t} else if (mainFile.extension == '.OFF') {\n\t\t\t\tJSM.LoadMultipleBuffers (inputList, function (resultBuffers) {\n\t\t\t\t\tvar mainFileBuffer = resultBuffers[mainFileIndex];\n\t\t\t\t\tif (mainFileBuffer === null) {\n\t\t\t\t\t\tOnError ();\n\t\t\t\t\t} else {\n\t\t\t\t\t\tvar jsonData = JSM.ConvertOffToJsonData (mainFileBuffer);\n\t\t\t\t\t\tOnReady (fileNames, jsonData);\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\t\t} catch (exception) {\n\t\t\tOnError ();\n\t\t\treturn;\n\t\t}\n\t};\n\n\tJSM.ConvertFileListToJsonData = function (fileList, callbacks)\n\t{\n\t\tvar importFileList = new JSM.ImportFileList ();\n\t\timportFileList.InitFromFiles (fileList);\n\t\tJSM.ConvertImportFileListToJsonData (importFileList, callbacks);\n\t};\n\n\tJSM.ConvertURLListToJsonData = function (urlList, callbacks)\n\t{\n\t\tvar importFileList = new JSM.ImportFileList ();\n\t\timportFileList.InitFromURLs (urlList);\n\t\tJSM.ConvertImportFileListToJsonData (importFileList, callbacks);\n\t};\n\n\treturn JSM;\n});\n"]}