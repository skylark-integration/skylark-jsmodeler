{"version":3,"sources":["import/importerutils.js"],"names":["define","JSM","GetArrayBufferFromURL","url","callbacks","request","XMLHttpRequest","open","responseType","onload","arrayBuffer","response","onReady","onerror","onError","send","GetArrayBufferFromFile","file","reader","FileReader","onloadend","event","target","readyState","DONE","result","readAsArrayBuffer","GetStringBufferFromURL","stringBuffer","GetStringBufferFromFile","readAsText","LoadMultipleBuffers","inputList","LoadMultipleBuffersInternal","index","length","currentInput","isFile","isArrayBuffer","originalObject","resultBuffer","push"],"mappings":";;;;;;;AAAAA,QAAQ,eAAe,SAASC,GA8H/B,OA7HAA,EAAIC,sBAAwB,SAAUC,EAAKC,GAE1C,IAAIC,EAAU,IAAIC,eAClBD,EAAQE,KAAM,MAAOJ,GAAK,GAC1BE,EAAQG,aAAe,cAEvBH,EAAQI,OAAS,WAChB,IAAIC,EAAcL,EAAQM,SACtBD,GAAeN,EAAUQ,SAC5BR,EAAUQ,QAASF,IAIrBL,EAAQQ,QAAU,WACbT,EAAUU,SACbV,EAAUU,WAIZT,EAAQU,KAAM,OAGfd,EAAIe,uBAAyB,SAAUC,EAAMb,GAE5C,IAAIc,EAAS,IAAIC,WAEjBD,EAAOE,UAAY,SAAUC,GACxBA,EAAMC,OAAOC,YAAcJ,WAAWK,MAAQpB,EAAUQ,SAC3DR,EAAUQ,QAASS,EAAMC,OAAOG,SAIlCP,EAAOL,QAAU,WACZT,EAAUU,SACbV,EAAUU,WAIZI,EAAOQ,kBAAmBT,IAG3BhB,EAAI0B,uBAAyB,SAAUxB,EAAKC,GAE3C,IAAIC,EAAU,IAAIC,eAClBD,EAAQE,KAAM,MAAOJ,GAAK,GAC1BE,EAAQG,aAAe,OAEvBH,EAAQI,OAAS,WAChB,IAAImB,EAAevB,EAAQM,SACvBiB,GAAgBxB,EAAUQ,SAC7BR,EAAUQ,QAASgB,IAIrBvB,EAAQQ,QAAU,WACbT,EAAUU,SACbV,EAAUU,WAIZT,EAAQU,KAAM,OAGfd,EAAI4B,wBAA0B,SAAUZ,EAAMb,GAE7C,IAAIc,EAAS,IAAIC,WAEjBD,EAAOE,UAAY,SAAUC,GACxBA,EAAMC,OAAOC,YAAcJ,WAAWK,MAAQpB,EAAUQ,SAC3DR,EAAUQ,QAASS,EAAMC,OAAOG,SAIlCP,EAAOL,QAAU,WACZT,EAAUU,SACbV,EAAUU,WAIZI,EAAOY,WAAYb,IAGpBhB,EAAI8B,oBAAsB,SAAUC,EAAWpB,IAE9C,SAASqB,EAA6BD,EAAWE,EAAOT,EAAQb,GAE/D,GAAIsB,GAASF,EAAUG,OACtBvB,EAASa,OADV,CAKA,IAAIW,EAAeJ,EAAUE,IAEzBE,EAAaC,OACZD,EAAaE,cACCrC,EAAIe,uBAEJf,EAAI4B,wBAGlBO,EAAaE,cACCrC,EAAIC,sBAEJD,EAAI0B,wBAIPS,EAAaG,gBAC5B3B,QAAU,SAAU4B,GACnBf,EAAOgB,KAAMD,GACbP,EAA6BD,EAAWE,EAAQ,EAAGT,EAAQb,IAE5DE,QAAU,WACTW,EAAOgB,KAAM,MACbR,EAA6BD,EAAWE,EAAQ,EAAGT,EAAQb,OAM9DqB,CAA6BD,EAAW,KAAW,SAAUP,GAC5Db,EAASa,MAIJxB","file":"../../import/importerutils.js","sourcesContent":["define([\"../core/jsm\"],function(JSM){\n\tJSM.GetArrayBufferFromURL = function (url, callbacks)\n\t{\n\t\tvar request = new XMLHttpRequest ();\n\t\trequest.open ('GET', url, true);\n\t\trequest.responseType = 'arraybuffer';\n\n\t\trequest.onload = function () {\n\t\t\tvar arrayBuffer = request.response;\n\t\t\tif (arrayBuffer && callbacks.onReady) {\n\t\t\t\tcallbacks.onReady (arrayBuffer);\n\t\t\t}\n\t\t};\n\t\t\n\t\trequest.onerror = function () {\n\t\t\tif (callbacks.onError) {\n\t\t\t\tcallbacks.onError ();\n\t\t\t}\n\t\t};\n\n\t\trequest.send (null);\n\t};\n\n\tJSM.GetArrayBufferFromFile = function (file, callbacks)\n\t{\n\t\tvar reader = new FileReader ();\n\n\t\treader.onloadend = function (event) {\n\t\t\tif (event.target.readyState == FileReader.DONE && callbacks.onReady) {\n\t\t\t\tcallbacks.onReady (event.target.result);\n\t\t\t}\n\t\t};\n\t\t\n\t\treader.onerror = function () {\n\t\t\tif (callbacks.onError) {\n\t\t\t\tcallbacks.onError ();\n\t\t\t}\n\t\t};\n\n\t\treader.readAsArrayBuffer (file);\n\t};\n\n\tJSM.GetStringBufferFromURL = function (url, callbacks)\n\t{\n\t\tvar request = new XMLHttpRequest ();\n\t\trequest.open ('GET', url, true);\n\t\trequest.responseType = 'text';\n\n\t\trequest.onload = function () {\n\t\t\tvar stringBuffer = request.response;\n\t\t\tif (stringBuffer && callbacks.onReady) {\n\t\t\t\tcallbacks.onReady (stringBuffer);\n\t\t\t}\n\t\t};\n\t\t\n\t\trequest.onerror = function () {\n\t\t\tif (callbacks.onError) {\n\t\t\t\tcallbacks.onError ();\n\t\t\t}\n\t\t};\n\n\t\trequest.send (null);\n\t};\n\n\tJSM.GetStringBufferFromFile = function (file, callbacks)\n\t{\n\t\tvar reader = new FileReader ();\n\n\t\treader.onloadend = function (event) {\n\t\t\tif (event.target.readyState == FileReader.DONE && callbacks.onReady) {\n\t\t\t\tcallbacks.onReady (event.target.result);\n\t\t\t}\n\t\t};\n\n\t\treader.onerror = function () {\n\t\t\tif (callbacks.onError) {\n\t\t\t\tcallbacks.onError ();\n\t\t\t}\n\t\t};\t\n\t\t\n\t\treader.readAsText (file);\n\t};\n\n\tJSM.LoadMultipleBuffers = function (inputList, onReady)\n\t{\n\t\tfunction LoadMultipleBuffersInternal (inputList, index, result, onReady)\n\t\t{\n\t\t\tif (index >= inputList.length) {\n\t\t\t\tonReady (result);\n\t\t\t\treturn;\n\t\t\t}\n\t\t\t\n\t\t\tvar currentInput = inputList[index];\n\t\t\tvar loaderFunction = null;\n\t\t\tif (currentInput.isFile) {\n\t\t\t\tif (currentInput.isArrayBuffer) {\n\t\t\t\t\tloaderFunction = JSM.GetArrayBufferFromFile;\n\t\t\t\t} else {\n\t\t\t\t\tloaderFunction = JSM.GetStringBufferFromFile;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tif (currentInput.isArrayBuffer) {\n\t\t\t\t\tloaderFunction = JSM.GetArrayBufferFromURL;\n\t\t\t\t} else {\n\t\t\t\t\tloaderFunction = JSM.GetStringBufferFromURL;\n\t\t\t\t}\n\t\t\t}\n\t\t\t\n\t\t\tloaderFunction (currentInput.originalObject, {\n\t\t\t\tonReady : function (resultBuffer) {\n\t\t\t\t\tresult.push (resultBuffer);\n\t\t\t\t\tLoadMultipleBuffersInternal (inputList, index + 1, result, onReady);\n\t\t\t\t},\n\t\t\t\tonError : function () {\n\t\t\t\t\tresult.push (null);\n\t\t\t\t\tLoadMultipleBuffersInternal (inputList, index + 1, result, onReady);\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\n\t\tvar result = [];\n\t\tLoadMultipleBuffersInternal (inputList, 0, result, function (result) {\n\t\t\tonReady (result);\n\t\t});\n\t};\n\n\treturn JSM;\n});\n"]}