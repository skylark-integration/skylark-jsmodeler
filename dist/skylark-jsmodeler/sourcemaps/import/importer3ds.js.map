{"version":3,"sources":["import/importer3ds.js"],"names":["define","JSM","Read3dsFile","arrayBuffer","callbacks","OnLog","logText","logLevel","undefined","onLog","OnVertex","x","y","z","onVertex","OnTextureVertex","onTextureVertex","OnFace","v0","v1","v2","flags","onFace","OnFaceMaterial","faceIndex","materialName","onFaceMaterial","OnFaceSmoothingGroup","smoothingGroup","onFaceSmoothingGroup","ReadChunk","reader","onReady","ReadUnsignedInteger16","ReadUnsignedInteger32","SkipChunk","length","Skip","GetChunkEnd","GetPosition","ReadName","name","letter","count","ReadCharacter","String","fromCharCode","ReadVector","i","result","ReadFloat32","ReadChunks","endByte","chunks","ReadColorChunk","id","color","hasLinColor","chunkId","chunkLength","MAT_COLOR","ReadUnsignedCharacter","MAT_LIN_COLOR","MAT_COLOR_F","MAT_LIN_COLOR_F","ReadPercentageChunk","percentage","PERCENTAGE","PERCENTAGE_F","ReadMaterialChunk","toString","material","MAT_NAME","MAT_AMBIENT","ambient","MAT_DIFFUSE","diffuse","MAT_SPECULAR","specular","MAT_SHININESS","shininess","MAT_SHININESS_STRENGTH","shininessStrength","MAT_TRANSPARENCY","transparency","MAT_TEXMAP","texture","offset","scale","rotation","MAT_TEXMAP_NAME","MAT_TEXMAP_UOFFSET","MAT_TEXMAP_VOFFSET","MAT_TEXMAP_USCALE","MAT_TEXMAP_VSCALE","MAT_TEXMAP_ROTATION","ReadTextureMapChunk","onMaterial","OnMaterial","ReadFacesChunk","faceCount","TRI_MATERIAL","ReadFaceMaterialsChunk","TRI_SMOOTH","ReadFaceSmoothingGroupsChunk","ReadTransformationChunk","j","matrix","push","onTransformation","OnTransformation","ReadMeshChunk","objectName","onMesh","OnMesh","TRI_VERTEX","vertexCount","ReadVerticesChunk","TRI_TEXVERTEX","texVertexCount","ReadTextureVerticesChunk","TRI_FACE","TRI_TRANSFORMATION","ReadObjectChunk","OBJ_TRIMESH","OBJ_LIGHT","ReadLightChunk","OBJ_CAMERA","ReadCameraChunk","ReadObjectNodeChunk","ReadTrackVector","type","current","tmp","keyNum","ReadInteger32","OBJECT_ROTATION","objectNode","nodeId","userId","pivot","positions","rotations","scales","OBJECT_HIERARCHY","OBJECT_PIVOT","OBJECT_POSITION","OBJECT_SCALE","OBJECT_ID","onObjectNode","OnObjectNode","ReadMainChunk","EDIT3DS","EDIT_MATERIAL","EDIT_OBJECT","ReadEditorChunk","KF3DS","OBJECT_NODE","ReadKeyFrameChunk","GetByteLength","MAIN3DS","ReadFile","BinaryReader","Convert3dsToJsonData","OnFileRequested","fileName","onFileRequested","triangleModel","TriangleModel","currentBody","materialNameToIndex","bodyNameToIndex","nodeHierarcy","nodes","nodeIdToIndex","index","AddMaterial","opacity","currentMaterial","GetMaterial","textureBuffer","blob","window","Blob","blobURL","URL","createObjectURL","meshName","AddBody","TriangleBody","GetBody","meshData","faceToMaterial","faceToSmoothingGroup","objectNodes","transformation","nodeIndex","bodyIndex","AddVertex","AddUV","AddTriangle","ApplyTransformation","body","node","MatrixScale","MatrixTranslate","translation","TransformBodyVertices","vertex","transformedVertex","VertexCount","GetVertex","SetVertex","mesh","currentMeshData","meshTransformation","nodeTransformation","GetNodeTransformation","quaternion","MatrixIdentity","GetNodePosition","quat","Math","sqrt","IsPositive","omega","si","sin","cos","GetQuatFromAxisAndAngle","GetNodeRotation","MatrixRotationQuaternion","MatrixMultiply","GetNodeScale","parentIndex","parentTransformation","MatrixClone","meshMatrix","invMeshMatrix","MatrixInvert","invMatrix","determinant","MatrixDeterminant","IsNegative","flippedMatrix","FlipByXCoordinates","nodePivotPoint","GetNodePivotPoint","FinalizeMesh","triangle","materialIndex","hasTextureCoordinates","UVCount","TriangleCount","GetTriangle","u0","u1","u2","mat","curve","FinalizeMaterials","currentNode","firstNode","addedBody","model","instanceIndex","clonedBody","BodyCount","Clone","SetName","GetName","AddBodyToIndex","FinalizeMeshes","Finalize","ConvertTriangleModelToJsonData"],"mappings":"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","file":"../../import/importer3ds.js","sourcesContent":["define([\"../core/jsm\"],function(JSM){\n\tJSM.Read3dsFile = function (arrayBuffer, callbacks)\n\t{\n\t\tfunction OnLog (logText, logLevel)\n\t\t{\n\t\t\tif (callbacks.onLog !== undefined && callbacks.onLog !== null) {\n\t\t\t\tcallbacks.onLog (logText, logLevel);\n\t\t\t}\n\t\t}\n\n\t\tfunction OnMaterial (material)\n\t\t{\n\t\t\tif (callbacks.onMaterial !== undefined && callbacks.onMaterial !== null) {\n\t\t\t\tcallbacks.onMaterial (material);\n\t\t\t}\n\t\t}\n\n\t\tfunction OnMesh (objectName)\n\t\t{\n\t\t\tif (callbacks.onMesh !== undefined && callbacks.onMesh !== null) {\n\t\t\t\tcallbacks.onMesh (objectName);\n\t\t\t}\n\t\t}\n\n\t\tfunction OnTransformation (matrix)\n\t\t{\n\t\t\tif (callbacks.onTransformation !== undefined && callbacks.onTransformation !== null) {\n\t\t\t\tcallbacks.onTransformation (matrix);\n\t\t\t}\n\t\t}\n\t\t\n\t\tfunction OnObjectNode (objectNode)\n\t\t{\n\t\t\tif (callbacks.onObjectNode !== undefined && callbacks.onObjectNode !== null) {\n\t\t\t\tcallbacks.onObjectNode (objectNode);\n\t\t\t}\n\t\t}\n\n\t\tfunction OnVertex (x, y, z)\n\t\t{\n\t\t\tif (callbacks.onVertex !== undefined && callbacks.onVertex !== null) {\n\t\t\t\tcallbacks.onVertex (x, y, z);\n\t\t\t}\n\t\t}\n\n\t\tfunction OnTextureVertex (x, y)\n\t\t{\n\t\t\tif (callbacks.onTextureVertex !== undefined && callbacks.onTextureVertex !== null) {\n\t\t\t\tcallbacks.onTextureVertex (x, y);\n\t\t\t}\n\t\t}\n\n\t\tfunction OnFace (v0, v1, v2, flags)\n\t\t{\n\t\t\tif (callbacks.onFace !== undefined && callbacks.onFace !== null) {\n\t\t\t\tcallbacks.onFace (v0, v1, v2, flags);\n\t\t\t}\n\t\t}\n\n\t\tfunction OnFaceMaterial (faceIndex, materialName)\n\t\t{\n\t\t\tif (callbacks.onFaceMaterial !== undefined && callbacks.onFaceMaterial !== null) {\n\t\t\t\tcallbacks.onFaceMaterial (faceIndex, materialName);\n\t\t\t}\n\t\t}\n\n\t\tfunction OnFaceSmoothingGroup (faceIndex, smoothingGroup)\n\t\t{\n\t\t\tif (callbacks.onFaceSmoothingGroup !== undefined && callbacks.onFaceSmoothingGroup !== null) {\n\t\t\t\tcallbacks.onFaceSmoothingGroup (faceIndex, smoothingGroup);\n\t\t\t}\n\t\t}\n\n\t\tfunction ReadChunk (reader, onReady)\n\t\t{\n\t\t\tvar chunkId = reader.ReadUnsignedInteger16 ();\n\t\t\tvar chunkLength = reader.ReadUnsignedInteger32 ();\n\t\t\tonReady (chunkId, chunkLength);\n\t\t}\n\t\t\n\t\tfunction SkipChunk (reader, length)\n\t\t{\n\t\t\treader.Skip (length - 6);\n\t\t}\n\t\t\n\t\tfunction GetChunkEnd (reader, length)\n\t\t{\n\t\t\treturn reader.GetPosition () + length - 6;\n\t\t}\n\t\t\n\t\tfunction ReadName (reader)\n\t\t{\n\t\t\tvar name = '';\n\t\t\tvar letter = 0;\n\t\t\tvar count = 0;\n\t\t\twhile (count < 64) {\n\t\t\t\tletter = reader.ReadCharacter ();\n\t\t\t\tif (letter === 0) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tname = name + String.fromCharCode (letter);\n\t\t\t\tcount = count + 1;\n\t\t\t}\n\t\t\treturn name;\n\t\t}\n\n\t\tfunction ReadVector (reader)\n\t\t{\n\t\t\tvar result = [];\n\t\t\tvar i;\n\t\t\tfor (i = 0; i < 3; i++) {\n\t\t\t\tresult[i] = reader.ReadFloat32 ();\n\t\t\t}\n\t\t\treturn result;\n\t\t}\n\n\t\tfunction ReadChunks (reader, endByte, onReady)\n\t\t{\n\t\t\twhile (reader.GetPosition () <= endByte - 6) {\n\t\t\t\tReadChunk (reader, onReady);\n\t\t\t}\n\t\t}\n\n\t\tfunction ReadFile (reader, chunks)\n\t\t{\n\t\t\tfunction ReadColorChunk (reader, id, length)\n\t\t\t{\n\t\t\t\tvar color = [0.0, 0.0, 0.0];\n\t\t\t\tvar endByte = GetChunkEnd (reader, length);\n\t\t\t\tvar hasLinColor = false;\n\t\t\t\tReadChunks (reader, endByte, function (chunkId, chunkLength) {\n\t\t\t\t\tif (chunkId == chunks.MAT_COLOR) {\n\t\t\t\t\t\tif (!hasLinColor) {\n\t\t\t\t\t\t\tcolor[0] = reader.ReadUnsignedCharacter () / 255.0;\n\t\t\t\t\t\t\tcolor[1] = reader.ReadUnsignedCharacter () / 255.0;\n\t\t\t\t\t\t\tcolor[2] = reader.ReadUnsignedCharacter () / 255.0;\n\t\t\t\t\t\t}\n\t\t\t\t\t} else if (chunkId == chunks.MAT_LIN_COLOR) {\n\t\t\t\t\t\tcolor[0] = reader.ReadUnsignedCharacter () / 255.0;\n\t\t\t\t\t\tcolor[1] = reader.ReadUnsignedCharacter () / 255.0;\n\t\t\t\t\t\tcolor[2] = reader.ReadUnsignedCharacter () / 255.0;\n\t\t\t\t\t\thasLinColor = true;\n\t\t\t\t\t} else if (chunkId == chunks.MAT_COLOR_F) {\n\t\t\t\t\t\tif (!hasLinColor) {\n\t\t\t\t\t\t\tcolor[0] = reader.ReadFloat32 ();\n\t\t\t\t\t\t\tcolor[1] = reader.ReadFloat32 ();\n\t\t\t\t\t\t\tcolor[2] = reader.ReadFloat32 ();\n\t\t\t\t\t\t}\n\t\t\t\t\t} else if (chunkId == chunks.MAT_LIN_COLOR_F) {\n\t\t\t\t\t\tcolor[0] = reader.ReadFloat32 ();\n\t\t\t\t\t\tcolor[1] = reader.ReadFloat32 ();\n\t\t\t\t\t\tcolor[2] = reader.ReadFloat32 ();\n\t\t\t\t\t\thasLinColor = true;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tSkipChunk (reader, chunkLength);\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t\treturn color;\n\t\t\t}\n\t\t\t\n\t\t\tfunction ReadPercentageChunk (reader, id, length)\n\t\t\t{\n\t\t\t\tvar percentage = 0.0;\n\t\t\t\tvar endByte = GetChunkEnd (reader, length);\n\t\t\t\tReadChunks (reader, endByte, function (chunkId, chunkLength) {\n\t\t\t\t\tif (chunkId == chunks.PERCENTAGE) {\n\t\t\t\t\t\tpercentage = reader.ReadUnsignedInteger16 () / 100.0;\n\t\t\t\t\t} else if (chunkId == chunks.PERCENTAGE_F) {\n\t\t\t\t\t\tpercentage = reader.ReadFloat32 ();\n\t\t\t\t\t} else {\n\t\t\t\t\t\tSkipChunk (reader, chunkLength);\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t\treturn percentage;\n\t\t\t}\n\n\t\t\tfunction ReadTextureMapChunk (reader, id, length, material)\n\t\t\t{\n\t\t\t\tmaterial.texture = null;\n\t\t\t\tmaterial.offset = [0.0, 0.0];\n\t\t\t\tmaterial.scale = [1.0, 1.0];\n\t\t\t\tmaterial.rotation = 0.0;\n\t\t\t\n\t\t\t\tvar endByte = GetChunkEnd (reader, length);\n\t\t\t\tReadChunks (reader, endByte, function (chunkId, chunkLength) {\n\t\t\t\t\tif (chunkId == chunks.MAT_TEXMAP_NAME) {\n\t\t\t\t\t\tmaterial.texture = ReadName (reader);\n\t\t\t\t\t} else if (chunkId == chunks.MAT_TEXMAP_UOFFSET) {\n\t\t\t\t\t\tmaterial.offset[0] = reader.ReadFloat32 ();\n\t\t\t\t\t} else if (chunkId == chunks.MAT_TEXMAP_VOFFSET) {\n\t\t\t\t\t\tmaterial.offset[1] = reader.ReadFloat32 ();\n\t\t\t\t\t} else if (chunkId == chunks.MAT_TEXMAP_USCALE) {\n\t\t\t\t\t\tmaterial.scale[0] = reader.ReadFloat32 ();\n\t\t\t\t\t} else if (chunkId == chunks.MAT_TEXMAP_VSCALE) {\n\t\t\t\t\t\tmaterial.scale[1] = reader.ReadFloat32 ();\n\t\t\t\t\t} else if (chunkId == chunks.MAT_TEXMAP_ROTATION) {\n\t\t\t\t\t\tmaterial.rotation = reader.ReadFloat32 ();\n\t\t\t\t\t} else {\n\t\t\t\t\t\tSkipChunk (reader, chunkLength);\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\n\t\t\tfunction ReadMaterialChunk (reader, id, length)\n\t\t\t{\n\t\t\t\tOnLog ('Read material chunk (' + id.toString (16) + ', ' + length + ')', 2);\n\t\t\t\t\n\t\t\t\tvar material = {};\n\t\t\t\tvar endByte = GetChunkEnd (reader, length);\n\t\t\t\tReadChunks (reader, endByte, function (chunkId, chunkLength) {\n\t\t\t\t\tif (chunkId == chunks.MAT_NAME) {\n\t\t\t\t\t\tOnLog ('Read material name chunk (' + id.toString (16) + ', ' + length + ')', 3);\n\t\t\t\t\t\tmaterial.name = ReadName (reader);\n\t\t\t\t\t} else if (chunkId == chunks.MAT_AMBIENT) {\n\t\t\t\t\t\tOnLog ('Read material ambient chunk (' + id.toString (16) + ', ' + length + ')', 3);\n\t\t\t\t\t\tmaterial.ambient = ReadColorChunk (reader, chunkId, chunkLength);\n\t\t\t\t\t} else if (chunkId == chunks.MAT_DIFFUSE) {\n\t\t\t\t\t\tOnLog ('Read material diffuse chunk (' + id.toString (16) + ', ' + length + ')', 3);\n\t\t\t\t\t\tmaterial.diffuse = ReadColorChunk (reader, chunkId, chunkLength);\n\t\t\t\t\t} else if (chunkId == chunks.MAT_SPECULAR) {\n\t\t\t\t\t\tOnLog ('Read material specular chunk (' + id.toString (16) + ', ' + length + ')', 3);\n\t\t\t\t\t\tmaterial.specular = ReadColorChunk (reader, chunkId, chunkLength);\n\t\t\t\t\t} else if (chunkId == chunks.MAT_SHININESS) {\n\t\t\t\t\t\tOnLog ('Read material shininess chunk (' + id.toString (16) + ', ' + length + ')', 3);\n\t\t\t\t\t\tmaterial.shininess = ReadPercentageChunk (reader, chunkId, chunkLength);\n\t\t\t\t\t} else if (chunkId == chunks.MAT_SHININESS_STRENGTH) {\n\t\t\t\t\t\tOnLog ('Read material shininess strength chunk (' + id.toString (16) + ', ' + length + ')', 3);\n\t\t\t\t\t\tmaterial.shininessStrength = ReadPercentageChunk (reader, chunkId, chunkLength);\n\t\t\t\t\t} else if (chunkId == chunks.MAT_TRANSPARENCY) {\n\t\t\t\t\t\tOnLog ('Read material transparency chunk (' + id.toString (16) + ', ' + length + ')', 3);\n\t\t\t\t\t\tmaterial.transparency = ReadPercentageChunk (reader, chunkId, chunkLength);\n\t\t\t\t\t} else if (chunkId == chunks.MAT_TEXMAP) {\n\t\t\t\t\t\tOnLog ('Read material texture map chunk (' + id.toString (16) + ', ' + length + ')', 3);\n\t\t\t\t\t\tReadTextureMapChunk (reader, chunkId, chunkLength, material);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tOnLog ('Skip chunk (' + chunkId.toString (16) + ', ' + chunkLength + ')', 3);\n\t\t\t\t\t\tSkipChunk (reader, chunkLength);\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t\t\n\t\t\t\tOnMaterial (material);\n\t\t\t}\n\n\t\t\tfunction ReadVerticesChunk (reader, id, length)\n\t\t\t{\n\t\t\t\tOnLog ('Read vertices chunk (' + id.toString (16) + ', ' + length + ')', 4);\n\t\t\t\t\n\t\t\t\tvar vertexCount = reader.ReadUnsignedInteger16 ();\n\t\t\t\tvar i, x, y, z;\n\t\t\t\tfor (i = 0; i < vertexCount; i++) {\n\t\t\t\t\tx = reader.ReadFloat32 ();\n\t\t\t\t\ty = reader.ReadFloat32 ();\n\t\t\t\t\tz = reader.ReadFloat32 ();\n\t\t\t\t\tOnVertex (x, y, z);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tfunction ReadTextureVerticesChunk (reader, id, length)\n\t\t\t{\n\t\t\t\tOnLog ('Read texture vertices chunk (' + id.toString (16) + ', ' + length + ')', 4);\n\t\t\t\t\n\t\t\t\tvar texVertexCount = reader.ReadUnsignedInteger16 ();\n\t\t\t\tvar i, x, y;\n\t\t\t\tfor (i = 0; i < texVertexCount; i++) {\n\t\t\t\t\tx = reader.ReadFloat32 ();\n\t\t\t\t\ty = reader.ReadFloat32 ();\n\t\t\t\t\tOnTextureVertex (x, y);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tfunction ReadFaceMaterialsChunk (reader, id, length)\n\t\t\t{\n\t\t\t\tOnLog ('Read face materials chunk (' + id.toString (16) + ', ' + length + ')', 5);\n\t\t\t\t\n\t\t\t\tvar materialName = ReadName (reader);\n\t\t\t\tvar faceCount = reader.ReadUnsignedInteger16 ();\n\t\t\t\tvar i, faceIndex;\n\t\t\t\tfor (i = 0; i < faceCount; i++) {\n\t\t\t\t\tfaceIndex = reader.ReadUnsignedInteger16 ();\n\t\t\t\t\tOnFaceMaterial (faceIndex, materialName);\n\t\t\t\t}\n\t\t\t}\n\t\t\t\n\t\t\tfunction ReadFaceSmoothingGroupsChunk (reader, faceCount, id, length)\n\t\t\t{\n\t\t\t\tOnLog ('Read face smoothing groups chunk (' + id.toString (16) + ', ' + length + ')', 5);\n\t\t\t\t\n\t\t\t\tvar i, smoothingGroup;\n\t\t\t\tfor (i = 0; i < faceCount; i++) {\n\t\t\t\t\tsmoothingGroup = reader.ReadUnsignedInteger32 ();\n\t\t\t\t\tOnFaceSmoothingGroup (i, smoothingGroup);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tfunction ReadFacesChunk (reader, id, length)\n\t\t\t{\n\t\t\t\tOnLog ('Read faces chunk (' + id.toString (16) + ', ' + length + ')', 4);\n\t\t\t\t\n\t\t\t\tvar endByte = GetChunkEnd (reader, length);\n\t\t\t\tvar faceCount = reader.ReadUnsignedInteger16 ();\n\t\t\t\tvar i, v0, v1, v2, flags;\n\t\t\t\tfor (i = 0; i < faceCount; i++) {\n\t\t\t\t\tv0 = reader.ReadUnsignedInteger16 ();\n\t\t\t\t\tv1 = reader.ReadUnsignedInteger16 ();\n\t\t\t\t\tv2 = reader.ReadUnsignedInteger16 ();\n\t\t\t\t\tflags = reader.ReadUnsignedInteger16 ();\n\t\t\t\t\tOnFace (v0, v1, v2, flags);\n\t\t\t\t}\n\n\t\t\t\tReadChunks (reader, endByte, function (chunkId, chunkLength) {\n\t\t\t\t\tif (chunkId == chunks.TRI_MATERIAL) {\n\t\t\t\t\t\tReadFaceMaterialsChunk (reader, chunkId, chunkLength);\n\t\t\t\t\t} else if (chunkId == chunks.TRI_SMOOTH) {\n\t\t\t\t\t\tReadFaceSmoothingGroupsChunk (reader, faceCount,  chunkId, chunkLength);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tOnLog ('Skip chunk (' + chunkId.toString (16) + ', ' + chunkLength + ')', 5);\n\t\t\t\t\t\tSkipChunk (reader, chunkLength);\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\n\t\t\tfunction ReadTransformationChunk (reader, id, length)\n\t\t\t{\n\t\t\t\tOnLog ('Read transformation chunk (' + id.toString (16) + ', ' + length + ')', 4);\n\t\t\t\tvar matrix = [];\n\t\t\t\tvar i, j;\n\t\t\t\tfor (i = 0; i < 4; i++) {\n\t\t\t\t\tfor (j = 0; j < 3; j++) {\n\t\t\t\t\t\tmatrix.push (reader.ReadFloat32 ());\n\t\t\t\t\t}\n\t\t\t\t\tif (i < 3) {\n\t\t\t\t\t\tmatrix.push (0);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tmatrix.push (1);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tOnTransformation (matrix);\n\t\t\t}\n\n\t\t\tfunction ReadMeshChunk (reader, objectName, id, length)\n\t\t\t{\n\t\t\t\tOnLog ('Read mesh chunk (' + objectName + ', ' +  id.toString (16) + ', ' + length + ')', 3);\n\n\t\t\t\tOnMesh (objectName);\n\t\t\t\tvar endByte = GetChunkEnd (reader, length);\n\t\t\t\tReadChunks (reader, endByte, function (chunkId, chunkLength) {\n\t\t\t\t\tif (chunkId == chunks.TRI_VERTEX) {\n\t\t\t\t\t\tReadVerticesChunk (reader, chunkId, chunkLength);\n\t\t\t\t\t} else if (chunkId == chunks.TRI_TEXVERTEX) {\n\t\t\t\t\t\tReadTextureVerticesChunk (reader, chunkId, chunkLength);\n\t\t\t\t\t} else if (chunkId == chunks.TRI_FACE) {\n\t\t\t\t\t\tReadFacesChunk (reader, chunkId, chunkLength);\n\t\t\t\t\t} else if (chunkId == chunks.TRI_TRANSFORMATION) {\n\t\t\t\t\t\tReadTransformationChunk (reader, chunkId, chunkLength);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tOnLog ('Skip chunk (' + chunkId.toString (16) + ', ' + chunkLength + ')', 4);\n\t\t\t\t\t\tSkipChunk (reader, chunkLength);\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\n\t\t\tfunction ReadLightChunk (reader, objectName, id, length)\n\t\t\t{\n\t\t\t\tOnLog ('Skip light chunk (' + objectName + ', ' + id.toString (16) + ', ' + length + ')', 3);\n\t\t\t\tSkipChunk (reader, length);\n\t\t\t}\n\n\t\t\tfunction ReadCameraChunk (reader, objectName, id, length)\n\t\t\t{\n\t\t\t\tOnLog ('Skip camera chunk (' + objectName + ', ' +  id.toString (16) + ', ' + length + ')', 3);\n\t\t\t\tSkipChunk (reader, length);\n\t\t\t}\n\n\t\t\tfunction ReadObjectChunk (reader, id, length)\n\t\t\t{\n\t\t\t\tOnLog ('Read object chunk (' + id.toString (16) + ', ' + length + ')', 2);\n\t\t\t\t\n\t\t\t\tvar endByte = GetChunkEnd (reader, length);\n\t\t\t\tvar objectName = ReadName (reader);\n\t\t\t\tReadChunks (reader, endByte, function (chunkId, chunkLength) {\n\t\t\t\t\tif (chunkId == chunks.OBJ_TRIMESH) {\n\t\t\t\t\t\tReadMeshChunk (reader, objectName, chunkId, chunkLength);\n\t\t\t\t\t} else if (chunkId == chunks.OBJ_LIGHT) {\n\t\t\t\t\t\tReadLightChunk (reader, objectName, chunkId, chunkLength);\n\t\t\t\t\t} else if (chunkId == chunks.OBJ_CAMERA) {\n\t\t\t\t\t\tReadCameraChunk (reader, objectName, chunkId, chunkLength);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tOnLog ('Skip chunk (' + chunkId.toString (16) + ', ' + chunkLength + ')', 3);\n\t\t\t\t\t\tSkipChunk (reader, chunkLength);\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\n\t\t\tfunction ReadEditorChunk (reader, id, length)\n\t\t\t{\n\t\t\t\tOnLog ('Read editor chunk (' + id.toString (16) + ', ' + length + ')', 1);\n\t\t\t\t\n\t\t\t\tvar endByte = GetChunkEnd (reader, length);\n\t\t\t\tReadChunks (reader, endByte, function (chunkId, chunkLength) {\n\t\t\t\t\tif (chunkId == chunks.EDIT_MATERIAL) {\n\t\t\t\t\t\tReadMaterialChunk (reader, chunkId, chunkLength);\n\t\t\t\t\t} else if (chunkId == chunks.EDIT_OBJECT) {\n\t\t\t\t\t\tReadObjectChunk (reader, chunkId, chunkLength);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tOnLog ('Skip chunk (' + chunkId.toString (16) + ', ' + chunkLength + ')', 2);\n\t\t\t\t\t\tSkipChunk (reader, chunkLength);\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\n\t\t\tfunction ReadObjectNodeChunk (reader, id, length)\n\t\t\t{\n\t\t\t\tfunction ReadTrackVector (reader, type)\n\t\t\t\t{\n\t\t\t\t\tvar result = [];\n\t\t\t\t\treader.Skip (10);\n\t\t\t\t\t\n\t\t\t\t\tvar i, flags, current, tmp;\n\t\t\t\t\tvar keyNum = reader.ReadInteger32 ();\n\t\t\t\t\tfor (i = 0; i < keyNum; i++) {\n\t\t\t\t\t\treader.ReadInteger32 ();\n\t\t\t\t\t\tflags = reader.ReadUnsignedInteger16 ();\n\t\t\t\t\t\tif (flags !== 0) {\n\t\t\t\t\t\t\treader.ReadFloat32 ();\n\t\t\t\t\t\t}\n\t\t\t\t\t\t\n\t\t\t\t\t\tcurrent = null;\n\t\t\t\t\t\tif (type == chunks.OBJECT_ROTATION) {\n\t\t\t\t\t\t\ttmp = reader.ReadFloat32 ();\n\t\t\t\t\t\t\tcurrent = ReadVector (reader);\n\t\t\t\t\t\t\tcurrent[3] = tmp;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tcurrent = ReadVector (reader);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tresult.push (current);\n\t\t\t\t\t}\n\n\t\t\t\t\treturn result;\n\t\t\t\t}\n\t\t\t\n\t\t\t\tOnLog ('Read object node chunk (' + id.toString (16) + ', ' + length + ')', 2);\n\t\t\t\t\n\t\t\t\tvar objectNode = {\n\t\t\t\t\tname : '',\n\t\t\t\t\tnodeId : -1,\n\t\t\t\t\tflags : -1,\n\t\t\t\t\tuserId : -1,\n\t\t\t\t\tpivot : [0.0, 0.0, 0.0],\n\t\t\t\t\tpositions : [],\n\t\t\t\t\trotations : [],\n\t\t\t\t\tscales : []\n\t\t\t\t};\n\t\t\t\t\n\t\t\t\tvar endByte = GetChunkEnd (reader, length);\n\t\t\t\tReadChunks (reader, endByte, function (chunkId, chunkLength) {\n\t\t\t\t\tif (chunkId == chunks.OBJECT_HIERARCHY) {\n\t\t\t\t\t\tobjectNode.name = ReadName (reader);\n\t\t\t\t\t\tobjectNode.flags = reader.ReadUnsignedInteger32 ();\n\t\t\t\t\t\tobjectNode.userId = reader.ReadUnsignedInteger16 ();\n\t\t\t\t\t} else if (chunkId == chunks.OBJECT_PIVOT) {\n\t\t\t\t\t\tobjectNode.pivot = ReadVector (reader);\n\t\t\t\t\t} else if (chunkId == chunks.OBJECT_POSITION) {\n\t\t\t\t\t\tobjectNode.positions = ReadTrackVector (reader, chunks.OBJECT_POSITION);\n\t\t\t\t\t} else if (chunkId == chunks.OBJECT_ROTATION) {\n\t\t\t\t\t\tobjectNode.rotations = ReadTrackVector (reader, chunks.OBJECT_ROTATION);\n\t\t\t\t\t} else if (chunkId == chunks.OBJECT_SCALE) {\n\t\t\t\t\t\tobjectNode.scales = ReadTrackVector (reader, chunks.OBJECT_SCALE);\n\t\t\t\t\t} else if (chunkId == chunks.OBJECT_ID) {\n\t\t\t\t\t\tobjectNode.nodeId = reader.ReadUnsignedInteger16 ();\n\t\t\t\t\t} else {\n\t\t\t\t\t\tOnLog ('Skip chunk (' + chunkId.toString (16) + ', ' + chunkLength + ')', 3);\n\t\t\t\t\t\tSkipChunk (reader, chunkLength);\n\t\t\t\t\t}\n\t\t\t\t});\n\n\t\t\t\tOnObjectNode (objectNode);\n\t\t\t}\n\t\t\t\n\t\t\tfunction ReadKeyFrameChunk (reader, id, length)\n\t\t\t{\n\t\t\t\tOnLog ('Read keyframe chunk (' + id.toString (16) + ', ' + length + ')', 1);\n\t\t\t\t\n\t\t\t\tvar endByte = GetChunkEnd (reader, length);\n\t\t\t\tReadChunks (reader, endByte, function (chunkId, chunkLength) {\n\t\t\t\t\tif (chunkId == chunks.OBJECT_NODE) {\n\t\t\t\t\t\tReadObjectNodeChunk (reader, chunkId, chunkLength);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tOnLog ('Skip chunk (' + chunkId.toString (16) + ', ' + chunkLength + ')', 2);\n\t\t\t\t\t\tSkipChunk (reader, chunkLength);\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\t\t\t\n\t\t\tfunction ReadMainChunk (reader, id, length)\n\t\t\t{\n\t\t\t\tOnLog ('Read main chunk (' + id.toString (16) + ', ' + length + ')', 0);\n\t\t\t\t\n\t\t\t\tvar endByte = GetChunkEnd (reader, length);\n\t\t\t\tReadChunks (reader, endByte, function (chunkId, chunkLength) {\n\t\t\t\t\tif (chunkId == chunks.EDIT3DS) {\n\t\t\t\t\t\tReadEditorChunk (reader, chunkId, chunkLength);\n\t\t\t\t\t} else if (chunkId == chunks.KF3DS) {\n\t\t\t\t\t\tReadKeyFrameChunk (reader, chunkId, chunkLength);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tOnLog ('Skip chunk (' + chunkId.toString (16) + ', ' + chunkLength + ')', 1);\n\t\t\t\t\t\tSkipChunk (reader, chunkLength);\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\t\t\n\t\t\tvar endByte = reader.GetByteLength ();\n\t\t\tReadChunks (reader, endByte, function (chunkId, chunkLength) {\n\t\t\t\tif (chunkId == chunks.MAIN3DS) {\n\t\t\t\t\tReadMainChunk (reader, chunkId, chunkLength);\n\t\t\t\t} else {\n\t\t\t\t\tOnLog ('Skip chunk (' + chunkId.toString (16) + ', ' + chunkLength + ')', 0);\n\t\t\t\t\tSkipChunk (reader, chunkLength);\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t\t\n\t\tif (callbacks === undefined || callbacks === null) {\n\t\t\tcallbacks = {};\n\t\t}\n\n\t\tvar chunks = {\n\t\t\tMAIN3DS : 0x4D4D,\n\t\t\tEDIT3DS : 0x3D3D,\n\t\t\tEDIT_MATERIAL : 0xAFFF,\n\t\t\tMAT_NAME : 0xA000,\n\t\t\tMAT_AMBIENT : 0xA010,\n\t\t\tMAT_DIFFUSE : 0xA020,\n\t\t\tMAT_SPECULAR : 0xA030,\n\t\t\tMAT_SHININESS : 0xA040,\n\t\t\tMAT_SHININESS_STRENGTH : 0xA041,\n\t\t\tMAT_TRANSPARENCY : 0xA050,\n\t\t\tMAT_COLOR_F : 0x0010,\n\t\t\tMAT_COLOR : 0x0011,\n\t\t\tMAT_LIN_COLOR : 0x0012,\n\t\t\tMAT_LIN_COLOR_F : 0x0013,\n\t\t\tMAT_TEXMAP : 0xA200,\n\t\t\tMAT_TEXMAP_NAME : 0xA300,\n\t\t\tMAT_TEXMAP_UOFFSET : 0xA358,\n\t\t\tMAT_TEXMAP_VOFFSET : 0xA35A,\n\t\t\tMAT_TEXMAP_USCALE : 0xA354,\n\t\t\tMAT_TEXMAP_VSCALE : 0xA356,\n\t\t\tMAT_TEXMAP_ROTATION : 0xA35C,\n\t\t\tPERCENTAGE : 0x0030,\n\t\t\tPERCENTAGE_F : 0x0031,\n\t\t\tEDIT_OBJECT : 0x4000,\n\t\t\tOBJ_TRIMESH : 0x4100,\n\t\t\tOBJ_LIGHT : 0x4600,\n\t\t\tOBJ_CAMERA : 0x4700,\n\t\t\tTRI_VERTEX : 0x4110,\n\t\t\tTRI_TEXVERTEX : 0x4140,\n\t\t\tTRI_FACE : 0x4120,\n\t\t\tTRI_TRANSFORMATION : 0x4160,\n\t\t\tTRI_MATERIAL : 0x4130,\n\t\t\tTRI_SMOOTH : 0x4150,\n\t\t\tKF3DS : 0xB000,\n\t\t\tOBJECT_NODE : 0xB002,\n\t\t\tOBJECT_HIERARCHY : 0xB010,\n\t\t\tOBJECT_PIVOT : 0xB013,\n\t\t\tOBJECT_POSITION : 0xB020,\n\t\t\tOBJECT_ROTATION : 0xB021,\n\t\t\tOBJECT_SCALE : 0xB022,\n\t\t\tOBJECT_ID : 0xB030\n\t\t};\n\t\t\n\t\tvar reader = new JSM.BinaryReader (arrayBuffer, true);\n\t\tReadFile (reader, chunks);\n\t};\n\n\tJSM.Convert3dsToJsonData = function (arrayBuffer, callbacks)\n\t{\n\t\tfunction OnFileRequested (fileName)\n\t\t{\n\t\t\tif (callbacks.onFileRequested !== undefined && callbacks.onFileRequested !== null) {\n\t\t\t\treturn callbacks.onFileRequested (fileName);\n\t\t\t}\n\t\t\treturn null;\n\t\t}\n\n\t\tfunction FinalizeMeshes (nodeHierarcy, triangleModel, materialNameToIndex)\n\t\t{\n\t\t\tfunction ApplyTransformation (body, node, nodeHierarcy)\n\t\t\t{\n\t\t\t\tfunction MatrixScale (matrix, scale)\n\t\t\t\t{\n\t\t\t\t\tvar x = scale[0];\n\t\t\t\t\tvar y = scale[1];\n\t\t\t\t\tvar z = scale[2];\n\t\t\t\t\n\t\t\t\t\tvar i;\n\t\t\t\t\tfor (i = 0; i < 4; i++) {\n\t\t\t\t\t\tmatrix[0 * 4 + i] *= x;\n\t\t\t\t\t\tmatrix[1 * 4 + i] *= y;\n\t\t\t\t\t\tmatrix[2 * 4 + i] *= z;\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\treturn matrix;\n\t\t\t\t}\n\n\t\t\t\tfunction MatrixTranslate (matrix, translation)\n\t\t\t\t{\n\t\t\t\t\tvar x = translation[0];\n\t\t\t\t\tvar y = translation[1];\n\t\t\t\t\tvar z = translation[2];\n\n\t\t\t\t\tvar i;\n\t\t\t\t\tfor (i = 0; i < 3; i++) {\n\t\t\t\t\t\tmatrix[3 * 4 + i] += matrix[0 * 4 + i] * x + matrix[1 * 4 + i] * y + matrix[2 * 4 + i] * z;\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\treturn matrix;\n\t\t\t\t}\n\n\t\t\t\tfunction MatrixRotate (matrix, quaternion)\n\t\t\t\t{\n\t\t\t\t\tvar rotation = JSM.MatrixRotationQuaternion (quaternion);\n\t\t\t\t\treturn JSM.MatrixMultiply (rotation, matrix);\n\t\t\t\t}\n\n\t\t\t\tfunction TransformBodyVertices (body, matrix)\n\t\t\t\t{\n\t\t\t\t\tvar i, vertex, transformedVertex;\n\t\t\t\t\tfor (i = 0; i < body.VertexCount (); i++) {\n\t\t\t\t\t\tvertex = body.GetVertex (i);\n\t\t\t\t\t\ttransformedVertex = JSM.ApplyTransformation (matrix, vertex);\n\t\t\t\t\t\tbody.SetVertex (i, transformedVertex.x, transformedVertex.y, transformedVertex.z);\n\t\t\t\t\t}\t\t\t\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tfunction FlipByXCoordinates (body, matrix, invMatrix)\t\n\t\t\t\t{\n\t\t\t\t\tvar determinant = JSM.MatrixDeterminant (matrix);\n\t\t\t\t\tif (!JSM.IsNegative (determinant)) {\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\tvar flippedMatrix = JSM.MatrixClone (matrix);\n\t\t\t\t\tMatrixScale (flippedMatrix, [-1.0, 1.0, 1.0]);\n\t\t\t\t\t\n\t\t\t\t\tvar finalMatrix = JSM.MatrixMultiply (invMatrix, flippedMatrix);\n\t\t\t\t\tTransformBodyVertices (body, finalMatrix);\n\t\t\t\t}\n\n\t\t\t\tfunction GetNodeTransformation (node, nodeHierarcy)\n\t\t\t\t{\n\t\t\t\t\tfunction GetNodePosition (node)\n\t\t\t\t\t{\n\t\t\t\t\t\tif (node.positions.length === 0) {\n\t\t\t\t\t\t\treturn [0.0, 0.0, 0.0];\n\t\t\t\t\t\t}\n\t\t\t\t\t\treturn node.positions[0];\n\t\t\t\t\t}\n\t\t\t\t\n\t\t\t\t\tfunction GetNodeRotation (node)\n\t\t\t\t\t{\n\t\t\t\t\t\tfunction GetQuatFromAxisAndAngle (quat)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tvar result = [0.0, 0.0, 0.0, 1.0];\n\t\t\t\t\t\t\tvar length = Math.sqrt (quat[0] * quat[0] + quat[1] * quat[1] + quat[2] * quat[2]);\n\t\t\t\t\t\t\tif (JSM.IsPositive (length)) {\n\t\t\t\t\t\t\t\tvar omega = quat[3] * -0.5;\n\t\t\t\t\t\t\t\tvar si = Math.sin (omega) / length;\n\t\t\t\t\t\t\t\tresult = [si * quat[0], si * quat[1], si * quat[2], Math.cos (omega)];\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\treturn result;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (node.rotations.length === 0) {\n\t\t\t\t\t\t\treturn [0.0, 0.0, 0.0, 0.0];\n\t\t\t\t\t\t}\n\t\t\t\t\t\t\n\t\t\t\t\t\tvar quat = node.rotations[0];\n\t\t\t\t\t\treturn GetQuatFromAxisAndAngle (quat);\n\t\t\t\t\t}\n\n\t\t\t\t\tfunction GetNodeScale (node)\n\t\t\t\t\t{\n\t\t\t\t\t\tif (node.scales.length === 0) {\n\t\t\t\t\t\t\treturn [0.0, 0.0, 0.0, 0.0];\n\t\t\t\t\t\t}\n\t\t\t\t\t\treturn node.scales[0];\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\tif (node.matrix !== undefined) {\n\t\t\t\t\t\treturn node.matrix;\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\tvar result = JSM.MatrixIdentity ();\n\t\t\t\t\tresult = MatrixTranslate (result, GetNodePosition (node));\n\t\t\t\t\tresult = MatrixRotate (result, GetNodeRotation (node));\n\t\t\t\t\tresult = MatrixScale (result, GetNodeScale (node));\n\t\t\t\t\t\n\t\t\t\t\tif (node.userId != 65535) {\n\t\t\t\t\t\tvar parentIndex = nodeHierarcy.nodeIdToIndex[node.userId];\n\t\t\t\t\t\tif (parentIndex !== undefined) {\n\t\t\t\t\t\t\tvar parentNode = nodeHierarcy.nodes[parentIndex];\n\t\t\t\t\t\t\tvar parentTransformation = GetNodeTransformation (parentNode, nodeHierarcy);\n\t\t\t\t\t\t\tresult = JSM.MatrixMultiply (result, parentTransformation);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\tnode.matrix = result;\n\t\t\t\t\treturn result;\n\t\t\t\t}\n\t\t\t\n\t\t\t\tfunction GetNodePivotPoint (node)\n\t\t\t\t{\n\t\t\t\t\tif (node === undefined || node === null) {\n\t\t\t\t\t\treturn [0.0, 0.0, 0.0];\n\t\t\t\t\t}\n\t\t\t\t\treturn node.pivot;\n\t\t\t\t}\n\n\t\t\t\tfunction GetMeshTransformation (mesh)\n\t\t\t\t{\n\t\t\t\t\tif (mesh === undefined || mesh === null) {\n\t\t\t\t\t\treturn null;\n\t\t\t\t\t}\n\t\t\t\t\treturn mesh.transformation;\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tvar currentMeshData = body.meshData;\n\t\t\t\tvar meshTransformation = GetMeshTransformation (currentMeshData);\n\t\t\t\tif (meshTransformation === null) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tvar nodeTransformation = null;\n\t\t\t\tif (node !== null) {\n\t\t\t\t\tnodeTransformation = GetNodeTransformation (node, nodeHierarcy);\n\t\t\t\t} else {\n\t\t\t\t\tnodeTransformation = meshTransformation;\n\t\t\t\t}\n\n\t\t\t\tvar matrix = JSM.MatrixClone (nodeTransformation);\n\t\t\t\tvar meshMatrix = JSM.MatrixClone (meshTransformation);\n\t\t\t\tvar invMeshMatrix = JSM.MatrixInvert (meshMatrix);\n\t\t\t\tif (invMeshMatrix === null) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tFlipByXCoordinates (body, meshMatrix, invMeshMatrix);\n\n\t\t\t\tvar nodePivotPoint = GetNodePivotPoint (node);\n\t\t\t\tMatrixTranslate (matrix, [-nodePivotPoint[0], -nodePivotPoint[1], -nodePivotPoint[2]]);\n\t\t\t\tvar finalMatrix = JSM.MatrixMultiply (invMeshMatrix, matrix);\n\t\t\t\tTransformBodyVertices (body, finalMatrix);\n\t\t\t}\n\n\t\t\tfunction FinalizeMaterials (body, materialNameToIndex)\n\t\t\t{\n\t\t\t\tvar hasTextureCoordinates = (body.UVCount () == body.VertexCount ());\n\t\t\t\tvar currentMeshData = body.meshData;\n\t\t\t\tvar i, triangle, materialName, materialIndex, smoothingGroup;\n\t\t\t\tfor (i = 0; i < body.TriangleCount (); i++) {\n\t\t\t\t\ttriangle = body.GetTriangle (i);\n\t\t\t\t\tif (hasTextureCoordinates) {\n\t\t\t\t\t\ttriangle.u0 = triangle.v0;\n\t\t\t\t\t\ttriangle.u1 = triangle.v1;\n\t\t\t\t\t\ttriangle.u2 = triangle.v2;\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\tmaterialName = currentMeshData.faceToMaterial[i];\n\t\t\t\t\tif (materialName !== undefined) {\n\t\t\t\t\t\tmaterialIndex = materialNameToIndex[materialName];\n\t\t\t\t\t\tif (materialIndex !== undefined) {\n\t\t\t\t\t\t\ttriangle.mat = materialIndex;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\tsmoothingGroup = currentMeshData.faceToSmoothingGroup[i];\n\t\t\t\t\tif (smoothingGroup !== undefined && smoothingGroup > 0) {\n\t\t\t\t\t\ttriangle.curve = smoothingGroup;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tfunction FinalizeMesh (body, node, materialNameToIndex, nodeHierarcy)\n\t\t\t{\n\t\t\t\tApplyTransformation (body, node, nodeHierarcy);\n\t\t\t\tFinalizeMaterials (body, materialNameToIndex);\t\t\n\t\t\t}\n\t\t\t\n\t\t\tfunction DuplicateBody (model, body, bodyIndex, instanceIndex)\n\t\t\t{\n\t\t\t\tvar clonedBody = body.Clone ();\n\t\t\t\tclonedBody.SetName (clonedBody.GetName () + ' (' + instanceIndex + ')');\n\t\t\t\tif (bodyIndex < model.BodyCount ()) {\n\t\t\t\t\tmodel.AddBodyToIndex (clonedBody, bodyIndex);\n\t\t\t\t} else {\n\t\t\t\t\tmodel.AddBody (clonedBody);\n\t\t\t\t}\n\t\t\t\treturn clonedBody;\n\t\t\t}\n\n\t\t\tvar i, j, currentBody, currentMeshData, currentNode;\n\t\t\tvar firstNode, addedBody;\n\t\t\tfor (i = 0; i < triangleModel.BodyCount (); i++) {\n\t\t\t\tcurrentBody = triangleModel.GetBody (i);\n\t\t\t\tcurrentMeshData = currentBody.meshData;\n\t\t\t\tif (currentMeshData.objectNodes.length === 0) {\n\t\t\t\t\tFinalizeMesh (currentBody, null, materialNameToIndex, nodeHierarcy);\n\t\t\t\t} else {\n\t\t\t\t\tfirstNode = nodeHierarcy.nodes[currentMeshData.objectNodes[0]];\n\t\t\t\t\tfor (j = 1; j < currentMeshData.objectNodes.length; j++) {\n\t\t\t\t\t\tcurrentNode = nodeHierarcy.nodes[currentMeshData.objectNodes[j]];\n\t\t\t\t\t\taddedBody = DuplicateBody (triangleModel, currentBody, i + 1, j + 1);\n\t\t\t\t\t\taddedBody.meshData = currentBody.meshData;\n\t\t\t\t\t\tFinalizeMesh (addedBody, currentNode, materialNameToIndex, nodeHierarcy);\n\t\t\t\t\t\ti = i + 1;\n\t\t\t\t\t}\n\t\t\t\t\tFinalizeMesh (currentBody, firstNode, materialNameToIndex, nodeHierarcy);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif (callbacks === undefined || callbacks === null) {\n\t\t\tcallbacks = {};\n\t\t}\n\n\t\tvar triangleModel = new JSM.TriangleModel ();\n\t\tvar currentBody = null;\n\t\t\n\t\tvar materialNameToIndex = {};\n\t\tvar bodyNameToIndex = {};\n\n\t\tvar nodeHierarcy = {\n\t\t\tnodes : [],\n\t\t\tnodeIdToIndex : {}\n\t\t};\n\t\t\n\t\tJSM.Read3dsFile (arrayBuffer, {\n\t\t\tonMaterial : function (material) {\n\t\t\t\tfunction GetOpacity (transparency)\n\t\t\t\t{\n\t\t\t\t\tif (transparency === undefined || transparency === null) {\n\t\t\t\t\t\treturn 1.0;\n\t\t\t\t\t}\n\t\t\t\t\treturn 1.0 - transparency;\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tfunction GetShininess (shininess, shininessStrength)\n\t\t\t\t{\n\t\t\t\t\tif (shininess === undefined || shininess === null) {\n\t\t\t\t\t\treturn 0.0;\n\t\t\t\t\t}\n\t\t\t\t\tif (shininessStrength === undefined || shininessStrength === null) {\n\t\t\t\t\t\treturn 0.0;\n\t\t\t\t\t}\n\t\t\t\t\treturn shininess * shininessStrength;\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tif (materialNameToIndex[material.name] !== undefined) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tvar index = triangleModel.AddMaterial ({\n\t\t\t\t\tname : material.name,\n\t\t\t\t\tambient : material.ambient,\n\t\t\t\t\tdiffuse : material.diffuse,\n\t\t\t\t\tspecular : material.specular,\n\t\t\t\t\tshininess : GetShininess (material.shininess, material.shininessStrength),\n\t\t\t\t\topacity : GetOpacity (material.transparency)\n\t\t\t\t});\n\t\t\t\t\n\t\t\t\tvar currentMaterial = triangleModel.GetMaterial (index);\n\t\t\t\tif (material.texture !== undefined && material.texture !== null) {\n\t\t\t\t\tvar textureBuffer = OnFileRequested (material.texture);\n\t\t\t\t\tif (textureBuffer !== null) {\n\t\t\t\t\t\tvar blob = new window.Blob ([textureBuffer]);\n\t\t\t\t\t\tvar blobURL = window.URL.createObjectURL (blob);\n\t\t\t\t\t\tcurrentMaterial.texture = blobURL;\n\t\t\t\t\t\tcurrentMaterial.offset = material.offset;\n\t\t\t\t\t\tcurrentMaterial.scale = material.scale;\n\t\t\t\t\t\tcurrentMaterial.rotation = -material.rotation;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tmaterialNameToIndex[material.name] = index;\n\t\t\t},\n\t\t\tonMesh : function (meshName) {\n\t\t\t\tif (bodyNameToIndex[meshName] !== undefined) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\n\t\t\t\tvar index = triangleModel.AddBody (new JSM.TriangleBody (meshName));\n\t\t\t\tcurrentBody = triangleModel.GetBody (index);\n\t\t\t\tcurrentBody.meshData ={\n\t\t\t\t\tfaceToMaterial : {},\n\t\t\t\t\tfaceToSmoothingGroup : {},\n\t\t\t\t\tobjectNodes : [],\n\t\t\t\t\ttransformation : null\n\t\t\t\t};\n\t\t\t\tbodyNameToIndex[meshName] = index;\n\t\t\t},\n\t\t\tonTransformation : function (matrix) {\n\t\t\t\tif (currentBody === null) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tcurrentBody.meshData.transformation = matrix;\n\t\t\t},\n\t\t\tonObjectNode : function (objectNode) {\n\t\t\t\tvar nodeIndex = nodeHierarcy.nodes.length;\n\t\t\t\tnodeHierarcy.nodes.push (objectNode);\n\t\t\t\tnodeHierarcy.nodeIdToIndex[objectNode.nodeId] = nodeIndex;\n\n\t\t\t\tvar bodyIndex = bodyNameToIndex[objectNode.name];\n\t\t\t\tif (bodyIndex === undefined) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tvar body = triangleModel.GetBody (bodyIndex);\n\t\t\t\tbody.meshData.objectNodes.push (nodeIndex);\n\t\t\t},\n\t\t\tonVertex : function (x, y, z) {\n\t\t\t\tif (currentBody === null) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tcurrentBody.AddVertex (x, y, z);\n\t\t\t},\n\t\t\tonTextureVertex : function (x, y) {\n\t\t\t\tif (currentBody === null) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tcurrentBody.AddUV (x, y);\n\t\t\t},\n\t\t\tonFace : function (v0, v1, v2) {\n\t\t\t\tif (currentBody === null) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tcurrentBody.AddTriangle (v0, v1, v2);\n\t\t\t},\n\t\t\tonFaceMaterial : function (faceIndex, materialName) {\n\t\t\t\tif (currentBody === null) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tcurrentBody.meshData.faceToMaterial[faceIndex] = materialName;\n\t\t\t},\n\t\t\tonFaceSmoothingGroup : function (faceIndex, smoothingGroup) {\n\t\t\t\tif (currentBody === null) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tcurrentBody.meshData.faceToSmoothingGroup[faceIndex] = smoothingGroup;\n\t\t\t},\n\t\t\tonFileRequested : OnFileRequested\n\t\t});\n\t\t\n\t\tFinalizeMeshes (nodeHierarcy, triangleModel, materialNameToIndex);\n\t\ttriangleModel.Finalize ();\n\n\t\tvar jsonData = JSM.ConvertTriangleModelToJsonData (triangleModel);\n\t\treturn jsonData;\n\t};\n\n\treturn JSM;\n});\n"]}