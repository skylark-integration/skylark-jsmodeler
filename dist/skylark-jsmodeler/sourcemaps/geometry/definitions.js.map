{"version":3,"sources":["geometry/definitions.js"],"names":["define","JSM","Eps","Inf","RadDeg","DegRad","IsZero","a","Math","abs","IsPositive","IsNegative","IsLower","b","IsGreater","IsEqual","IsEqualWithEps","eps","IsLowerOrEqual","IsGreaterOrEqual","Minimum","Maximum","ArcSin","value","PI","asin","ArcCos","acos"],"mappings":";;;;;;;AAAAA,QAAQ,eAAe,SAASC,GAoM/B,OAnMAA,EAAIC,IAAM,KACVD,EAAIE,IAAM,WACVF,EAAIG,OAAS,kBACbH,EAAII,OAAS,iBAUbJ,EAAIK,OAAS,SAAUC,GAEtB,OAAOC,KAAKC,IAAKF,GAAKN,EAAIC,KAW3BD,EAAIS,WAAa,SAAUH,GAE1B,OAAOA,EAAIN,EAAIC,KAWhBD,EAAIU,WAAa,SAAUJ,GAE1B,OAAOA,GAAKN,EAAIC,KAYjBD,EAAIW,QAAU,SAAUL,EAAGM,GAE1B,OAAOA,EAAIN,EAAIN,EAAIC,KAYpBD,EAAIa,UAAY,SAAUP,EAAGM,GAE5B,OAAON,EAAIM,EAAIZ,EAAIC,KAYpBD,EAAIc,QAAU,SAAUR,EAAGM,GAE1B,OAAOL,KAAKC,IAAKI,EAAIN,GAAKN,EAAIC,KAa/BD,EAAIe,eAAiB,SAAUT,EAAGM,EAAGI,GAEpC,OAAOT,KAAKC,IAAKI,EAAIN,GAAKU,GAY3BhB,EAAIiB,eAAiB,SAAUX,EAAGM,GAEjC,OAAOZ,EAAIW,QAASL,EAAGM,IAAMZ,EAAIc,QAASR,EAAGM,IAY9CZ,EAAIkB,iBAAmB,SAAUZ,EAAGM,GAEnC,OAAOZ,EAAIa,UAAWP,EAAGM,IAAMZ,EAAIc,QAASR,EAAGM,IAYhDZ,EAAImB,QAAU,SAAUb,EAAGM,GAE1B,OAAOZ,EAAIW,QAASL,EAAGM,GAAKN,EAAIM,GAYjCZ,EAAIoB,QAAU,SAAUd,EAAGM,GAE1B,OAAOZ,EAAIa,UAAWP,EAAGM,GAAKN,EAAIM,GAWnCZ,EAAIqB,OAAS,SAAUC,GAEtB,OAAItB,EAAIkB,iBAAkBI,EAAO,GACzBf,KAAKgB,GAAK,EACPvB,EAAIiB,eAAgBK,GAAQ,IAC7Bf,KAAKgB,GAAK,EAGbhB,KAAKiB,KAAMF,IAWnBtB,EAAIyB,OAAS,SAAUH,GAEtB,OAAItB,EAAIkB,iBAAkBI,EAAO,GACzB,EACGtB,EAAIiB,eAAgBK,GAAQ,GAC/Bf,KAAKgB,GAGNhB,KAAKmB,KAAMJ,IAGZtB","file":"../../geometry/definitions.js","sourcesContent":["define([\"../core/jsm\"],function(JSM){\n\tJSM.Eps = 0.00000001;\n\tJSM.Inf = 9999999999;\n\tJSM.RadDeg = 57.29577951308232;\n\tJSM.DegRad = 0.017453292519943;\n\n\t/**\n\t* Function: IsZero\n\t* Description: Determines if the given value is near zero. Uses epsilon for comparison.\n\t* Parameters:\n\t*\ta {number} the value\n\t* Returns:\n\t*\t{boolean} the result\n\t*/\n\tJSM.IsZero = function (a)\n\t{\n\t\treturn Math.abs (a) < JSM.Eps;\n\t};\n\n\t/**\n\t* Function: IsPositive\n\t* Description: Determines if the given value is positive. Uses epsilon for comparison.\n\t* Parameters:\n\t*\ta {number} the value\n\t* Returns:\n\t*\t{boolean} the result\n\t*/\n\tJSM.IsPositive = function (a)\n\t{\n\t\treturn a > JSM.Eps;\n\t};\n\n\t/**\n\t* Function: IsNegative\n\t* Description: Determines if the given value is negative. Uses epsilon for comparison.\n\t* Parameters:\n\t*\ta {number} the value\n\t* Returns:\n\t*\t{boolean} the result\n\t*/\n\tJSM.IsNegative = function (a)\n\t{\n\t\treturn a < -JSM.Eps;\n\t};\n\n\t/**\n\t* Function: IsLower\n\t* Description: Determines if a value is lower than an other. Uses epsilon for comparison.\n\t* Parameters:\n\t*\ta {number} first value\n\t*\tb {number} second value\n\t* Returns:\n\t*\t{boolean} the result\n\t*/\n\tJSM.IsLower = function (a, b)\n\t{\n\t\treturn b - a > JSM.Eps;\n\t};\n\n\t/**\n\t* Function: IsGreater\n\t* Description: Determines if a value is greater than an other. Uses epsilon for comparison.\n\t* Parameters:\n\t*\ta {number} first value\n\t*\tb {number} second value\n\t* Returns:\n\t*\t{boolean} the result\n\t*/\n\tJSM.IsGreater = function (a, b)\n\t{\n\t\treturn a - b > JSM.Eps;\n\t};\n\n\t/**\n\t* Function: IsEqual\n\t* Description: Determines if two values are equal. Uses epsilon for comparison.\n\t* Parameters:\n\t*\ta {number} first value\n\t*\tb {number} second value\n\t* Returns:\n\t*\t{boolean} the result\n\t*/\n\tJSM.IsEqual = function (a, b)\n\t{\n\t\treturn Math.abs (b - a) < JSM.Eps;\n\t};\n\n\t/**\n\t* Function: IsEqualWithEps\n\t* Description: Determines if two values are equal. Uses the given epsilon for comparison.\n\t* Parameters:\n\t*\ta {number} first value\n\t*\tb {number} second value\n\t*\teps {number} epsilon value\n\t* Returns:\n\t*\t{boolean} the result\n\t*/\n\tJSM.IsEqualWithEps = function (a, b, eps)\n\t{\n\t\treturn Math.abs (b - a) < eps;\n\t};\n\n\t/**\n\t* Function: IsLowerOrEqual\n\t* Description: Determines if a value is lower or equal to an other. Uses epsilon for comparison.\n\t* Parameters:\n\t*\ta {number} first value\n\t*\tb {number} second value\n\t* Returns:\n\t*\t{boolean} the result\n\t*/\n\tJSM.IsLowerOrEqual = function (a, b)\n\t{\n\t\treturn JSM.IsLower (a, b) || JSM.IsEqual (a, b);\n\t};\n\n\t/**\n\t* Function: IsGreaterOrEqual\n\t* Description: Determines if a value is greater or equal to an other. Uses epsilon for comparison.\n\t* Parameters:\n\t*\ta {number} first value\n\t*\tb {number} second value\n\t* Returns:\n\t*\t{boolean} the result\n\t*/\n\tJSM.IsGreaterOrEqual = function (a, b)\n\t{\n\t\treturn JSM.IsGreater (a, b) || JSM.IsEqual (a, b);\n\t};\n\n\t/**\n\t* Function: Minimum\n\t* Description: Returns the minimum of two values. Uses epsilon for comparison.\n\t* Parameters:\n\t*\ta {number} first value\n\t*\tb {number} second value\n\t* Returns:\n\t*\t{number} the result\n\t*/\n\tJSM.Minimum = function (a, b)\n\t{\n\t\treturn JSM.IsLower (a, b) ? a : b;\n\t};\n\n\t/**\n\t* Function: Maximum\n\t* Description: Returns the maximum of two values. Uses epsilon for comparison.\n\t* Parameters:\n\t*\ta {number} first value\n\t*\tb {number} second value\n\t* Returns:\n\t*\t{number} the result\n\t*/\n\tJSM.Maximum = function (a, b)\n\t{\n\t\treturn JSM.IsGreater (a, b) ? a : b;\n\t};\n\n\t/**\n\t* Function: ArcSin\n\t* Description: Calculates the arcus sinus value.\n\t* Parameters:\n\t*\tvalue {number} the value\n\t* Returns:\n\t*\t{number} the result\n\t*/\n\tJSM.ArcSin = function (value)\n\t{\n\t\tif (JSM.IsGreaterOrEqual (value, 1.0)) {\n\t\t\treturn Math.PI / 2.0;\n\t\t} else if (JSM.IsLowerOrEqual (value, -1.0)) {\n\t\t\treturn - Math.PI / 2.0;\n\t\t}\n\t\t\n\t\treturn Math.asin (value);\n\t};\n\n\t/**\n\t* Function: ArcCos\n\t* Description: Calculates the arcus cosinus value.\n\t* Parameters:\n\t*\tvalue {number} the value\n\t* Returns:\n\t*\t{number} the result\n\t*/\n\tJSM.ArcCos = function (value)\n\t{\n\t\tif (JSM.IsGreaterOrEqual (value, 1.0)) {\n\t\t\treturn 0.0;\n\t\t} else if (JSM.IsLowerOrEqual (value, -1.0)) {\n\t\t\treturn Math.PI;\n\t\t}\n\t\t\n\t\treturn Math.acos (value);\n\t};\n\n\treturn JSM;\n});\n"]}