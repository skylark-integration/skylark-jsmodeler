{"version":3,"sources":["geometry/path.js"],"names":["define","JSM","Path2D","settings","this","segmentation","offset","Vector2D","scale","Coord2D","CopyObjectProperties","position","positionAdded","polygons","currentPolygon","prototype","MoveTo","x","y","Close","Set","LineTo","AddPolygonPoint","CubicBezierTo","cp1x","cp1y","cp2x","cp2y","i","bezierPoints","GenerateCubicBezierCurve","length","polygon","VertexCount","GetVertex","IsEqual","RemoveVertex","basePolygon","IsBasePolygon","baseOrientation","baseContour","GetOrientation","polygonOrientation","firstVertex","CoordPosition","CoordPolygonPosition2D","Inside","GetContour","FindBasePolygon","contourPolygon","ContourPolygon2D","AddContour","push","PolygonCount","GetPolygon","index","GetPolygons","GetCurrentPolygon","Polygon2D","polygonX","polygonY","AddVertex"],"mappings":"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","file":"../../geometry/path.js","sourcesContent":["define([\"../core/jsm\"],function(JSM){\n\t/**\n\t* Class: Path2D\n\t* Description: Helper class for building polygons\n\t* Parameters:\n\t*\tsettings {object} path settings\n\t*/\n\tJSM.Path2D = function (settings)\n\t{\n\t\tthis.settings = {\n\t\t\tsegmentation : 10,\n\t\t\toffset : new JSM.Vector2D (0.0, 0.0),\n\t\t\tscale : new JSM.Coord2D (1.0, 1.0)\n\t\t};\n\t\tJSM.CopyObjectProperties (settings, this.settings, true);\n\t\t\n\t\tthis.position = new JSM.Coord2D (0.0, 0.0);\n\t\tthis.positionAdded = false;\n\t\tthis.polygons = [];\n\t\tthis.currentPolygon = null;\n\t};\n\n\t/**\n\t* Function: Path2D.MoveTo\n\t* Description: Moves the current position to the given position.\n\t* Parameters:\n\t*\tx {number} new x position\n\t*\ty {number} new y position\n\t*/\n\tJSM.Path2D.prototype.MoveTo = function (x, y)\n\t{\n\t\tthis.Close ();\n\t\tthis.position.Set (x, y);\n\t\tthis.positionAdded = false;\n\t};\n\n\t/**\n\t* Function: Path2D.LineTo\n\t* Description: Draws a line from current position to the given position.\n\t* Parameters:\n\t*\tx {number} line end x position\n\t*\ty {number} line end y position\n\t*/\n\tJSM.Path2D.prototype.LineTo = function (x, y)\n\t{\n\t\tif (!this.positionAdded) {\n\t\t\tthis.AddPolygonPoint (this.position.x, this.position.y);\n\t\t}\n\t\tthis.AddPolygonPoint (x, y);\n\t};\n\n\t/**\n\t* Function: Path2D.CubicBezierTo\n\t* Description: Draws a cubic bezier curve from the current position to the given position.\n\t* Parameters:\n\t*\tx {number} curve end x position\n\t*\ty {number} curve end y position\n\t*\tcp1x {number} first control point x position\n\t*\tcp1y {number} first control point y position\n\t*\tcp2x {number} second control point x position\n\t*\tcp2y {number} second control point y position\n\t*/\n\tJSM.Path2D.prototype.CubicBezierTo = function (x, y, cp1x, cp1y, cp2x, cp2y)\n\t{\n\t\tvar bezierPoints = JSM.GenerateCubicBezierCurve (\n\t\t\tnew JSM.Coord2D (this.position.x, this.position.y),\n\t\t\tnew JSM.Coord2D (cp1x, cp1y),\n\t\t\tnew JSM.Coord2D (cp2x, cp2y),\n\t\t\tnew JSM.Coord2D (x, y),\n\t\t\tthis.settings.segmentation\n\t\t);\n\t\tvar i;\n\t\tfor (i = 1; i < bezierPoints.length; i++) {\n\t\t\tthis.LineTo (bezierPoints[i].x, bezierPoints[i].y);\n\t\t}\n\t};\n\n\t/**\n\t* Function: Path2D.Close\n\t* Description: Closes the current polygon.\n\t*/\n\tJSM.Path2D.prototype.Close = function ()\n\t{\n\t\tfunction CheckAndCorrectPolygon (polygon)\n\t\t{\n\t\t\tif (polygon.VertexCount () === 0) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\tif (polygon.GetVertex (0).IsEqual (polygon.GetVertex (polygon.VertexCount () - 1))) {\n\t\t\t\tpolygon.RemoveVertex (polygon.VertexCount () - 1);\n\t\t\t}\n\t\t\tif (polygon.VertexCount () < 3) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\treturn true;\n\t\t}\n\t\t\n\t\tfunction FindBasePolygon (polygons, polygon)\n\t\t{\n\t\t\tfunction IsBasePolygon (basePolygon, polygon)\n\t\t\t{\n\t\t\t\tbaseOrientation = baseContour.GetOrientation ();\n\t\t\t\tpolygonOrientation = polygon.GetOrientation ();\n\t\t\t\tif (baseOrientation !== polygonOrientation) {\n\t\t\t\t\tvar firstVertex = polygon.GetVertex (0);\n\t\t\t\t\tvar firstVertexPosition = baseContour.CoordPosition (firstVertex);\n\t\t\t\t\tif (firstVertexPosition == JSM.CoordPolygonPosition2D.Inside) {\n\t\t\t\t\t\treturn true;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\t\n\t\t\tvar i, baseContour, baseOrientation, polygonOrientation;\n\t\t\tfor (i = polygons.length - 1; i >= 0; i--) {\n\t\t\t\tbaseContour = polygons[i].GetContour (0);\n\t\t\t\tif (IsBasePolygon (baseContour, polygon)) {\n\t\t\t\t\treturn polygons[i];\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn null;\n\t\t}\n\n\t\tif (this.currentPolygon !== null) {\n\t\t\tif (CheckAndCorrectPolygon (this.currentPolygon)) {\n\t\t\t\tvar basePolygon = FindBasePolygon (this.polygons, this.currentPolygon);\n\t\t\t\tif (basePolygon === null) {\n\t\t\t\t\tvar contourPolygon = new JSM.ContourPolygon2D ();\n\t\t\t\t\tcontourPolygon.AddContour (this.currentPolygon);\n\t\t\t\t\tthis.polygons.push (contourPolygon);\n\t\t\t\t} else {\n\t\t\t\t\tbasePolygon.AddContour (this.currentPolygon);\n\t\t\t\t}\n\t\t\t}\n\t\t\tthis.currentPolygon = null;\n\t\t}\n\t};\t\t\t\n\n\t/**\n\t* Function: Path2D.PolygonCount\n\t* Description: Returns the polygon count of the path.\n\t* Returns:\n\t*\t{integer} the result\n\t*/\n\tJSM.Path2D.prototype.PolygonCount = function ()\n\t{\n\t\treturn this.polygons.length;\n\t};\n\n\t/**\n\t* Function: Path2D.GetPolygon\n\t* Description: Returns the polygons from the path at the given index.\n\t* Parameters:\n\t*\tindex {integer} the polygon index\n\t* Returns:\n\t*\t{ContourPolygon2D} the result\n\t*/\n\tJSM.Path2D.prototype.GetPolygon = function (index)\n\t{\n\t\treturn this.polygons[index];\n\t};\n\n\t/**\n\t* Function: Path2D.GetPolygons\n\t* Description: Returns the polygons from the path.\n\t* Returns:\n\t*\t{ContourPolygon2D[*]} the result\n\t*/\n\tJSM.Path2D.prototype.GetPolygons = function ()\n\t{\n\t\treturn this.polygons;\n\t};\n\n\t/**\n\t* Function: Path2D.GetCurrentPolygon\n\t* Description: Returns the current polygon.\n\t* Returns:\n\t*\t{Polygon2D} the result\n\t*/\n\tJSM.Path2D.prototype.GetCurrentPolygon = function ()\n\t{\n\t\tif (this.currentPolygon === null) {\n\t\t\tthis.currentPolygon = new JSM.Polygon2D ();\n\t\t}\n\t\treturn this.currentPolygon;\n\t};\t\t\n\n\t/**\n\t* Function: Path2D.AddPolygonPoint\n\t* Description: Adds a point to the current polygon.\n\t* Parameters:\n\t*\tx {number} the x position of the point\n\t*\ty {number} the y position of the point\n\t*/\n\tJSM.Path2D.prototype.AddPolygonPoint = function (x, y)\n\t{\n\t\tvar polygon = this.GetCurrentPolygon ();\n\t\tvar polygonX = this.settings.offset.x + x * this.settings.scale.x;\n\t\tvar polygonY = this.settings.offset.y + y * this.settings.scale.y;\n\t\tpolygon.AddVertex (polygonX, polygonY);\n\t\tthis.position.Set (x, y);\n\t\tthis.positionAdded = true;\n\t};\n\n\treturn JSM;\n});\n"]}