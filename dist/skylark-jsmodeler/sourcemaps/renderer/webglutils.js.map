{"version":3,"sources":["renderer/webglutils.js"],"names":["define","JSM","IsPowerOfTwo","x","NextPowerOfTwo","result","ResizeImageToPowerOfTwoSides","image","width","height","canvas","document","createElement","context","getContext","drawImage","getImageData","WebGLInitContext","undefined","viewport","clearColor","WebGLInitShaderProgram","vertexShader","fragmentShader","onError","CompileShader","script","type","shader","createShader","shaderSource","compileShader","getShaderParameter","COMPILE_STATUS","getShaderInfoLog","fragmentShaderScript","vertexShaderScript","FRAGMENT_SHADER","VERTEX_SHADER","shaderProgram","createProgram","attachShader","linkProgram","getProgramParameter","LINK_STATUS","CreateShader","useProgram","WebGLGetFloatTextureBufferSize","array","Math","ceil","sqrt","length","WebGLCreateFloatTextureBuffer","size","floatArray","push","Float32Array","textureBuffer","createTexture","bindTexture","TEXTURE_2D","texParameteri","TEXTURE_MIN_FILTER","NEAREST","TEXTURE_MAG_FILTER","TEXTURE_WRAP_S","CLAMP_TO_EDGE","TEXTURE_WRAP_T","texImage2D","RGBA","FLOAT"],"mappings":"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","file":"../../renderer/webglutils.js","sourcesContent":["define([\"../core/jsm\"],function(JSM){\n\tJSM.IsPowerOfTwo = function (x)\n\t{\n\t\treturn (x & (x - 1) === 0);\n\t};\n\n\tJSM.NextPowerOfTwo = function (x)\n\t{\n\t\tif (JSM.IsPowerOfTwo (x)) {\n\t\t\treturn x;\n\t\t}\n\n\t\tvar result = 1;\n\t\twhile (result < x) {\n\t\t\tresult *= 2;\n\t\t}\n\t\treturn result;\n\t};\n\n\tJSM.ResizeImageToPowerOfTwoSides = function (image)\n\t{\n\t\tif (JSM.IsPowerOfTwo (image.width) && !JSM.IsPowerOfTwo (image.height)) {\n\t\t\treturn image;\n\t\t}\n\t\t\n\t\tvar width = JSM.NextPowerOfTwo (image.width);\n\t\tvar height = JSM.NextPowerOfTwo (image.height);\n\n\t\tvar canvas = document.createElement ('canvas');\n\t\tcanvas.width = width;\n\t\tcanvas.height = height;\n\t\t\n\t\tvar context = canvas.getContext ('2d');\n\t\tcontext.drawImage (image, 0, 0, width, height);\n\t\treturn context.getImageData (0, 0, width, height);\n\t};\n\n\tJSM.WebGLInitContext = function (canvas)\n\t{\n\t\tif (canvas === null) {\n\t\t\treturn null;\n\t\t}\n\t\t\n\t\tif (canvas.getContext === undefined) {\n\t\t\treturn null;\n\t\t}\n\t\t\n\t\tvar context = canvas.getContext ('webgl') || canvas.getContext ('experimental-webgl');\n\t\tif (context === null) {\n\t\t\treturn null;\n\t\t}\n\t\t\n\t\tcontext.viewport (0, 0, canvas.width, canvas.height);\n\t\tcontext.clearColor (1.0, 1.0, 1.0, 1.0);\n\t\treturn context;\n\t};\n\n\tJSM.WebGLInitShaderProgram = function (context, vertexShader, fragmentShader, onError)\n\t{\n\t\tfunction CompileShader (context, script, type, onError)\n\t\t{\n\t\t\tvar shader = context.createShader (type);\n\t\t\tcontext.shaderSource (shader, script);\n\t\t\tcontext.compileShader (shader);\n\t\t\tif (!context.getShaderParameter (shader, context.COMPILE_STATUS)) {\n\t\t\t\tif (onError !== undefined && onError !== null) {\n\t\t\t\t\tonError (context.getShaderInfoLog (shader));\n\t\t\t\t}\n\t\t\t\treturn null;\n\t\t\t}\n\t\t\treturn shader;\n\t\t}\n\t\t\n\t\tfunction CreateShader (context, fragmentShaderScript, vertexShaderScript, onError)\n\t\t{\n\t\t\tvar fragmentShader = CompileShader (context, fragmentShaderScript, context.FRAGMENT_SHADER, onError);\n\t\t\tvar vertexShader = CompileShader (context, vertexShaderScript, context.VERTEX_SHADER, onError);\n\t\t\tif (fragmentShader === null || vertexShader === null) {\n\t\t\t\treturn null;\n\t\t\t}\n\n\t\t\tvar shaderProgram = context.createProgram ();\n\t\t\tcontext.attachShader (shaderProgram, vertexShader);\n\t\t\tcontext.attachShader (shaderProgram, fragmentShader);\n\t\t\tcontext.linkProgram (shaderProgram);\n\t\t\tif (!context.getProgramParameter (shaderProgram, context.LINK_STATUS)) {\n\t\t\t\treturn null;\n\t\t\t}\n\t\t\t\n\t\t\treturn shaderProgram;\n\t\t}\n\t\t\n\t\tvar shader = CreateShader (context, fragmentShader, vertexShader, onError);\n\t\tif (shader === null) {\n\t\t\treturn null;\n\t\t}\n\t\t\n\t\tcontext.useProgram (shader);\n\t\treturn shader;\n\t};\n\n\tJSM.WebGLGetFloatTextureBufferSize = function (array)\n\t{\n\t\treturn JSM.NextPowerOfTwo (Math.ceil (Math.sqrt (array.length / 4.0)));\n\t};\n\n\tJSM.WebGLCreateFloatTextureBuffer = function (context, array, size)\n\t{\n\t\tvar floatArray = null;\n\t\tif (array !== null) {\n\t\t\twhile (array.length < size * size * 4) {\n\t\t\t\tarray.push (0.0);\n\t\t\t}\n\t\t\tfloatArray = new Float32Array (array);\n\t\t}\n\t\tvar textureBuffer = context.createTexture ();\n\t\tcontext.bindTexture (context.TEXTURE_2D, textureBuffer);\n\t\tcontext.texParameteri (context.TEXTURE_2D, context.TEXTURE_MIN_FILTER, context.NEAREST);\n\t\tcontext.texParameteri (context.TEXTURE_2D, context.TEXTURE_MAG_FILTER, context.NEAREST);\n\t\tcontext.texParameteri (context.TEXTURE_2D, context.TEXTURE_WRAP_S, context.CLAMP_TO_EDGE);\n\t\tcontext.texParameteri (context.TEXTURE_2D, context.TEXTURE_WRAP_T, context.CLAMP_TO_EDGE);\n\t\tcontext.texImage2D (context.TEXTURE_2D, 0, context.RGBA, size, size, 0, context.RGBA, context.FLOAT, floatArray);\n\t\tcontext.bindTexture (context.TEXTURE_2D, null);\n\t\treturn textureBuffer;\n\t};\n\n\treturn JSM;\n});\n"]}