{"version":3,"sources":["renderer/renderconverter.js"],"names":["define","JSM","ConvertBodyToRenderBody","body","materials","parameters","MaterialToRenderMaterial","material","materialType","renderAmbient","HexColorToNormalizedRGBComponents","ambient","renderDiffuse","diffuse","renderSpecular","specular","RenderMaterial","shininess","opacity","singleSided","pointSize","texture","hasConvexPolygons","undefined","renderBody","RenderBody","vertices","normals","uvs","explodeData","onPointGeometryStart","onPointGeometryEnd","renderMaterial","RenderMaterialFlags","Point","mesh","RenderMesh","SetVertexArray","AddMesh","onPoint","vertex","push","x","y","z","onLineGeometryStart","onLineGeometryEnd","Line","onLine","begVertex","endVertex","onGeometryStart","onGeometryEnd","Triangle","Textured","Transparent","SetNormalArray","SetUVArray","onTriangle","vertex1","vertex2","vertex3","normal1","normal2","normal3","uv1","uv2","uv3","ExplodeBody","ConvertModelToRenderBodies","model","i","bodies","GetMaterialSet","BodyCount","GetBody","ConvertJSONDataToRenderBodies","jsonData","asyncCallbacks","meshes","meshIndex","resultBodies","ConvertTrianglesToRenderMesh","triangles","GetTextureCoordinate","u","v","offset","scale","rotation","result","Vector2D","IsZero","si","Math","sin","DegRad","co","cos","AppendTriangleCoords","targetArray","sourceArray","indexArray","startIndex","componentCount","vertexIndex","sourceVertexIndex","componentIndex","hasTexture","SetType","renderMesh","vertexArray","normalArray","uvArray","length","transformedUV","ConvertMeshToRenderBody","AsyncRunTask"],"mappings":"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","file":"../../renderer/renderconverter.js","sourcesContent":["define([\"../core/jsm\"],function(JSM){\n\tJSM.ConvertBodyToRenderBody = function (body, materials, parameters)\n\t{\n\t\tfunction MaterialToRenderMaterial (material, materialType)\n\t\t{\n\t\t\tvar renderAmbient = JSM.HexColorToNormalizedRGBComponents (material.ambient);\n\t\t\tvar renderDiffuse = JSM.HexColorToNormalizedRGBComponents (material.diffuse);\n\t\t\tvar renderSpecular = JSM.HexColorToNormalizedRGBComponents (material.specular);\n\t\t\tvar renderMaterial = new JSM.RenderMaterial (materialType, {\n\t\t\t\tambient : renderAmbient,\n\t\t\t\tdiffuse : renderDiffuse,\n\t\t\t\tspecular : renderSpecular,\n\t\t\t\tshininess : material.shininess,\n\t\t\t\topacity : material.opacity,\n\t\t\t\tsingleSided : material.singleSided,\n\t\t\t\tpointSize : material.pointSize,\n\t\t\t\ttexture : material.texture\n\t\t\t});\n\t\t\treturn renderMaterial;\n\t\t}\n\t\t\n\t\tvar hasConvexPolygons = false;\n\t\tif (parameters !== undefined && parameters !== null) {\n\t\t\tif (parameters.hasConvexPolygons !== undefined && parameters.hasConvexPolygons !== null) {\n\t\t\t\thasConvexPolygons = parameters.hasConvexPolygons;\n\t\t\t}\n\t\t}\n\t\t\n\t\tvar renderBody = new JSM.RenderBody ();\n\t\t\n\t\tvar vertices = null;\n\t\tvar normals = null;\n\t\tvar uvs = null;\n\t\t\n\t\tvar explodeData = {\n\t\t\thasConvexPolygons : hasConvexPolygons,\n\t\t\tonPointGeometryStart : function () {\n\t\t\t\tvertices = [];\n\t\t\t\tnormals = null;\n\t\t\t\tuvs = null;\n\t\t\t},\t\t\n\t\t\tonPointGeometryEnd : function (material) {\n\t\t\t\tvar materialType = JSM.RenderMaterialFlags.Point;\n\t\t\t\tvar renderMaterial = MaterialToRenderMaterial (material, materialType);\n\t\t\t\tvar mesh = new JSM.RenderMesh (renderMaterial);\n\t\t\t\tmesh.SetVertexArray (vertices);\n\t\t\t\trenderBody.AddMesh (mesh);\n\t\t\t},\n\t\t\tonPoint : function (vertex) {\n\t\t\t\tvertices.push (vertex.x, vertex.y, vertex.z);\n\t\t\t},\t\t\n\t\t\tonLineGeometryStart : function () {\n\t\t\t\tvertices = [];\n\t\t\t\tnormals = null;\n\t\t\t\tuvs = null;\n\t\t\t},\n\t\t\tonLineGeometryEnd : function (material) {\n\t\t\t\tvar materialType = JSM.RenderMaterialFlags.Line;\n\t\t\t\tvar renderMaterial = MaterialToRenderMaterial (material, materialType);\n\t\t\t\tvar mesh = new JSM.RenderMesh (renderMaterial);\n\t\t\t\tmesh.SetVertexArray (vertices);\n\t\t\t\trenderBody.AddMesh (mesh);\n\t\t\t},\n\t\t\tonLine : function (begVertex, endVertex) {\n\t\t\t\tvertices.push (begVertex.x, begVertex.y, begVertex.z);\n\t\t\t\tvertices.push (endVertex.x, endVertex.y, endVertex.z);\n\t\t\t},\t\t\n\t\t\tonGeometryStart : function () {\n\t\t\t\tvertices = [];\n\t\t\t\tnormals = [];\n\t\t\t\tuvs = [];\n\t\t\t},\n\t\t\tonGeometryEnd : function (material) {\n\t\t\t\tvar materialType = JSM.RenderMaterialFlags.Triangle;\n\t\t\t\tif (material.texture !== null) {\n\t\t\t\t\tmaterialType += JSM.RenderMaterialFlags.Textured;\n\t\t\t\t}\n\t\t\t\tif (material.opacity < 1.0) {\n\t\t\t\t\tmaterialType += JSM.RenderMaterialFlags.Transparent;\n\t\t\t\t}\n\n\t\t\t\tvar renderMaterial = MaterialToRenderMaterial (material, materialType);\n\t\t\t\tvar mesh = new JSM.RenderMesh (renderMaterial);\n\t\t\t\tmesh.SetVertexArray (vertices);\n\t\t\t\tmesh.SetNormalArray (normals);\n\t\t\t\tif (material.texture !== null) {\n\t\t\t\t\tmesh.SetUVArray (uvs);\n\t\t\t\t}\n\n\t\t\t\trenderBody.AddMesh (mesh);\n\t\t\t},\n\t\t\tonTriangle : function (vertex1, vertex2, vertex3, normal1, normal2, normal3, uv1, uv2, uv3) {\n\t\t\t\tvertices.push (vertex1.x, vertex1.y, vertex1.z);\n\t\t\t\tvertices.push (vertex2.x, vertex2.y, vertex2.z);\n\t\t\t\tvertices.push (vertex3.x, vertex3.y, vertex3.z);\n\t\t\t\t\n\t\t\t\tnormals.push (normal1.x, normal1.y, normal1.z);\n\t\t\t\tnormals.push (normal2.x, normal2.y, normal2.z);\n\t\t\t\tnormals.push (normal3.x, normal3.y, normal3.z);\n\t\t\t\t\n\t\t\t\tif (uv1 !== null && uv2 !== null && uv3 !== null) {\n\t\t\t\t\tuvs.push (uv1.x, uv1.y);\n\t\t\t\t\tuvs.push (uv2.x, uv2.y);\n\t\t\t\t\tuvs.push (uv3.x, uv3.y);\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\t\t\n\t\tJSM.ExplodeBody (body, materials, explodeData);\n\t\treturn renderBody;\n\t};\n\n\tJSM.ConvertModelToRenderBodies = function (model, parameters)\n\t{\n\t\tvar bodies = [];\n\t\tvar materials = model.GetMaterialSet ();\n\t\tvar i, body, renderBody;\n\t\tfor (i = 0; i < model.BodyCount (); i++) {\n\t\t\tbody = model.GetBody (i);\n\t\t\trenderBody = JSM.ConvertBodyToRenderBody (body, materials, parameters);\n\t\t\tbodies.push (renderBody);\n\t\t}\n\t\treturn bodies;\n\t};\n\n\tJSM.ConvertJSONDataToRenderBodies = function (jsonData, asyncCallbacks)\n\t{\n\t\tfunction ConvertMeshToRenderBody (mesh, materials)\n\t\t{\n\t\t\tfunction ConvertTrianglesToRenderMesh (mesh, triangles, materials)\n\t\t\t{\n\t\t\t\tfunction GetTextureCoordinate (u, v, offset, scale, rotation)\n\t\t\t\t{\n\t\t\t\t\tvar result = new JSM.Vector2D (u, v);\n\t\t\t\t\tif (!JSM.IsZero (rotation)) {\n\t\t\t\t\t\tvar si = Math.sin (rotation * JSM.DegRad);\n\t\t\t\t\t\tvar co = Math.cos (rotation * JSM.DegRad);\n\t\t\t\t\t\tresult.x = co * u - si * v;\n\t\t\t\t\t\tresult.y = si * u + co * v;\n\t\t\t\t\t}\n\t\t\t\t\tresult.x = offset[0] + result.x * scale[0];\n\t\t\t\t\tresult.y = offset[1] + result.y * scale[1];\n\t\t\t\t\treturn result;\n\t\t\t\t}\n\n\t\t\t\tfunction AppendTriangleCoords (targetArray, sourceArray, indexArray, startIndex, componentCount)\n\t\t\t\t{\n\t\t\t\t\tvar vertexIndex, sourceVertexIndex, componentIndex;\n\t\t\t\t\tfor (vertexIndex = 0; vertexIndex < 3; vertexIndex++) {\n\t\t\t\t\t\tsourceVertexIndex = indexArray[startIndex + vertexIndex];\n\t\t\t\t\t\tfor (componentIndex = 0; componentIndex < componentCount; componentIndex++) {\n\t\t\t\t\t\t\ttargetArray.push (sourceArray[sourceVertexIndex * componentCount + componentIndex]);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tvar material = materials[triangles.material];\n\t\t\t\tvar renderMaterial = new JSM.RenderMaterial (JSM.RenderMaterialFlags.Triangle, {\n\t\t\t\t\tambient : material.ambient || [1.0, 1.0, 1.0],\n\t\t\t\t\tdiffuse : material.diffuse || [1.0, 1.0, 1.0],\n\t\t\t\t\tspecular : material.specular || [1.0, 1.0, 1.0],\n\t\t\t\t\tshininess : material.shininess || 0.0,\n\t\t\t\t\topacity : material.opacity || 1.0,\n\t\t\t\t});\n\t\t\t\t\n\t\t\t\tvar hasTexture = (material.texture !== undefined && material.texture !== null);\n\t\t\t\tif (hasTexture) {\n\t\t\t\t\trenderMaterial.SetType (JSM.RenderMaterialFlags.Triangle + JSM.RenderMaterialFlags.Textured);\n\t\t\t\t\trenderMaterial.texture = material.texture;\n\t\t\t\t\trenderMaterial.ambient = [1.0, 1.0, 1.0];\n\t\t\t\t\trenderMaterial.diffuse = [1.0, 1.0, 1.0];\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tvar renderMesh = new JSM.RenderMesh (renderMaterial);\n\t\t\t\tvar vertexArray = [];\n\t\t\t\tvar normalArray = [];\n\t\t\t\tvar uvArray = [];\n\t\t\t\t\n\t\t\t\tvar i;\n\t\t\t\tfor\t(i = 0; i < triangles.parameters.length; i += 9) {\n\t\t\t\t\tAppendTriangleCoords (vertexArray, mesh.vertices, triangles.parameters, i, 3);\n\t\t\t\t\tAppendTriangleCoords (normalArray, mesh.normals, triangles.parameters, i + 3, 3);\n\t\t\t\t\tAppendTriangleCoords (uvArray, mesh.uvs, triangles.parameters, i + 6, 2);\n\t\t\t\t}\n\n\t\t\t\tif (hasTexture) {\n\t\t\t\t\tvar offset = material.offset || [0.0, 0.0];\n\t\t\t\t\tvar scale = material.scale || [1.0, 1.0];\n\t\t\t\t\tvar rotation = material.rotation || 0.0;\n\t\t\t\t\tvar transformedUV;\n\t\t\t\t\tfor\t(i = 0; i < uvArray.length; i += 2) {\n\t\t\t\t\t\ttransformedUV = GetTextureCoordinate (uvArray[i + 0], uvArray[i + 1], offset, scale, rotation);\n\t\t\t\t\t\tuvArray[i + 0] = transformedUV.x;\n\t\t\t\t\t\tuvArray[i + 1] = -transformedUV.y;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\trenderMesh.SetVertexArray (vertexArray);\n\t\t\t\trenderMesh.SetNormalArray (normalArray);\n\t\t\t\trenderMesh.SetUVArray (uvArray);\n\t\t\t\treturn renderMesh;\n\t\t\t}\n\t\t\t\n\t\t\tvar renderBody = new JSM.RenderBody ();\n\t\t\tvar i, triangles, renderMesh;\n\t\t\tfor (i = 0; i < mesh.triangles.length; i++) {\n\t\t\t\ttriangles = mesh.triangles[i];\n\t\t\t\trenderMesh = ConvertTrianglesToRenderMesh (mesh, triangles, materials);\n\t\t\t\trenderBody.AddMesh (renderMesh);\n\t\t\t}\n\t\t\treturn renderBody;\n\t\t}\n\t\t\n\t\tfunction AddMesh (meshes, materials, meshIndex, resultBodies)\n\t\t{\n\t\t\tvar renderBody = ConvertMeshToRenderBody (meshes[meshIndex], materials);\n\t\t\tresultBodies.push (renderBody);\n\t\t}\n\t\t\n\t\tvar resultBodies = [];\n\n\t\tvar materials = jsonData.materials;\n\t\tif (materials === undefined) {\n\t\t\treturn resultBodies;\n\t\t}\n\t\t\n\t\tvar meshes = jsonData.meshes;\n\t\tif (meshes === undefined) {\n\t\t\treturn resultBodies;\n\t\t}\n\t\t\n\t\tvar meshIndex = 0;\n\t\tJSM.AsyncRunTask (\n\t\t\tfunction () {\n\t\t\t\tAddMesh (meshes, materials, meshIndex, resultBodies);\n\t\t\t\tmeshIndex = meshIndex + 1;\n\t\t\t\treturn true;\n\t\t\t},\n\t\t\tasyncCallbacks,\n\t\t\tmeshes.length, 0, resultBodies\n\t\t);\n\n\t\treturn resultBodies;\n\t};\n\n\treturn JSM;\n});\n"]}