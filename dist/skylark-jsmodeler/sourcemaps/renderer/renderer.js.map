{"version":3,"sources":["renderer/renderer.js"],"names":["define","JSM","Renderer","this","canvas","context","shader","ambientLight","directionalLights","bodies","prototype","Init","IsWebGLEnabled","InitContext","InitView","InitShaders","InitLights","InitBodies","undefined","getContext","WebGLInitContext","ShaderProgram","RenderAmbientLight","SetClearColor","red","green","blue","clearColor","SetAmbientLight","light","AddLight","maxLightCount","GetMaxLightCount","length","push","RemoveLight","index","indexOf","splice","RemoveLights","GetLight","AddBody","renderBody","textureLoaded","EnumerateMeshes","mesh","CompileMaterial","GetMaterial","CompileMesh","AddBodies","renderBodies","i","body","EnumerateBodies","onBodyFound","RemoveBody","RemoveBodies","GetBody","Resize","viewport","width","height","FindObjects","camera","screenX","screenY","screenCoord","Coord","aspectRatio","viewPort","unprojected","Unproject","eye","center","up","fieldOfView","DegRad","nearClippingPlane","farClippingPlane","ray","Ray","CoordSub","result","transformation","GetTransformation","EnumerateMeshesWithFlag","RenderMaterialFlags","Triangle","v0","v1","v2","intersection","vertexCount","VertexCount","GetTransformedVertex","RayTriangleIntersection","renderMesh","triangleIndex","parseInt","sort","a","b","distance","Render","DrawMeshes","renderer","materialType","viewMatrix","projectionMatrix","shaderType","HasTypedMeshes","matrix","GetTransformationMatrix","EnumerateTypedMeshes","HasFlag","type","flag","Textured","ShaderType","TexturedTriangle","Line","Point","MaterialTypeToShaderType","UseShader","SetParameters","material","vertexBuffer","GetVertexBuffer","normalBuffer","GetNormalBuffer","uvBuffer","GetUVBuffer","DrawArrays","clear","COLOR_BUFFER_BIT","DEPTH_BUFFER_BIT","MatrixView","MatrixPerspective","Transparent"],"mappings":"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","file":"../../renderer/renderer.js","sourcesContent":["define([\"../core/jsm\"],function(JSM){\n\tJSM.Renderer = function ()\n\t{\n\t\tthis.canvas = null;\n\t\tthis.context = null;\n\t\tthis.shader = null;\n\t\t\n\t\tthis.ambientLight = null;\n\t\tthis.directionalLights = null;\n\t\tthis.bodies = null;\n\t};\n\n\tJSM.Renderer.prototype.Init = function (canvas)\n\t{\n\t\tif (!JSM.IsWebGLEnabled ()) {\n\t\t\treturn false;\n\t\t}\n\n\t\tif (!this.InitContext (canvas)) {\n\t\t\treturn false;\n\t\t}\n\n\t\tif (!this.InitView ()) {\n\t\t\treturn false;\n\t\t}\n\n\t\tif (!this.InitShaders ()) {\n\t\t\treturn false;\n\t\t}\n\n\t\tif (!this.InitLights ()) {\n\t\t\treturn false;\n\t\t}\t\n\t\t\n\t\tif (!this.InitBodies ()) {\n\t\t\treturn false;\n\t\t}\n\n\t\treturn true;\n\t};\n\n\tJSM.Renderer.prototype.InitContext = function (canvas)\n\t{\n\t\tthis.canvas = canvas;\n\t\tif (this.canvas === null) {\n\t\t\treturn false;\n\t\t}\n\t\t\n\t\tif (this.canvas.getContext === undefined) {\n\t\t\treturn false;\n\t\t}\n\n\t\tthis.context = this.canvas.getContext ('webgl') || this.canvas.getContext ('experimental-webgl');\n\t\tif (this.context === null) {\n\t\t\treturn false;\n\t\t}\n\n\t\tthis.context = JSM.WebGLInitContext (canvas);\n\t\tif (this.context === null) {\n\t\t\treturn false;\n\t\t}\n\n\t\treturn true;\n\t};\n\n\tJSM.Renderer.prototype.InitShaders = function ()\n\t{\n\t\tthis.shader = new JSM.ShaderProgram (this.context);\n\t\treturn this.shader.Init ();\n\t};\n\n\tJSM.Renderer.prototype.InitLights = function ()\n\t{\n\t\tthis.ambientLight = new JSM.RenderAmbientLight (0x000000);\n\t\tthis.directionalLights = [];\n\t\treturn true;\n\t};\n\n\tJSM.Renderer.prototype.InitBodies = function ()\n\t{\n\t\tthis.bodies = [];\n\t\treturn true;\n\t};\n\n\tJSM.Renderer.prototype.InitView = function ()\n\t{\n\t\tthis.directionalLights = [];\n\t\treturn true;\n\t};\n\n\tJSM.Renderer.prototype.SetClearColor = function (red, green, blue)\n\t{\n\t\tthis.context.clearColor (red, green, blue, 1.0);\n\t};\n\n\tJSM.Renderer.prototype.SetAmbientLight = function (light)\n\t{\n\t\tthis.ambientLight = light;\n\t};\n\n\tJSM.Renderer.prototype.AddLight = function (light)\n\t{\n\t\tvar maxLightCount = this.shader.GetMaxLightCount ();\n\t\tif (this.directionalLights.length >= maxLightCount) {\n\t\t\treturn -1;\n\t\t}\n\t\tthis.directionalLights.push (light);\n\t\treturn this.directionalLights.length - 1;\n\t};\n\n\tJSM.Renderer.prototype.RemoveLight = function (light)\n\t{\n\t\tvar index = this.directionalLights.indexOf (light);\n\t\tif (index != -1) {\n\t\t\tthis.directionalLights.splice (index, 1);\n\t\t}\n\t};\n\n\tJSM.Renderer.prototype.RemoveLights = function ()\n\t{\n\t\tthis.directionalLights = [];\n\t};\n\n\tJSM.Renderer.prototype.GetLight = function (index)\n\t{\n\t\treturn this.directionalLights[index];\n\t};\n\n\tJSM.Renderer.prototype.AddBody = function (renderBody, textureLoaded)\n\t{\n\t\tvar shader = this.shader;\n\t\trenderBody.EnumerateMeshes (function (mesh) {\n\t\t\tshader.CompileMaterial (mesh.GetMaterial (), textureLoaded);\n\t\t\tshader.CompileMesh (mesh);\n\t\t});\n\t\tthis.bodies.push (renderBody);\n\t};\n\n\tJSM.Renderer.prototype.AddBodies = function (renderBodies, textureLoaded)\n\t{\n\t\tvar i, body;\n\t\tfor (i = 0; i < renderBodies.length; i++) {\n\t\t\tbody = renderBodies[i];\n\t\t\tthis.AddBody (body, textureLoaded);\n\t\t}\n\t};\n\n\tJSM.Renderer.prototype.EnumerateBodies = function (onBodyFound)\n\t{\n\t\tvar i;\n\t\tfor (i = 0; i < this.bodies.length; i++) {\n\t\t\tonBodyFound (this.bodies[i]);\n\t\t}\n\t};\n\n\tJSM.Renderer.prototype.RemoveBody = function (body)\n\t{\n\t\tvar index = this.bodies.indexOf (body);\n\t\tif (index != -1) {\n\t\t\tthis.bodies.splice (index, 1);\n\t\t}\n\t};\n\n\tJSM.Renderer.prototype.RemoveBodies = function ()\n\t{\n\t\tthis.bodies = [];\n\t};\n\n\tJSM.Renderer.prototype.GetBody = function (index)\n\t{\n\t\treturn this.bodies[index];\n\t};\n\n\tJSM.Renderer.prototype.Resize = function ()\n\t{\n\t\tthis.context.viewport (0, 0, this.canvas.width, this.canvas.height);\n\t};\n\n\tJSM.Renderer.prototype.FindObjects = function (camera, screenX, screenY)\n\t{\n\t\tvar screenCoord = new JSM.Coord (screenX, this.canvas.height - screenY, 0.5);\n\t\tvar aspectRatio = this.canvas.width / this.canvas.height;\n\t\tvar viewPort = [0, 0, this.canvas.width, this.canvas.height];\n\t\tvar unprojected = JSM.Unproject (screenCoord, camera.eye, camera.center, camera.up, camera.fieldOfView * JSM.DegRad, aspectRatio, camera.nearClippingPlane, camera.farClippingPlane, viewPort);\n\t\tvar ray = new JSM.Ray (camera.eye, JSM.CoordSub (unprojected, camera.eye), null);\n\t\t\n\t\tvar result = [];\n\t\tthis.EnumerateBodies (function (body) {\n\t\t\tvar transformation = body.GetTransformation ();\n\t\t\tbody.EnumerateMeshesWithFlag (JSM.RenderMaterialFlags.Triangle, function (mesh) {\n\t\t\t\tvar vertexCount = mesh.VertexCount ();\n\t\t\t\tvar i, v0, v1, v2, intersection;\n\t\t\t\tfor (i = 0; i < vertexCount; i += 3) {\n\t\t\t\t\tv0 = mesh.GetTransformedVertex (i + 0, transformation);\n\t\t\t\t\tv1 = mesh.GetTransformedVertex (i + 1, transformation);\n\t\t\t\t\tv2 = mesh.GetTransformedVertex (i + 2, transformation);\n\t\t\t\t\tintersection = JSM.RayTriangleIntersection (ray, v0, v1, v2);\n\t\t\t\t\tif (intersection !== null) {\n\t\t\t\t\t\tresult.push ({\n\t\t\t\t\t\t\trenderBody : body,\n\t\t\t\t\t\t\trenderMesh : mesh,\n\t\t\t\t\t\t\ttriangleIndex : parseInt (i / 3, 10),\n\t\t\t\t\t\t\tintersection : intersection\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\t\t});\n\t\tresult.sort (function (a, b) {\n\t\t\treturn a.intersection.distance - b.intersection.distance;\n\t\t});\n\t\treturn result;\n\t};\n\n\tJSM.Renderer.prototype.Render = function (camera)\n\t{\n\t\tfunction DrawMeshes (renderer, materialType, viewMatrix, projectionMatrix)\n\t\t{\n\t\t\tfunction MaterialTypeToShaderType (materialType)\n\t\t\t{\n\t\t\t\tfunction HasFlag (type, flag)\n\t\t\t\t{\n\t\t\t\t\treturn type & flag;\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tif (HasFlag (materialType, JSM.RenderMaterialFlags.Triangle)) {\n\t\t\t\t\tif (HasFlag (materialType, JSM.RenderMaterialFlags.Textured)) {\n\t\t\t\t\t\treturn JSM.ShaderType.TexturedTriangle;\n\t\t\t\t\t} else if (!HasFlag (materialType, JSM.RenderMaterialFlags.Textured)) {\n\t\t\t\t\t\treturn JSM.ShaderType.Triangle;\n\t\t\t\t\t}\n\t\t\t\t} else if (HasFlag (materialType, JSM.RenderMaterialFlags.Line)) {\n\t\t\t\t\treturn JSM.ShaderType.Line;\n\t\t\t\t} else if (HasFlag (materialType, JSM.RenderMaterialFlags.Point)) {\n\t\t\t\t\treturn JSM.ShaderType.Point;\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\treturn null;\n\t\t\t}\n\n\t\t\tvar shaderType = null;\n\t\t\trenderer.EnumerateBodies (function (body) {\n\t\t\t\tif (body.HasTypedMeshes (materialType)) {\n\t\t\t\t\tvar matrix = body.GetTransformationMatrix ();\n\t\t\t\t\tbody.EnumerateTypedMeshes (materialType, function (mesh) {\n\t\t\t\t\t\tif (shaderType === null) {\n\t\t\t\t\t\t\tshaderType = MaterialTypeToShaderType (materialType);\n\t\t\t\t\t\t\trenderer.shader.UseShader (shaderType);\n\t\t\t\t\t\t\trenderer.shader.SetParameters (renderer.ambientLight, renderer.directionalLights, viewMatrix, projectionMatrix);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tvar material = mesh.GetMaterial ();\n\t\t\t\t\t\tvar vertexBuffer = mesh.GetVertexBuffer ();\n\t\t\t\t\t\tvar normalBuffer = mesh.GetNormalBuffer ();\n\t\t\t\t\t\tvar uvBuffer = mesh.GetUVBuffer ();\n\t\t\t\t\t\trenderer.shader.DrawArrays (material, matrix, vertexBuffer, normalBuffer, uvBuffer);\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\n\t\tthis.context.clear (this.context.COLOR_BUFFER_BIT | this.context.DEPTH_BUFFER_BIT);\n\t\t\n\t\tvar viewMatrix = JSM.MatrixView (camera.eye, camera.center, camera.up);\n\t\tvar projectionMatrix = JSM.MatrixPerspective (camera.fieldOfView * JSM.DegRad, this.canvas.width / this.canvas.height, camera.nearClippingPlane, camera.farClippingPlane);\n\n\t\tDrawMeshes (this, JSM.RenderMaterialFlags.Triangle, viewMatrix, projectionMatrix);\n\t\tDrawMeshes (this, JSM.RenderMaterialFlags.Triangle + JSM.RenderMaterialFlags.Textured, viewMatrix, projectionMatrix);\n\t\tDrawMeshes (this, JSM.RenderMaterialFlags.Line, viewMatrix, projectionMatrix);\n\t\tDrawMeshes (this, JSM.RenderMaterialFlags.Point, viewMatrix, projectionMatrix);\n\t\tDrawMeshes (this, JSM.RenderMaterialFlags.Triangle + JSM.RenderMaterialFlags.Transparent, viewMatrix, projectionMatrix);\n\t\tDrawMeshes (this, JSM.RenderMaterialFlags.Triangle + JSM.RenderMaterialFlags.Transparent + JSM.RenderMaterialFlags.Textured, viewMatrix, projectionMatrix);\n\t};\n\n\treturn JSM;\n});\n"]}