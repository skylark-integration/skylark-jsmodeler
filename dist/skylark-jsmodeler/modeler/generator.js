/**
 * skylark-jsmodeler - A version of jsmodeler that ported to running on skylarkjs
 * @author Hudaokeji, Inc.
 * @version v0.9.0
 * @link https://github.com/skylark-integration/skylark-jsmodeler/
 * @license MIT
 */
define(["../core/jsm"],function(o){return o.GenerateRectangle=function(e,r){var n=new o.Body,d=e/2,t=r/2;return n.AddVertex(new o.BodyVertex(new o.Coord(-d,-t,0))),n.AddVertex(new o.BodyVertex(new o.Coord(d,-t,0))),n.AddVertex(new o.BodyVertex(new o.Coord(d,t,0))),n.AddVertex(new o.BodyVertex(new o.Coord(-d,t,0))),n.AddPolygon(new o.BodyPolygon([0,1,2,3])),n.SetCubicTextureProjection(new o.Coord(-d,-t,0),new o.Coord(1,0,0),new o.Coord(0,1,0),new o.Coord(0,0,1)),n},o.GenerateCuboid=function(e,r,n){var d=new o.Body,t=e/2,y=r/2,l=n/2;return d.AddVertex(new o.BodyVertex(new o.Coord(-t,-y,-l))),d.AddVertex(new o.BodyVertex(new o.Coord(t,-y,-l))),d.AddVertex(new o.BodyVertex(new o.Coord(t,-y,l))),d.AddVertex(new o.BodyVertex(new o.Coord(-t,-y,l))),d.AddVertex(new o.BodyVertex(new o.Coord(-t,y,-l))),d.AddVertex(new o.BodyVertex(new o.Coord(t,y,-l))),d.AddVertex(new o.BodyVertex(new o.Coord(t,y,l))),d.AddVertex(new o.BodyVertex(new o.Coord(-t,y,l))),d.AddPolygon(new o.BodyPolygon([0,1,2,3])),d.AddPolygon(new o.BodyPolygon([1,5,6,2])),d.AddPolygon(new o.BodyPolygon([5,4,7,6])),d.AddPolygon(new o.BodyPolygon([4,0,3,7])),d.AddPolygon(new o.BodyPolygon([0,4,5,1])),d.AddPolygon(new o.BodyPolygon([3,2,6,7])),d.SetCubicTextureProjection(new o.Coord(-t,-y,-l),new o.Coord(1,0,0),new o.Coord(0,1,0),new o.Coord(0,0,1)),d},o.GenerateCuboidSides=function(e,r,n,d){var t=new o.Body,y=e/2,l=r/2,w=n/2;return t.AddVertex(new o.BodyVertex(new o.Coord(-y,-l,-w))),t.AddVertex(new o.BodyVertex(new o.Coord(y,-l,-w))),t.AddVertex(new o.BodyVertex(new o.Coord(y,-l,w))),t.AddVertex(new o.BodyVertex(new o.Coord(-y,-l,w))),t.AddVertex(new o.BodyVertex(new o.Coord(-y,l,-w))),t.AddVertex(new o.BodyVertex(new o.Coord(y,l,-w))),t.AddVertex(new o.BodyVertex(new o.Coord(y,l,w))),t.AddVertex(new o.BodyVertex(new o.Coord(-y,l,w))),d[0]&&t.AddPolygon(new o.BodyPolygon([0,1,2,3])),d[1]&&t.AddPolygon(new o.BodyPolygon([1,5,6,2])),d[2]&&t.AddPolygon(new o.BodyPolygon([5,4,7,6])),d[3]&&t.AddPolygon(new o.BodyPolygon([4,0,3,7])),d[4]&&t.AddPolygon(new o.BodyPolygon([0,4,5,1])),d[5]&&t.AddPolygon(new o.BodyPolygon([3,2,6,7])),t.SetCubicTextureProjection(new o.Coord(-y,-l,-w),new o.Coord(1,0,0),new o.Coord(0,1,0),new o.Coord(0,0,1)),t},o.GenerateSegmentedRectangle=function(e,r,n,d){var t=new o.Body,y=e/2,l=r/2,w=e/n,C=r/d;return function(){var e,r,u;for(e=0;e<=d;e++)for(r=0;r<=n;r++)u=new o.Coord(r*w-y,e*C-l,0),t.AddVertex(new o.BodyVertex(u))}(),function(){var e,r,y,l,w,C;for(r=0;r<d;r++)for(e=0;e<n;e++)l=(y=r*(n+1)+e)+1,C=(w=y+n+1)+1,t.AddPolygon(new o.BodyPolygon([y,l,C,w]))}(),t},o.GenerateSegmentedCuboid=function(e,r,n,d){function t(o){var e=0;return o>0&&o<=d&&(e=(d+1)*(d+1)+4*d*(o-1)),e}function y(o){var e,r=[],n=t(o);if(0===o||o===d){for(e=0;e<=d;e++)r.push(n+e);for(e=1;e<=d;e++)r.push(n+(e+1)*d+e);for(e=d-1;e>=0;e--)r.push(n+(d+1)*d+e);for(e=d-1;e>0;e--)r.push(n+e*(d+1))}else if(o>0&&o<d){for(e=0;e<=d;e++)r.push(n+e);for(e=1;e<d;e++)r.push(n+d+2*e);for(e=d;e>=0;e--)r.push(n+3*d+e-1);for(e=d-1;e>0;e--)r.push(n+d+2*e-1)}return r}function l(e){var r,n,t,y=e*f;if(0===e||e===d)for(r=0;r<=d;r++)for(n=0;n<=d;n++)t=new o.Coord(n*g-P,r*a-i,y-x),u.AddVertex(new o.BodyVertex(t));else if(e>0&&e<d)for(r=0;r<=d;r++)for(n=0;n<=d;n++)0!==r&&r!==d&&0!==n&&n!==d||(t=new o.Coord(n*g-P,r*a-i,y-x),u.AddVertex(new o.BodyVertex(t)))}function w(e){var r,n,y,l,w,C;if(0===e||e===d){var P=t(e);for(r=0;r<d;r++)for(n=0;n<d;n++)l=(y=P+r*(d+1)+n)+1,C=(w=y+d+1)+1,0===e?u.AddPolygon(new o.BodyPolygon([y,w,C,l])):u.AddPolygon(new o.BodyPolygon([y,l,C,w]))}if(e>0&&e<=d){var i=B[e-1],x=B[e];for(r=0;r<4*d;r++)y=i[r],w=x[r],r<4*d-1?(l=i[r+1],C=x[r+1]):(l=i[0],C=x[0]),u.AddPolygon(new o.BodyPolygon([y,l,C,w]))}}var C,u=new o.Body,P=e/2,i=r/2,x=n/2,g=e/d,a=r/d,f=n/d;for(C=0;C<=d;C++)l(C);var B=[];for(C=0;C<=d;C++)B.push(y(C));for(C=0;C<=d;C++)w(C);return u},o.GenerateCircle=function(e,r){var n,d=new o.Body,t=r,y=(Math.PI,2*Math.PI/t),l=o.GenerateCirclePoints(e,r);for(n=0;n<l.length;n++)d.AddVertex(new o.BodyVertex(l[n])),y;var w=new o.BodyPolygon([]);for(n=0;n<t;n++)w.AddVertexIndex(n);return d.AddPolygon(w),d.SetCylindricalTextureProjection(new o.Coord(0,0,0),e,new o.Coord(1,0,0),new o.Coord(0,0,1)),d},o.GenerateSphere=function(e,r,n){var d,t,y,l=new o.Body,w=r,C=2*w,u=l.AddVertex(new o.BodyVertex(o.SphericalToCartesian(e,0,0))),P=Math.PI/w,i=P;for(d=1;d<w;d++){for(y=0,t=0;t<C;t++)l.AddVertex(new o.BodyVertex(o.SphericalToCartesian(e,i,y))),y+=P;i+=P}var x,g,a,f,B,V,A=l.AddVertex(new o.BodyVertex(o.SphericalToCartesian(-e,0,0)));for(d=1;d<=w;d++)if(1===d)for(x=1,t=0;t<C;t++)a=(g=x+t)+1,t===C-1&&(a=x),V=new o.BodyPolygon([g,a,u]),n&&V.SetCurveGroup(0),l.AddPolygon(V);else if(d<w)for(x=(d-1)*C+1,t=0;t<C;t++)a=(g=x+t)+1,B=(f=g-C)+1,t===C-1&&(a=x,B=x-C),V=new o.BodyPolygon([g,a,B,f]),n&&V.SetCurveGroup(0),l.AddPolygon(V);else if(d===w)for(x=(d-2)*C+1,t=0;t<C;t++)a=(g=x+t)+1,t===C-1&&(a=x),V=new o.BodyPolygon([g,A,a]),n&&V.SetCurveGroup(0),l.AddPolygon(V);return l.SetCubicTextureProjection(new o.Coord(0,0,0),new o.Coord(1,0,0),new o.Coord(0,1,0),new o.Coord(0,0,1)),l},o.GenerateTriangulatedSphere=function(e,r,n){var d,t,y,l,w,C,u,P,i,x,g,a,f=function(){var e=new o.Body,r=(1+Math.sqrt(5))/2;return o.AddVertexToBody(e,0,1,+r),o.AddVertexToBody(e,0,1,-r),o.AddVertexToBody(e,0,-1,+r),o.AddVertexToBody(e,0,-1,-r),o.AddVertexToBody(e,1,+r,0),o.AddVertexToBody(e,1,-r,0),o.AddVertexToBody(e,-1,+r,0),o.AddVertexToBody(e,-1,-r,0),o.AddVertexToBody(e,+r,0,1),o.AddVertexToBody(e,-r,0,1),o.AddVertexToBody(e,+r,0,-1),o.AddVertexToBody(e,-r,0,-1),o.AddPolygonToBody(e,[0,2,8]),o.AddPolygonToBody(e,[0,4,6]),o.AddPolygonToBody(e,[0,6,9]),o.AddPolygonToBody(e,[0,8,4]),o.AddPolygonToBody(e,[0,9,2]),o.AddPolygonToBody(e,[1,3,11]),o.AddPolygonToBody(e,[1,4,10]),o.AddPolygonToBody(e,[1,6,4]),o.AddPolygonToBody(e,[1,10,3]),o.AddPolygonToBody(e,[1,11,6]),o.AddPolygonToBody(e,[2,5,8]),o.AddPolygonToBody(e,[2,7,5]),o.AddPolygonToBody(e,[2,9,7]),o.AddPolygonToBody(e,[3,5,7]),o.AddPolygonToBody(e,[3,7,11]),o.AddPolygonToBody(e,[3,10,5]),o.AddPolygonToBody(e,[4,8,10]),o.AddPolygonToBody(e,[6,11,9]),o.AddPolygonToBody(e,[5,10,8]),o.AddPolygonToBody(e,[7,9,11]),e}(),B=e/f.GetVertexPosition(0).Length();for(d=0;d<f.VertexCount();d++)f.GetVertex(d).position.MultiplyScalar(B);for(y=0;y<r;y++){for(w=f,f=new o.Body,C=new o.AdjacencyInfo(w),d=0;d<C.verts.length;d++)l=w.GetVertexPosition(d),o.AddVertexToBody(f,l.x,l.y,l.z);for(P=[],d=0;d<C.edges.length;d++)u=C.edges[d],g=o.MidCoord(w.GetVertexPosition(u.vert1),w.GetVertexPosition(u.vert2)),P.push(f.AddVertex(new o.BodyVertex(g.SetLength(e))));for(d=0;d<C.pgons.length;d++){for(i=C.pgons[d],x=[],t=0;t<i.pedges.length;t++)a=i.pedges[t],x.push(C.GetPolyEdgeStartVertex(a)),x.push(P[a.index]);o.AddPolygonToBody(f,[x[0],x[1],x[5]]),o.AddPolygonToBody(f,[x[1],x[2],x[3]]),o.AddPolygonToBody(f,[x[3],x[4],x[5]]),o.AddPolygonToBody(f,[x[1],x[3],x[5]])}}if(n)for(d=0;d<f.PolygonCount();d++)f.GetPolygon(d).SetCurveGroup(0);return f.SetCubicTextureProjection(new o.Coord(0,0,0),new o.Coord(1,0,0),new o.Coord(0,1,0),new o.Coord(0,0,1)),f},o.GenerateCylinder=function(e,r,n,d,t){var y,l,w,C,u=new o.Body,P=n,i=2*Math.PI,x=2*Math.PI/P;for(y=0;y<P;y++)u.AddVertex(new o.BodyVertex(o.CylindricalToCartesian(e,r/2,i))),u.AddVertex(new o.BodyVertex(o.CylindricalToCartesian(e,-r/2,i))),i-=x;for(y=0;y<P;y++)w=(l=2*y)+2,y===P-1&&(w=0),C=new o.BodyPolygon([l,w,w+1,l+1]),t&&C.SetCurveGroup(0),u.AddPolygon(C);if(d){var g=new o.BodyPolygon([]),a=new o.BodyPolygon([]);for(y=0;y<P;y++)g.AddVertexIndex(2*(P-y-1)),a.AddVertexIndex(2*y+1);u.AddPolygon(g),u.AddPolygon(a)}return u.SetCylindricalTextureProjection(new o.Coord(0,0,-r/2),e,new o.Coord(1,0,0),new o.Coord(0,0,1)),u},o.GeneratePie=function(e,r,n,d,t,y){var l,w,C,u,P=new o.Body,i=d,x=n,g=n/(i-1);for(P.AddVertex(new o.BodyVertex(o.CylindricalToCartesian(0,r/2,0))),P.AddVertex(new o.BodyVertex(o.CylindricalToCartesian(0,-r/2,0))),l=0;l<i;l++)P.AddVertex(new o.BodyVertex(o.CylindricalToCartesian(e,r/2,x))),P.AddVertex(new o.BodyVertex(o.CylindricalToCartesian(e,-r/2,x))),x-=g;for(l=0;l<=i;l++)C=(w=2*l)+2,l===i&&(C=0),u=new o.BodyPolygon([w,C,C+1,w+1]),y&&l>0&&l<i&&u.SetCurveGroup(0),P.AddPolygon(u);if(t){var a=new o.BodyPolygon([]),f=new o.BodyPolygon([]);for(l=0;l<=i;l++)a.AddVertexIndex(2*(i-l)),f.AddVertexIndex(2*l+1);P.AddPolygon(a),P.AddPolygon(f)}return P.SetCylindricalTextureProjection(new o.Coord(0,0,-r/2),e,new o.Coord(1,0,0),new o.Coord(0,0,1)),P},o.GenerateCone=function(e,r,n,d,t,y){var l,w,C,u,P,i,x=new o.Body,g=d,a=o.IsZero(e),f=o.IsZero(r),B=2*Math.PI,V=2*Math.PI/g;for(a&&x.AddVertex(new o.BodyVertex(o.CylindricalToCartesian(0,n/2,0))),l=0;l<g;l++)a||x.AddVertex(new o.BodyVertex(o.CylindricalToCartesian(e,n/2,B))),f||x.AddVertex(new o.BodyVertex(o.CylindricalToCartesian(r,-n/2,B))),B-=V;for(f&&x.AddVertex(new o.BodyVertex(o.CylindricalToCartesian(0,-n/2,0))),l=0;l<g;l++)a?(C=(w=l+1)+1,l===g-1&&(C=1),u=new o.BodyPolygon([0,C,w]),y&&u.SetCurveGroup(0),x.AddPolygon(u)):f?(C=(w=l)+1,l===g-1&&(C=0),u=new o.BodyPolygon([w,C,g]),y&&u.SetCurveGroup(0),x.AddPolygon(u)):(C=(w=2*l)+2,l===g-1&&(C=0),u=new o.BodyPolygon([w,C,C+1,w+1]),y&&u.SetCurveGroup(0),x.AddPolygon(u));if(t)if(a){for(i=new o.BodyPolygon([]),l=0;l<g;l++)i.AddVertexIndex(l+1);x.AddPolygon(i)}else if(f){for(P=new o.BodyPolygon([]),l=0;l<g;l++)P.AddVertexIndex(g-l-1);x.AddPolygon(P)}else{for(P=new o.BodyPolygon([]),i=new o.BodyPolygon([]),l=0;l<g;l++)P.AddVertexIndex(2*(g-l-1)),i.AddVertexIndex(2*l+1);x.AddPolygon(P),x.AddPolygon(i)}var A=(e+r)/2;return x.SetCylindricalTextureProjection(new o.Coord(0,0,-n/2),A,new o.Coord(1,0,0),new o.Coord(0,0,1)),x},o.GeneratePrismGeometry=function(e,r,n){var d,t,y,l,w=new o.Body,C=e.length;for(d=0;d<C;d++)w.AddVertex(new o.BodyVertex(e[d].Clone())),w.AddVertex(new o.BodyVertex(r[d].Clone()));for(d=0;d<C;d++)y=(t=2*d)+2,d===C-1&&(y=0),l=new o.BodyPolygon([t,y,y+1,t+1]),w.AddPolygon(l);if(n){var u=new o.BodyPolygon([]),P=new o.BodyPolygon([]);for(d=0;d<C;d++)u.AddVertexIndex(2*d+1),P.AddVertexIndex(2*(C-d-1));w.AddPolygon(u),w.AddPolygon(P)}return w},o.GeneratePrismFromPolygon=function(e,r,n,d){var t,y,l=[],w=[],C=e.VertexCount();for(t=0;t<C;t++)y=e.GetVertex(t),l.push(new o.Coord(y.x,y.y,0)),w.push(new o.Coord(y.x,y.y,r));var u=o.GeneratePrismGeometry(l,w,n);if(void 0!==d&&null!==d){var P=o.CalculatePolygonCurveGroups(e,d);for(t=0;t<C;t++)u.GetPolygon(t).SetCurveGroup(P[t])}var i=l[0].Clone(),x=l[1].Clone(),g=o.CoordSub(x,i).Normalize(),a=new o.Vector(0,0,1),f=o.VectorCross(a,g),B=o.VectorCross(f,a);return u.SetCubicTextureProjection(i,B,f,a),u},o.GeneratePrism=function(e,r,n,d,t){var y=new o.Polygon;y.FromArray(e);var l,w=y.VertexCount(),C=[],u=[];for(l=0;l<w;l++)C.push(y.GetVertex(l).Clone()),u.push(y.GetVertex(l).Clone().Offset(r,n));var P=o.GeneratePrismGeometry(C,u,d);if(void 0!==t&&null!==t){var i=o.CalculatePolygonCurveGroups(y,t);for(l=0;l<w;l++)P.GetPolygon(l).SetCurveGroup(i[l])}var x=y.GetVertex(0).Clone(),g=y.GetVertex(1).Clone(),a=o.CoordSub(g,x).Normalize(),f=r.Clone().Normalize(),B=o.VectorCross(f,a),V=o.VectorCross(B,f);return P.SetCubicTextureProjection(x,V,B,f),P},o.GeneratePrismWithHole=function(e,r,n,d,t){var y=new o.Body,l=[],w=new o.ContourPolygon;w.FromArray(e),function(e,r,n,d){var t,y,l,w,C;for(t=0;t<e.ContourCount();t++)for(l=e.GetContour(t),y=0;y<l.VertexCount();y++)w=l.GetVertex(y).Clone(),C=l.GetVertex(y).Clone().Offset(r,n),d.AddVertex(new o.BodyVertex(w)),d.AddVertex(new o.BodyVertex(C))}(w,r,n,y),function(e,r,n,d){var t,y,l,w,C,u,P,i,x=0;for(t=0;t<e.ContourCount();t++){for(l=e.GetContour(t),i=null,void 0!==n&&null!==n&&(i=o.CalculatePolygonCurveGroups(l,n)),w=l.VertexCount(),r.push(x),y=0;y<w;y++)u=2+(C=2*x+2*y),y==w-1&&(u=2*x),P=new o.BodyPolygon([C,u,u+1,C+1]),null!==i&&P.SetCurveGroup(i[y]),d.AddPolygon(P);x+=w}}(w,l,t,y),d&&function(e,r){var n=[],d=e.ToContourPolygon2D(),t=o.ConvertContourPolygonToPolygon2D(d,n);if(null!==t){var l,w,C,u,P,i,x=o.TriangulatePolygon2D(t);if(null!==x)for(l=0;l<x.length;l++){for(C=x[l],P=new o.BodyPolygon([]),i=new o.BodyPolygon([]),w=0;w<3;w++)u=n[C[w]],P.AddVertexIndex(2*r[u[0]]+2*u[1]+1),u=n[C[2-w]],i.AddVertexIndex(2*r[u[0]]+2*u[1]);y.AddPolygon(P),y.AddPolygon(i)}}}(w,l);var C=o.CoordSub(e[1],e[0]).Normalize(),u=new o.Coord(e[0].x,e[0].y,e[0].z),P=r.Clone().Normalize(),i=o.VectorCross(P,C),x=o.VectorCross(i,P);return y.SetCubicTextureProjection(u,x,i,P),y},o.GeneratePrismsFromPath2D=function(e,r,n,d){function t(e){var r,n,d,t,y=[];for(r=0;r<e.ContourCount();r++){for(d=e.GetContour(r),n=0;n<d.VertexCount();n++)t=d.GetVertex(n),y.push(new o.Coord(t.x,t.y,0));r<e.ContourCount()-1&&y.push(null)}return y}var y,l,w=[],C=e.GetPolygons(),u=new o.Vector(0,0,1);for(y=0;y<C.length;y++)1===(l=C[y]).ContourCount()?w.push(o.GeneratePrism(t(l),u,r,n,d)):l.ContourCount()>1&&w.push(o.GeneratePrismWithHole(t(l),u,r,n,d));return w},o.GeneratePrismShell=function(e,r,n,d,t){var y,l=new o.Body,w=e.length;for(y=0;y<w;y++)l.AddVertex(new o.BodyVertex(e[y]));var C=new o.Polygon;C.vertices=e;var u,P,i,x,g,a=o.OffsetPolygonContour(C,d).vertices;for(y=0;y<w;y++)l.AddVertex(new o.BodyVertex(a[y]));for(y=0;y<w;y++)u=e[y].Clone().Offset(r,n),l.AddVertex(new o.BodyVertex(u));for(y=0;y<w;y++)u=a[y].Clone().Offset(r,n),l.AddVertex(new o.BodyVertex(u));for(y=0;y<w;y++)i=(P=y)+1,g=(x=P+2*w)+1,y===w-1&&(i=0,g=2*w),l.AddPolygon(new o.BodyPolygon([P,i,g,x])),l.AddPolygon(new o.BodyPolygon([P+w,x+w,g+w,i+w]));if(t)for(y=0;y<w;y++)i=(P=y)+1,g=(x=y+w)+1,y===w-1&&(i=0,g=w),l.AddPolygon(new o.BodyPolygon([P,x,g,i])),l.AddPolygon(new o.BodyPolygon([P+2*w,i+2*w,g+2*w,x+2*w]));var f=o.CoordSub(e[1],e[0]).Normalize(),B=new o.Coord(e[0].x,e[0].y,e[0].z),V=r.Clone().Normalize(),A=o.VectorCross(V,f),c=o.VectorCross(A,V);return l.SetCubicTextureProjection(B,c,A,V),l},o.GenerateCylinderShell=function(e,r,n,d,t,y){var l,w=new o.Vector(0,0,1),C=function(e,r,n){var d,t,y=[],l=2*Math.PI/r,w=0;for(w=0;w<r;w++)d=w*l,t=o.PolarToCartesian(e,d),y.push(new o.Coord(t.x,t.y,n));return y}(e,d,-r/2),u=o.GeneratePrismShell(C,w,r,n,t);if(y)for(l=0;l<d;l++)u.GetPolygon(2*l).SetCurveGroup(0),u.GetPolygon(2*l+1).SetCurveGroup(0);return u},o.GenerateLineShell=function(e,r,n,d,t,y){var l,w,C,u,P,i,x,g=new o.Body,a=e.length,f=[];for(l=0;l<a;l++)0===l||l===a-1?x=Math.PI/2:(w=l-1,C=l,u=l+1,i=o.CoordSub(e[u],e[C]),P=o.CoordSub(e[w],e[C]),x=i.AngleTo(P)/2,o.CoordOrientation(e[w],e[C],e[u],r)==o.Orientation.Clockwise&&(x=Math.PI-x)),f.push(x);var B,V,A,c,s,v,G=new o.Vector(0,0,1),S=[];for(l=0;l<a;l++)C=l,l===a-1?A=o.CoordSub(e[C-1],e[C]):(u=(l+1)%a,A=o.CoordSub(e[C],e[u])),x=f[C],B=d/Math.sin(x),(V=e[C].Clone()).Offset(A,B),V.Rotate(G,-(Math.PI-x),e[C]),S.push(V);for(l=0;l<a;l++)g.AddVertex(new o.BodyVertex(e[l]));for(l=0;l<a;l++)g.AddVertex(new o.BodyVertex(S[l]));for(l=0;l<a;l++)c=e[l].Clone().Offset(r,n),g.AddVertex(new o.BodyVertex(c));for(l=0;l<a;l++)c=S[l].Clone().Offset(r,n),g.AddVertex(new o.BodyVertex(c));for(l=0;l<a-1;l++)u=(C=l)+1,v=(s=C+2*a)+1,g.AddPolygon(new o.BodyPolygon([C,u,v,s])),g.AddPolygon(new o.BodyPolygon([C+a,s+a,v+a,u+a]));if(t&&(u=(C=0)+a,s=C+2*a,v=C+3*a,g.AddPolygon(new o.BodyPolygon([C,s,v,u])),u=(C=a-1)+a,s=C+2*a,v=C+3*a,g.AddPolygon(new o.BodyPolygon([C,u,v,s]))),y)for(l=0;l<a-1;l++)u=(C=l)+1,v=(s=l+a)+1,g.AddPolygon(new o.BodyPolygon([C,s,v,u])),g.AddPolygon(new o.BodyPolygon([C+2*a,u+2*a,v+2*a,s+2*a]));var h=o.CoordSub(e[1],e[0]).Normalize(),T=new o.Coord(e[0].x,e[0].y,e[0].z),p=r.Clone().Normalize(),m=o.VectorCross(p,h),b=o.VectorCross(m,p);return g.SetCubicTextureProjection(T,b,m,p),g},o.GenerateTorus=function(e,r,n,d,t){var y,l,w,C=new o.Body,u=0,P=2*Math.PI/d,i=[];for(y=0;y<d;y++)l=o.PolarToCartesian(r,u),w=new o.Coord(l.x+e,0,l.y),i.push(w),u+=P;var x,g,a,f,B,V,A,c=new o.Coord(0,0,1),s=new o.Coord(0,0,0);for(P=2*Math.PI/n,y=0;y<n;y++)for(x=0;x<d;x++)g=i[x].Clone().Rotate(c,y*P,s),C.AddVertex(new o.BodyVertex(g));for(y=0;y<n;y++)for(a=new o.BodyPolygon([]),x=0;x<d;x++)B=(f=y*d+x)+1,A=(V=f+d)+1,x===d-1&&(B=y*d,A=(y+1)*d),y===n-1&&(V=x,A=x+1,x===d-1&&(A=0)),a=new o.BodyPolygon([f,V,A,B]),t&&a.SetCurveGroup(0),C.AddPolygon(a);return C.SetCubicTextureProjection(new o.Coord(0,0,0),new o.Coord(1,0,0),new o.Coord(0,1,0),new o.Coord(0,0,1)),C},o.GeneratePolyTorus=function(e,r,n,d){var t,y,l,w=new o.Body,C=e.length,u=(Math.PI,2*Math.PI/C),P=[];for(t=0;t<C;t++)y=e[t],l=new o.Coord(y.x+r,0,y.y),P.push(l),u;var i,x,g,a,f,B,V,A=new o.Coord(0,0,1),c=new o.Coord(0,0,0);for(u=2*Math.PI/n,t=0;t<n;t++)for(i=0;i<C;i++)x=P[i].Clone().Rotate(A,t*u,c),w.AddVertex(new o.BodyVertex(x));for(t=0;t<n;t++)for(g=new o.BodyPolygon([]),i=0;i<C;i++)f=(a=t*C+i)+1,V=(B=a+C)+1,i===C-1&&(f=t*C,V=(t+1)*C),t===n-1&&(B=i,V=i+1,i===C-1&&(V=0)),g=new o.BodyPolygon([a,B,V,f]),d&&g.SetCurveGroup(i),w.AddPolygon(g);return w.SetCubicTextureProjection(new o.Coord(0,0,0),new o.Coord(1,0,0),new o.Coord(0,1,0),new o.Coord(0,0,1)),w},o.GenerateRuledFromSectors=function(e,r,n,d,t){var y,l,w,C=new o.Body,u=o.GetSectorSegmentation(e,n),P=o.GetSectorSegmentation(r,n),i=[],x=[];for(o.GetRuledMesh(u,P,d,i,x),y=0;y<i.length;y++)C.AddVertex(new o.BodyVertex(i[y]));for(y=0;y<x.length;y++)w=x[y],l=new o.BodyPolygon(w),t&&l.SetCurveGroup(0),C.AddPolygon(l);return C.SetCubicTextureProjection(new o.Coord(0,0,0),new o.Coord(1,0,0),new o.Coord(0,1,0),new o.Coord(0,0,1)),C},o.GenerateGrid=function(e,r,n,d,t){var y=new o.Sector(new o.Coord(0,0,0),new o.Coord(e,0,0)),l=new o.Sector(new o.Coord(0,r,0),new o.Coord(e,r,0));return o.GenerateRuledFromSectors(y,l,n,d,t)},o.GenerateSquareGrid=function(e,r,n){return o.GenerateGrid(e,e,r,r,n)},o.GenerateRuledFromSectorsWithHeight=function(e,r,n,d,t,y){var l,w,C,u=new o.Body,P=o.GetSectorSegmentation(e,n),i=o.GetSectorSegmentation(r,n),x=[],g=[];for(o.GetRuledMesh(P,i,d,x,g),l=0;l<x.length;l++)u.AddVertex(new o.BodyVertex(x[l]));for(l=0;l<g.length;l++)C=g[l],w=new o.BodyPolygon(C),t&&w.SetCurveGroup(0),u.AddPolygon(w);var a,f,B,V,A,c,s,v,G=u.VertexCount();for(l=0;l<x.length;l++)f=x[l],(a=new o.Coord(f.x,f.y,f.z)).z-=y,u.AddVertex(new o.BodyVertex(a));for(l=0;l<g.length;l++){for(V=[],B=(C=g[l]).length-1;B>=0;B--)V.push(C[B]+G);w=new o.BodyPolygon(V),t&&w.SetCurveGroup(0),u.AddPolygon(w)}for(l=0;l<d;l++)c=(A=l+G)+1,v=(s=A-G)+1,w=new o.BodyPolygon([A,c,v,s]),u.AddPolygon(w);for(l=0;l<d;l++)c=(A=l+n*(d+1)+G)+1,v=(s=A-G)+1,w=new o.BodyPolygon([A,s,v,c]),u.AddPolygon(w);for(l=0;l<n;l++)c=(A=l*(d+1)+G)+d+1,v=(s=A-G)+d+1,w=new o.BodyPolygon([A,s,v,c]),u.AddPolygon(w);for(l=0;l<n;l++)c=(A=(l+1)*d+l+G)+d+1,v=(s=A-G)+d+1,w=new o.BodyPolygon([A,c,v,s]),u.AddPolygon(w);return u.SetCubicTextureProjection(new o.Coord(0,0,0),new o.Coord(1,0,0),new o.Coord(0,1,0),new o.Coord(0,0,1)),u},o.GenerateRuledFromCoords=function(e,r,n,d){var t,y,l=new o.Body,w=[],C=[];for(o.GetRuledMesh(e,r,n,w,C),t=0;t<w.length;t++)l.AddVertex(new o.BodyVertex(w[t]));for(t=0;t<C.length;t++)w=C[t],y=new o.BodyPolygon(w),d&&y.SetCurveGroup(0),l.AddPolygon(y);return l.SetCubicTextureProjection(new o.Coord(0,0,0),new o.Coord(1,0,0),new o.Coord(0,1,0),new o.Coord(0,0,1)),l},o.GenerateRevolved=function(e,r,n,d,t,y){var l,w,C,u=new o.Body,P=o.IsEqual(n,2*Math.PI),i=e.length,x=n/d,g=o.CoordSub(r.end,r.beg);for(l=0;l<i;l++)for(w=0;w<=d;w++)P&&w===d||(C=e[l].Clone().Rotate(g,w*x,r.beg),u.AddVertex(new o.BodyVertex(C)));var a,f,B,V,A,c=0;for("CurveSegments"==y?c=1:"CurveAll"==y&&(c=2),l=0;l<i-1;l++)for(w=0;w<d;w++)B=(a=l*(d+1)+w)+1,V=(f=a+d+1)+1,P&&(B=(a=l*d+w)+1,V=(f=a+d)+1,w===d-1&&(B=l*d,V=(l+1)*d)),A=new o.BodyPolygon([a,B,V,f]),1==c?A.SetCurveGroup(l):2==c&&A.SetCurveGroup(0),u.AddPolygon(A);if(P&&t){var s=new o.BodyPolygon([]),v=new o.BodyPolygon([]);for(l=0;l<d;l++)s.AddVertexIndex(d*(i-1)+l),v.AddVertexIndex(d-l-1);u.AddPolygon(s),u.AddPolygon(v)}var G=g.Clone().Normalize(),S=new o.Line(r.beg,G),h=0;for(l=0;l<i;l++)h+=S.ProjectCoord(e[l]).DistanceTo(e[l]);h/=i;var T=new o.Coord(r.beg.x,r.beg.y,r.beg.z),p=new o.Line(T,g).ProjectCoord(e[0]),m=o.CoordSub(e[0],p).Normalize();return u.SetCylindricalTextureProjection(T,h,m,G),u},o.GenerateTube=function(e,r){var n,d,t,y,l=new o.Body,w=e.length,C=e[0].length;for(d=0;d<C;d++)for(n=0;n<w;n++)l.AddVertex(new o.BodyVertex(e[n][d]));for(d=0;d<w-1;d++)for(n=0;n<C;n++)y=(t=d+w*n)+w,n===C-1&&(y=d),l.AddPolygon(new o.BodyPolygon([t,y,y+1,t+1]));if(r){var u=new o.BodyPolygon([]),P=new o.BodyPolygon([]);for(n=0;n<C;n++)u.AddVertexIndex(w*n+w-1);for(n=C-1;n>=0;n--)P.AddVertexIndex(w*n);l.AddPolygon(u),l.AddPolygon(P)}return l.SetCubicTextureProjection(new o.Coord(0,0,0),new o.Coord(1,0,0),new o.Coord(0,1,0),new o.Coord(0,0,1)),l},o.GenerateFunctionSurface=function(e,r,n,d,t){var y,l,w=new o.Sector(new o.Coord(r.x,r.y,0),new o.Coord(n.x,r.y,0)),C=new o.Sector(new o.Coord(r.x,n.y,0),new o.Coord(n.x,n.y,0)),u=o.GenerateRuledFromSectors(w,C,d,d,t);for(y=0;y<u.VertexCount();y++)(l=u.GetVertexPosition(y)).z=e(l.x,l.y);return u.SetCubicTextureProjection(new o.Coord(0,0,0),new o.Coord(1,0,0),new o.Coord(0,1,0),new o.Coord(0,0,1)),u},o.GenerateFunctionSurfaceSolid=function(e,r,n,d,t,y){var l,w,C=new o.Sector(new o.Coord(n.x,r.y,0),new o.Coord(r.x,r.y,0)),u=new o.Sector(new o.Coord(n.x,n.y,0),new o.Coord(r.x,n.y,0)),P=o.GenerateRuledFromSectorsWithHeight(C,u,d,d,t,y),i=(d+1)*(d+1);for(l=0;l<i;l++)(w=P.GetVertexPosition(l)).z=e(w.x,w.y);return P.SetCubicTextureProjection(new o.Coord(0,0,0),new o.Coord(1,0,0),new o.Coord(0,1,0),new o.Coord(0,0,1)),P},o});
//# sourceMappingURL=../sourcemaps/modeler/generator.js.map
