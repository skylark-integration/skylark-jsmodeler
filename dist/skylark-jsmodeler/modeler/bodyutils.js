/**
 * skylark-jsmodeler - A version of jsmodeler that ported to running on skylarkjs
 * @author Hudaokeji, Inc.
 * @version v0.9.0
 * @link https://github.com/skylark-integration/skylark-jsmodeler/
 * @license MIT
 */
define(["../core/jsm"],function(e){return e.AddVertexToBody=function(o,t,n,r){return o.AddVertex(new e.BodyVertex(new e.Coord(t,n,r)))},e.AddPointToBody=function(o,t){return o.AddPoint(new e.BodyPoint(t))},e.AddLineToBody=function(o,t,n){return o.AddLine(new e.BodyLine(t,n))},e.AddPolygonToBody=function(o,t){return o.AddPolygon(new e.BodyPolygon(t))},e.CheckBody=function(e){var o,t,n,r,d,i=e.VertexCount();for(o=0;o<e.PointCount();o++)if((n=e.GetPoint(o)).GetVertexIndex()<0||n.GetVertexIndex()>=i)return!1;for(o=0;o<e.LineCount();o++){if((r=e.GetLine(o)).GetBegVertexIndex()<0||r.GetBegVertexIndex()>=i)return!1;if(r.GetEndVertexIndex()<0||r.GetEndVertexIndex()>=i)return!1}for(o=0;o<e.PolygonCount();o++){if((d=e.GetPolygon(o)).VertexIndexCount()<3)return!1;for(t=0;t<d.VertexIndexCount();t++)if(d.GetVertexIndex(t)<0||d.GetVertexIndex(t)>=i)return!1}return!0},e.CalculateBodyPolygonNormal=function(o,t){var n,r,d,i,l,u=o.GetPolygon(t),a=u.VertexIndexCount(),x=new e.Vector(0,0,0);if(a>=3)for(n=0;n<a;n++)r=n,d=(n+1)%a,i=o.GetVertexPosition(u.GetVertexIndex(r)),l=o.GetVertexPosition(u.GetVertexIndex(d)),x.x+=(i.y-l.y)*(i.z+l.z),x.y+=(i.z-l.z)*(i.x+l.x),x.z+=(i.x-l.x)*(i.y+l.y);return x.Normalize(),x},e.CalculateBodyPolygonNormals=function(o){var t,n=[];for(t=0;t<o.PolygonCount();t++)n.push(e.CalculateBodyPolygonNormal(o,t));return n},e.CalculateBodyVertexNormals=function(o){var t,n,r,d,i,l,u,a,x=[],y=e.CalculateBodyPolygonNormals(o),f=null;for(t=0;t<o.PolygonCount();t++)if(d=o.GetPolygon(t),x[t]=[],d.HasCurveGroup())for(null===f&&(f=e.CalculateBodyVertexToPolygon(o)),n=0;n<d.VertexIndexCount();n++){for(l=new e.Vector(0,0,0),u=0,a=f[d.GetVertexIndex(n)],r=0;r<a.length;r++)o.GetPolygon(a[r]).GetCurveGroup()===d.GetCurveGroup()&&(l=e.CoordAdd(l,y[a[r]]),u++);l.MultiplyScalar(1/u),l.Normalize(),x[t].push(l)}else for(i=y[t],n=0;n<d.VertexIndexCount();n++)x[t].push(new e.Vector(i.x,i.y,i.z));return x},e.CalculatePolygonCurveGroups=function(e,o){var t,n,r=[],d=e.VertexCount();for(t=0;t<d;t++)r.push(0);for(t=0;t<d;t++)n=r[e.GetPrevVertex(t)],e.GetVertexAngle(t)>o?r[t]=n:r[t]=n+1;var i=r[0],l=r[d-1];if(0===i&&i!=l)for(t=0;r[t]==i;t++)r[t]=l;return r},e.CalculatePolygonCentroid=function(o,t){var n,r=o.GetPolygon(t),d=r.VertexIndexCount(),i=new e.Coord(0,0,0);for(n=0;n<d;n++)i=e.CoordAdd(i,o.GetVertexPosition(r.GetVertexIndex(n)));return i.MultiplyScalar(1/d),i},e.MakeBodyInsideOut=function(e){var o;for(o=0;o<e.PolygonCount();o++)e.GetPolygon(o).ReverseVertexIndices()},e.SoftMoveBodyVertex=function(o,t,n,r,d){var i,l,u,a=o.GetVertexPosition(t).Clone(),x=d,y=e.GetGaussianCParameter(n,x,0,1e-5);for(i=0;i<o.VertexCount();i++)l=a.DistanceTo(o.GetVertex(i).position),e.IsGreater(l,n)||(u=e.GetGaussianValue(l,d,0,y),o.GetVertexPosition(i).Offset(r,u))},e.GenerateWireBody=function(o){var t,n=new e.Body;for(t=0;t<o.VertexCount();t++)n.AddVertex(o.GetVertex(t).Clone());var r,d=new e.AdjacencyInfo(o);for(t=0;t<d.edges.length;t++)r=d.edges[t],e.AddLineToBody(n,r.vert1,r.vert2);return n},e.TriangulateWithCentroids=function(o){var t,n,r,d,i,l,u,a,x,y=o.PolygonCount();for(t=0;t<y;t++)for(r=e.CalculatePolygonCentroid(o,t),d=o.AddVertex(new e.BodyVertex(r)),l=(i=o.GetPolygon(t)).VertexIndexCount(),n=0;n<l;n++)a=i.GetVertexIndex(n),x=i.GetVertexIndex(n<l-1?n+1:0),(u=new e.BodyPolygon([a,x,d])).InheritAttributes(i),o.AddPolygon(u);for(t=0;t<y;t++)o.RemovePolygon(0)},e.TriangulatePolygons=function(o){var t,n,r,d,i,l,u,a,x=o.PolygonCount();for(t=0;t<x;t++){for(r=o.GetPolygon(t),d=new e.Polygon,n=0;n<r.VertexIndexCount();n++)i=o.GetVertexPosition(r.GetVertexIndex(n)),d.AddVertex(i.x,i.y,i.z);if(null!==(l=e.TriangulatePolygon(d)))for(n=0;n<l.length;n++)u=l[n],(a=new e.BodyPolygon([r.GetVertexIndex(u[0]),r.GetVertexIndex(u[1]),r.GetVertexIndex(u[2])])).InheritAttributes(r),o.AddPolygon(a)}for(t=0;t<x;t++)o.RemovePolygon(0)},e.GenerateRandomMaterials=function(o,t,n){function r(o,t){return void 0!==o&&o?e.SeededRandomInt(0,16777215,t+1):e.RandomInt(0,16777215)}var d,i,l,u=0;for(d=0;d<o.LineCount();d++)i=r(n,u++),l=t.AddMaterial(new e.Material({ambient:i,diffuse:i})),o.GetLine(d).SetMaterialIndex(l);for(d=0;d<o.PointCount();d++)i=r(n,u++),l=t.AddMaterial(new e.Material({ambient:i,diffuse:i})),o.GetPoint(d).SetMaterialIndex(l);for(d=0;d<o.PolygonCount();d++)i=r(n,u++),l=t.AddMaterial(new e.Material({ambient:i,diffuse:i})),o.GetPolygon(d).SetMaterialIndex(l)},e.AddBodyToBSPTree=function(o,t,n){function r(o,t,n){var r=o.GetPolygon(t);n.material=r.GetMaterialIndex();var d,i,l=new e.Polygon;for(d=0;d<r.VertexIndexCount();d++)i=o.GetVertexPosition(r.GetVertexIndex(d)),l.AddVertex(i.x,i.y,i.z);return l}var d,i,l;for(d=0;d<o.PolygonCount();d++)i=r(o,d,l={id:n,originalPolygon:d,material:-1}),t.AddPolygon(i,l)},e});
//# sourceMappingURL=../sourcemaps/modeler/bodyutils.js.map
