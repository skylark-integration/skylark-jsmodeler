/**
 * skylark-jsmodeler - A version of jsmodeler that ported to running on skylarkjs
 * @author Hudaokeji, Inc.
 * @version v0.9.0
 * @link https://github.com/skylark-integration/skylark-jsmodeler/
 * @license MIT
 */
define(["../core/jsm"],function(e){return e.Renderer=function(){this.canvas=null,this.context=null,this.shader=null,this.ambientLight=null,this.directionalLights=null,this.bodies=null},e.Renderer.prototype.Init=function(t){return!!e.IsWebGLEnabled()&&(!!this.InitContext(t)&&(!!this.InitView()&&(!!this.InitShaders()&&(!!this.InitLights()&&!!this.InitBodies()))))},e.Renderer.prototype.InitContext=function(t){return this.canvas=t,null!==this.canvas&&(void 0!==this.canvas.getContext&&(this.context=this.canvas.getContext("webgl")||this.canvas.getContext("experimental-webgl"),null!==this.context&&(this.context=e.WebGLInitContext(t),null!==this.context)))},e.Renderer.prototype.InitShaders=function(){return this.shader=new e.ShaderProgram(this.context),this.shader.Init()},e.Renderer.prototype.InitLights=function(){return this.ambientLight=new e.RenderAmbientLight(0),this.directionalLights=[],!0},e.Renderer.prototype.InitBodies=function(){return this.bodies=[],!0},e.Renderer.prototype.InitView=function(){return this.directionalLights=[],!0},e.Renderer.prototype.SetClearColor=function(e,t,n){this.context.clearColor(e,t,n,1)},e.Renderer.prototype.SetAmbientLight=function(e){this.ambientLight=e},e.Renderer.prototype.AddLight=function(e){var t=this.shader.GetMaxLightCount();return this.directionalLights.length>=t?-1:(this.directionalLights.push(e),this.directionalLights.length-1)},e.Renderer.prototype.RemoveLight=function(e){var t=this.directionalLights.indexOf(e);-1!=t&&this.directionalLights.splice(t,1)},e.Renderer.prototype.RemoveLights=function(){this.directionalLights=[]},e.Renderer.prototype.GetLight=function(e){return this.directionalLights[e]},e.Renderer.prototype.AddBody=function(e,t){var n=this.shader;e.EnumerateMeshes(function(e){n.CompileMaterial(e.GetMaterial(),t),n.CompileMesh(e)}),this.bodies.push(e)},e.Renderer.prototype.AddBodies=function(e,t){var n,i;for(n=0;n<e.length;n++)i=e[n],this.AddBody(i,t)},e.Renderer.prototype.EnumerateBodies=function(e){var t;for(t=0;t<this.bodies.length;t++)e(this.bodies[t])},e.Renderer.prototype.RemoveBody=function(e){var t=this.bodies.indexOf(e);-1!=t&&this.bodies.splice(t,1)},e.Renderer.prototype.RemoveBodies=function(){this.bodies=[]},e.Renderer.prototype.GetBody=function(e){return this.bodies[e]},e.Renderer.prototype.Resize=function(){this.context.viewport(0,0,this.canvas.width,this.canvas.height)},e.Renderer.prototype.FindObjects=function(t,n,i){var r=new e.Coord(n,this.canvas.height-i,.5),a=this.canvas.width/this.canvas.height,s=[0,0,this.canvas.width,this.canvas.height],o=e.Unproject(r,t.eye,t.center,t.up,t.fieldOfView*e.DegRad,a,t.nearClippingPlane,t.farClippingPlane,s),h=new e.Ray(t.eye,e.CoordSub(o,t.eye),null),d=[];return this.EnumerateBodies(function(t){var n=t.GetTransformation();t.EnumerateMeshesWithFlag(e.RenderMaterialFlags.Triangle,function(i){var r,a,s,o,l,u=i.VertexCount();for(r=0;r<u;r+=3)a=i.GetTransformedVertex(r+0,n),s=i.GetTransformedVertex(r+1,n),o=i.GetTransformedVertex(r+2,n),null!==(l=e.RayTriangleIntersection(h,a,s,o))&&d.push({renderBody:t,renderMesh:i,triangleIndex:parseInt(r/3,10),intersection:l})})}),d.sort(function(e,t){return e.intersection.distance-t.intersection.distance}),d},e.Renderer.prototype.Render=function(t){function n(t,n,i,r){var a=null;t.EnumerateBodies(function(s){if(s.HasTypedMeshes(n)){var o=s.GetTransformationMatrix();s.EnumerateTypedMeshes(n,function(s){null===a&&(a=function(t){function n(e,t){return e&t}if(n(t,e.RenderMaterialFlags.Triangle)){if(n(t,e.RenderMaterialFlags.Textured))return e.ShaderType.TexturedTriangle;if(!n(t,e.RenderMaterialFlags.Textured))return e.ShaderType.Triangle}else{if(n(t,e.RenderMaterialFlags.Line))return e.ShaderType.Line;if(n(t,e.RenderMaterialFlags.Point))return e.ShaderType.Point}return null}(n),t.shader.UseShader(a),t.shader.SetParameters(t.ambientLight,t.directionalLights,i,r));var h=s.GetMaterial(),d=s.GetVertexBuffer(),l=s.GetNormalBuffer(),u=s.GetUVBuffer();t.shader.DrawArrays(h,o,d,l,u)})}})}this.context.clear(this.context.COLOR_BUFFER_BIT|this.context.DEPTH_BUFFER_BIT);var i=e.MatrixView(t.eye,t.center,t.up),r=e.MatrixPerspective(t.fieldOfView*e.DegRad,this.canvas.width/this.canvas.height,t.nearClippingPlane,t.farClippingPlane);n(this,e.RenderMaterialFlags.Triangle,i,r),n(this,e.RenderMaterialFlags.Triangle+e.RenderMaterialFlags.Textured,i,r),n(this,e.RenderMaterialFlags.Line,i,r),n(this,e.RenderMaterialFlags.Point,i,r),n(this,e.RenderMaterialFlags.Triangle+e.RenderMaterialFlags.Transparent,i,r),n(this,e.RenderMaterialFlags.Triangle+e.RenderMaterialFlags.Transparent+e.RenderMaterialFlags.Textured,i,r)},e});
//# sourceMappingURL=../sourcemaps/renderer/renderer.js.map
