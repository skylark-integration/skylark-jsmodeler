/**
 * skylark-jsmodeler - A version of jsmodeler that ported to running on skylarkjs
 * @author Hudaokeji, Inc.
 * @version v0.9.0
 * @link https://github.com/skylark-integration/skylark-jsmodeler/
 * @license MIT
 */
define(["../core/jsm"],function(t){return t.PointCloudRenderer=function(){this.canvas=null,this.context=null,this.shader=null,this.camera=null,this.points=null,this.pointSize=null},t.PointCloudRenderer.prototype.Init=function(e,i){return!!t.IsWebGLEnabled()&&(!!this.InitContext(e)&&(!!this.InitShaders()&&(!!this.InitBuffers()&&!!this.InitView(i))))},t.PointCloudRenderer.prototype.InitContext=function(t){return this.canvas=t,null!==this.canvas&&(void 0!==this.canvas.getContext&&(this.context=this.canvas.getContext("experimental-webgl"),null!==this.context&&(this.context.clearColor(1,1,1,1),this.context.enable(this.context.DEPTH_TEST),!0)))},t.PointCloudRenderer.prototype.InitShaders=function(){function t(t,e,i){var o=t.createShader(i);return t.shaderSource(o,e),t.compileShader(o),t.getShaderParameter(o,t.COMPILE_STATUS)?o:null}var e=["varying highp vec3 vColor;","void main (void) {","\tgl_FragColor = vec4 (vColor, 1.0);","}"].join("\n"),i=["attribute highp vec3 aVertexPosition;","attribute highp vec3 aVertexColor;","uniform highp mat4 uViewMatrix;","uniform highp mat4 uProjectionMatrix;","uniform highp float uPointSize;","varying highp vec3 vColor;","void main (void) {","\tvColor = aVertexColor;","\tgl_PointSize = uPointSize;","\tgl_Position = uProjectionMatrix * uViewMatrix * vec4 (aVertexPosition, 1.0);","}"].join("\n"),o=t(this.context,e,this.context.FRAGMENT_SHADER),r=t(this.context,i,this.context.VERTEX_SHADER);return null!==o&&null!==r&&(this.shader=this.context.createProgram(),this.context.attachShader(this.shader,r),this.context.attachShader(this.shader,o),this.context.linkProgram(this.shader),!!this.context.getProgramParameter(this.shader,this.context.LINK_STATUS)&&(this.context.useProgram(this.shader),this.shader.vertexPositionAttribute=this.context.getAttribLocation(this.shader,"aVertexPosition"),this.context.enableVertexAttribArray(this.shader.vertexPositionAttribute),this.shader.vertexColorAttribute=this.context.getAttribLocation(this.shader,"aVertexColor"),this.context.enableVertexAttribArray(this.shader.vertexColorAttribute),this.shader.pMatrixUniform=this.context.getUniformLocation(this.shader,"uProjectionMatrix"),this.shader.vMatrixUniform=this.context.getUniformLocation(this.shader,"uViewMatrix"),this.shader.pointSizeUniform=this.context.getUniformLocation(this.shader,"uPointSize"),!0))},t.PointCloudRenderer.prototype.InitBuffers=function(){return this.points=[],this.pointSize=1,!0},t.PointCloudRenderer.prototype.InitView=function(e){return this.camera=t.ValueOrDefault(e,new t.Camera),!!this.camera},t.PointCloudRenderer.prototype.SetClearColor=function(t,e,i){this.context.clearColor(t,e,i,1)},t.PointCloudRenderer.prototype.SetPointSize=function(t){this.pointSize=t},t.PointCloudRenderer.prototype.AddPoints=function(t,e){var i=this.context.createBuffer(),o=new Float32Array(t);this.context.bindBuffer(this.context.ARRAY_BUFFER,i),this.context.bufferData(this.context.ARRAY_BUFFER,o,this.context.STATIC_DRAW),i.itemSize=3,i.numItems=parseInt(o.length/3,10);var r=this.context.createBuffer(),n=new Float32Array(e);this.context.bindBuffer(this.context.ARRAY_BUFFER,r),this.context.bufferData(this.context.ARRAY_BUFFER,n,this.context.STATIC_DRAW),r.itemSize=3,r.numItems=parseInt(n.length/3,10),this.points.push({pointArray:o,pointBuffer:i,colorBuffer:r})},t.PointCloudRenderer.prototype.RemovePoints=function(){this.points=[]},t.PointCloudRenderer.prototype.Resize=function(){this.context.viewport(0,0,this.canvas.width,this.canvas.height)},t.PointCloudRenderer.prototype.Render=function(){this.context.clear(this.context.COLOR_BUFFER_BIT|this.context.DEPTH_BUFFER_BIT);var e=t.MatrixPerspective(this.camera.fieldOfView*t.DegRad,this.canvas.width/this.canvas.height,this.camera.nearClippingPlane,this.camera.farClippingPlane);this.context.uniformMatrix4fv(this.shader.pMatrixUniform,!1,e);var i,o,r,n=t.MatrixView(this.camera.eye,this.camera.center,this.camera.up);for(this.context.uniformMatrix4fv(this.shader.vMatrixUniform,!1,n),this.context.uniform1f(this.shader.pointSizeUniform,this.pointSize),i=0;i<this.points.length;i++)o=this.points[i].pointBuffer,r=this.points[i].colorBuffer,this.context.bindBuffer(this.context.ARRAY_BUFFER,o),this.context.vertexAttribPointer(this.shader.vertexPositionAttribute,o.itemSize,this.context.FLOAT,!1,0,0),this.context.bindBuffer(this.context.ARRAY_BUFFER,r),this.context.vertexAttribPointer(this.shader.vertexColorAttribute,r.itemSize,this.context.FLOAT,!1,0,0),this.context.drawArrays(this.context.POINTS,0,o.numItems)},t});
//# sourceMappingURL=../sourcemaps/renderer/pointcloudrenderer.js.map
